// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_43_H__
#define __L3_up_L2_WEIGHTS_43_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_43_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_43_ram) {
        ram[0] = "0b00111101000111101010101110111101";
        ram[1] = "0b10111101011010101100001000010110";
        ram[2] = "0b10111101110101011011011100000111";
        ram[3] = "0b10111101110010001011111111000010";
        ram[4] = "0b10111100110111000010011011011101";
        ram[5] = "0b00111101100000110100001100110001";
        ram[6] = "0b00111101111110000001101001011000";
        ram[7] = "0b00111101110010100101111001111000";
        ram[8] = "0b00111100001101000110011101111011";
        ram[9] = "0b10111101101001101011110101101111";
        ram[10] = "0b10111110000001100100110001110011";
        ram[11] = "0b10111101110011110000001100001000";
        ram[12] = "0b10111010011010000100001001110100";
        ram[13] = "0b00111101100110100100111100000001";
        ram[14] = "0b00111101111001100001100001001000";
        ram[15] = "0b00111101100011001011100001011010";
        ram[16] = "0b10111100000110110001011101001000";
        ram[17] = "0b10111101011111110000010101100100";
        ram[18] = "0b10111101011110111010001101000100";
        ram[19] = "0b10111100100011011001010100010100";
        ram[20] = "0b10111100000000010101101000001000";
        ram[21] = "0b10111011111110000010011011101110";
        ram[22] = "0b10111010001110000000011001101100";
        ram[23] = "0b00111100100010000101011011100111";
        ram[24] = "0b00111101011100001000101010101101";
        ram[25] = "0b00111101011001001101011011100100";
        ram[26] = "0b10111101101011100010011011010101";
        ram[27] = "0b10111101110110100011111101000110";
        ram[28] = "0b10111101010000101010001101001000";
        ram[29] = "0b00111101011110010011011110001111";
        ram[30] = "0b00111110000111100001101111010010";
        ram[31] = "0b00111101110111111011000011010101";
        ram[32] = "0b10111100100110000010000000011101";
        ram[33] = "0b10111110000011111100100001101101";
        ram[34] = "0b10111110001011000110011000001010";
        ram[35] = "0b10111101100100111101111110110001";
        ram[36] = "0b00111101100001110011101111001001";
        ram[37] = "0b00111110000101101001010010001010";
        ram[38] = "0b00111110000000011011101100000110";
        ram[39] = "0b00111101000110111001101001011011";
        ram[40] = "0b10111101010101101010000001010101";
        ram[41] = "0b10111101101101110001100101110010";
        ram[42] = "0b10111101101010101110001010010111";
        ram[43] = "0b10111101001110000111011110101011";
        ram[44] = "0b10111100101011001100000010111110";
        ram[45] = "0b00111101000010101110010000101010";
        ram[46] = "0b00111101100100001100111101011011";
        ram[47] = "0b00111101110011111010110001100000";
        ram[48] = "0b00111101100110011011101110101110";
        ram[49] = "0b10111100010100110010110001100010";
        ram[50] = "0b10111101111101101101000010010001";
        ram[51] = "0b10111110000100011001100101111000";
        ram[52] = "0b10111101111001110001111101111001";
        ram[53] = "0b10111101110111000111001011100010";
        ram[54] = "0b10111100110101111011110001111111";
        ram[55] = "0b00111101100010111111000110100110";
        ram[56] = "0b00111101111001101101110111110000";
        ram[57] = "0b00111101110000100001110100010001";
        ram[58] = "0b00111100010110111001100001000010";
        ram[59] = "0b10111101100110011010101101101101";
        ram[60] = "0b10111110000000001100010100100010";
        ram[61] = "0b10111101110110000010110110111110";
        ram[62] = "0b10111100010111001010110100010101";
        ram[63] = "0b00111101101010011000011011111101";
        ram[64] = "0b00111110000000010101000011011011";
        ram[65] = "0b00111101101100010000011111111011";
        ram[66] = "0b10111011010101111010110111010001";
        ram[67] = "0b10111101101011001111100011010111";
        ram[68] = "0b10111101101011001101110110010100";
        ram[69] = "0b10111101001011000110001101101011";
        ram[70] = "0b00111100010001011000011010000111";
        ram[71] = "0b00111101000001111100111010010110";
        ram[72] = "0b00111100100011100010110000010011";
        ram[73] = "0b00111100100001101000110110111001";
        ram[74] = "0b00111100111100011010100111111100";
        ram[75] = "0b00111101000111000111000001000011";
        ram[76] = "0b10111011010000100011111110101011";
        ram[77] = "0b10111101011001001100001011111000";
        ram[78] = "0b10111101100001010011111111000000";
        ram[79] = "0b00111101000101100011100010000110";
        ram[80] = "0b00111101111100111000100100101111";
        ram[81] = "0b00111101111100000110001011010100";
        ram[82] = "0b00111100110000001010100011010010";
        ram[83] = "0b10111101111000000000111110111011";
        ram[84] = "0b10111110001100110101110010011110";
        ram[85] = "0b10111101110000011001001010100111";
        ram[86] = "0b00111101001001100000111101011110";
        ram[87] = "0b00111110001000010011111000111110";
        ram[88] = "0b00111110000111001000101101000100";
        ram[89] = "0b00111101011000111101111001100001";
        ram[90] = "0b10111101100011110100110011110101";
        ram[91] = "0b10111110000000110011001100110011";
        ram[92] = "0b10111101110001010101000010000111";
        ram[93] = "0b10111101000010011010100010001011";
        ram[94] = "0b00111100101101001100000110101001";
        ram[95] = "0b00111101100000110101011100011101";
        ram[96] = "0b00111101100110010010010100110101";
        ram[97] = "0b00111101100110110110011001110011";
        ram[98] = "0b00111101011101101001110010101010";
        ram[99] = "0b10111100011011101001010101110100";
        ram[100] = "0b10111101101110000011110111111111";
        ram[101] = "0b10111110000001100110000101101011";
        ram[102] = "0b10111101101100110001110010101000";
        ram[103] = "0b00111100101111010001111011011010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_43) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_43_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_43) {
meminst = new L3_up_L2_WEIGHTS_43_ram("L3_up_L2_WEIGHTS_43_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_43() {
    delete meminst;
}


};//endmodule
#endif
