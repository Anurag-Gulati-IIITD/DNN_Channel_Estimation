// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_32_H__
#define __L3_up_L2_WEIGHTS_32_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_32_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_32_ram) {
        ram[0] = "0b10111100110110010000100111110010";
        ram[1] = "0b10111101101010111010101001011000";
        ram[2] = "0b10111101100001001111110010100100";
        ram[3] = "0b10111101011100011111101010111001";
        ram[4] = "0b00111100100101011111110011000010";
        ram[5] = "0b10111011101111011111010011000011";
        ram[6] = "0b00111100111110011100000111111000";
        ram[7] = "0b10111100000110100100110111110100";
        ram[8] = "0b00111100111000010111101000000011";
        ram[9] = "0b00111101001001111000011011000010";
        ram[10] = "0b00111100101000100011011111001110";
        ram[11] = "0b10111100111000111000110010010111";
        ram[12] = "0b10111100111001001000000111110101";
        ram[13] = "0b10111101110001100011000101110010";
        ram[14] = "0b10111100101010001101111010110001";
        ram[15] = "0b00111100100100001000010111110101";
        ram[16] = "0b00111101010100010010001100111110";
        ram[17] = "0b00111101010000001011101110110010";
        ram[18] = "0b10111100110001011010010111111100";
        ram[19] = "0b10111101001000100101110110001101";
        ram[20] = "0b10111101001000101011001110001001";
        ram[21] = "0b10111011101111100101000100001001";
        ram[22] = "0b00111100111101100101010101011100";
        ram[23] = "0b00111100011101101100111011111111";
        ram[24] = "0b00111100100010100010110010101010";
        ram[25] = "0b10111101001100100001111001100000";
        ram[26] = "0b00111100000111101111100101010101";
        ram[27] = "0b00111100100110101110111101110000";
        ram[28] = "0b00111011111100001000110011000101";
        ram[29] = "0b10111101000001100101000011100111";
        ram[30] = "0b10111100000000001010111000010000";
        ram[31] = "0b00110111000101101111111010110101";
        ram[32] = "0b00111101100011011000011101110010";
        ram[33] = "0b00111101010110011110001100000000";
        ram[34] = "0b00111100001010001010110001011100";
        ram[35] = "0b10111101001011110001000000100011";
        ram[36] = "0b10111101100001010010001011101010";
        ram[37] = "0b10111100111111000110010101000001";
        ram[38] = "0b00111011101011100110010000101100";
        ram[39] = "0b00111100110001101100011101100101";
        ram[40] = "0b00111100001001000010101011101101";
        ram[41] = "0b10111100100001010010101101001110";
        ram[42] = "0b10111101010010000010000101101100";
        ram[43] = "0b00111101000011111101011011011000";
        ram[44] = "0b00111101001000101000100010001011";
        ram[45] = "0b00111101101011000000101111011101";
        ram[46] = "0b00111100011110001011100110111011";
        ram[47] = "0b10111101010011000111110000001111";
        ram[48] = "0b10111101110001010011101100001000";
        ram[49] = "0b10111101111001111011110011000011";
        ram[50] = "0b10111101011111010001010001011110";
        ram[51] = "0b00111101010001000011000110111110";
        ram[52] = "0b10111110000100101100010101011101";
        ram[53] = "0b10111100111101011111110101001000";
        ram[54] = "0b00111100110011010110001111001100";
        ram[55] = "0b00111101001001101111100100110011";
        ram[56] = "0b00111101010000100010011110001101";
        ram[57] = "0b00111100111001111010111110100111";
        ram[58] = "0b10111100010110100000010110011010";
        ram[59] = "0b00111011001000100111011010111000";
        ram[60] = "0b00111100101000010010110101110111";
        ram[61] = "0b10111010100000000101000111001010";
        ram[62] = "0b10111101001111111100101010000110";
        ram[63] = "0b10111100100010011001111000001110";
        ram[64] = "0b10111100110011000010100100111001";
        ram[65] = "0b00111100100011011011101011010100";
        ram[66] = "0b00111101011000101001101001011111";
        ram[67] = "0b00111100111111110110011011101000";
        ram[68] = "0b10111011000100111010011100010001";
        ram[69] = "0b10111101001111011010100000110111";
        ram[70] = "0b10111011110011110011000100101011";
        ram[71] = "0b10111011100110100100110111110100";
        ram[72] = "0b00111101010001101110110000011000";
        ram[73] = "0b00111101011100110001011011100011";
        ram[74] = "0b00111100101100010001010000001010";
        ram[75] = "0b10111100101011000110110011011011";
        ram[76] = "0b10111100111001011111100101011001";
        ram[77] = "0b10111100111000100110101100101111";
        ram[78] = "0b00111100111001110001000001000101";
        ram[79] = "0b10111011101011010001010010100001";
        ram[80] = "0b10111100100100101000100111011011";
        ram[81] = "0b10111011001101100110001011111110";
        ram[82] = "0b00111101010111011011000000010100";
        ram[83] = "0b00111100110100001001100111100001";
        ram[84] = "0b00111100100000001111011101110111";
        ram[85] = "0b10111101001110001001000111100010";
        ram[86] = "0b10111101001011110011010011010111";
        ram[87] = "0b10111101011001111001000000110010";
        ram[88] = "0b10111011011100100110101011101100";
        ram[89] = "0b00111101100000111110011101001011";
        ram[90] = "0b00111101001111100111001010010111";
        ram[91] = "0b00111100111101110100110011010011";
        ram[92] = "0b10111100001101000111100001000010";
        ram[93] = "0b10111101011010101111011010000011";
        ram[94] = "0b10111011100100010111110101101011";
        ram[95] = "0b00111101001011001010101111000101";
        ram[96] = "0b00111101000001000001010001100010";
        ram[97] = "0b10111100110010001010100110111101";
        ram[98] = "0b10111101010100110001000100011111";
        ram[99] = "0b10111101100100010000010011010101";
        ram[100] = "0b10111011100001010101010100111111";
        ram[101] = "0b00111101100011110001001000111100";
        ram[102] = "0b00111101110001100111000001011101";
        ram[103] = "0b00111101101010000111000010010111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_32) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_32_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_32) {
meminst = new L3_up_L2_WEIGHTS_32_ram("L3_up_L2_WEIGHTS_32_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_32() {
    delete meminst;
}


};//endmodule
#endif
