// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_20_H__
#define __L3_up_L2_WEIGHTS_20_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_20_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_20_ram) {
        ram[0] = "0b10111100011100010010110000101000";
        ram[1] = "0b10111100000011011000111011001001";
        ram[2] = "0b00111011011011101101000000101101";
        ram[3] = "0b00111011101110111011000111110010";
        ram[4] = "0b00111100000010100110100101111011";
        ram[5] = "0b00111011100100000011111010100111";
        ram[6] = "0b10111001011001011010001101011101";
        ram[7] = "0b10111001111100011011001001011111";
        ram[8] = "0b10111010101000001111010011011000";
        ram[9] = "0b00111001001010111111011101101010";
        ram[10] = "0b10111001001010111111011101101010";
        ram[11] = "0b10111011010011001011110000000110";
        ram[12] = "0b00111011001001110000110100100000";
        ram[13] = "0b10111001111110010000100101101100";
        ram[14] = "0b00111011100000011101110000001110";
        ram[15] = "0b00111010111100001010010111110000";
        ram[16] = "0b00111010101010110000110010001001";
        ram[17] = "0b10111010111001000111010101100000";
        ram[18] = "0b00111001111011110001001101001001";
        ram[19] = "0b10111011000000111000011111011111";
        ram[20] = "0b10111011110101011100011101000111";
        ram[21] = "0b10111011100110001011101101001101";
        ram[22] = "0b10111001100011101001101100111001";
        ram[23] = "0b00111011100000001110000001100101";
        ram[24] = "0b00111011001011100010000100010000";
        ram[25] = "0b10111000110111000011001101110010";
        ram[26] = "0b00111010111101100100100011000111";
        ram[27] = "0b00111011000001010101110110100010";
        ram[28] = "0b10111011000111001010000110001100";
        ram[29] = "0b10111100000000001111100110010000";
        ram[30] = "0b10111011010101010001111110000010";
        ram[31] = "0b10111000010001010010000111011110";
        ram[32] = "0b10111010110001111100000011110100";
        ram[33] = "0b00111011001011111000000101100010";
        ram[34] = "0b10111010101100000000011110011010";
        ram[35] = "0b00111011000100001100010011011111";
        ram[36] = "0b10111010100011000001110110110000";
        ram[37] = "0b00111010101110000000011001101100";
        ram[38] = "0b10111010101000000000100111110110";
        ram[39] = "0b10111001001100000010100100101000";
        ram[40] = "0b00111011110110000100110100110100";
        ram[41] = "0b00111010110001010110010011111001";
        ram[42] = "0b00111011011111000110000100001111";
        ram[43] = "0b10111011010010000000010000010000";
        ram[44] = "0b10111011101110101001010010111100";
        ram[45] = "0b10111011010111011000001011111101";
        ram[46] = "0b10111010001101101011011011100001";
        ram[47] = "0b10111010110010011111101101100001";
        ram[48] = "0b10111000110100111100111111110110";
        ram[49] = "0b00110111110100011011011100010111";
        ram[50] = "0b10111010011000000010001000010100";
        ram[51] = "0b00111010000010110111010111101010";
        ram[52] = "0b00111011101000110101000011010011";
        ram[53] = "0b00111100000101010111100010100011";
        ram[54] = "0b00111100011001010110010001110011";
        ram[55] = "0b00111011101110110011010000011110";
        ram[56] = "0b10111011100100000011011001000100";
        ram[57] = "0b10111010101111101111100011001111";
        ram[58] = "0b10111011101001101010100001110110";
        ram[59] = "0b10111001110101001101110001100110";
        ram[60] = "0b00111010111011100100100111110101";
        ram[61] = "0b00111001111101111111110011111100";
        ram[62] = "0b00111010000001110000000100010001";
        ram[63] = "0b10111011001001111111100000000001";
        ram[64] = "0b00111011000000011001000010001110";
        ram[65] = "0b00111011010000000001011000000101";
        ram[66] = "0b00111100001011100100011011010000";
        ram[67] = "0b10111001010110000000000110110100";
        ram[68] = "0b10111011100111001111010101101111";
        ram[69] = "0b10111011000101010010100011110010";
        ram[70] = "0b10111011110111110000010011011110";
        ram[71] = "0b00111010100110110011000001110011";
        ram[72] = "0b00111010101011101111101100101011";
        ram[73] = "0b00111011000001000100000001101100";
        ram[74] = "0b00111011010001100011111100010100";
        ram[75] = "0b00111011000100101010101101101001";
        ram[76] = "0b10111010110110100011110000100001";
        ram[77] = "0b10111011000011101011110011000111";
        ram[78] = "0b10111010111011100000011011011001";
        ram[79] = "0b10111000011110111010100010000010";
        ram[80] = "0b10111011100100011000111000110010";
        ram[81] = "0b10111011000100101001101010100010";
        ram[82] = "0b00111001110101100110111100001101";
        ram[83] = "0b00111011100111010010011111000100";
        ram[84] = "0b00111010000001100111101011011001";
        ram[85] = "0b00111010101110110010101110111011";
        ram[86] = "0b00111001001011100001000001001001";
        ram[87] = "0b00111011011000001010100001001100";
        ram[88] = "0b10111011100101011010011011000110";
        ram[89] = "0b00111010000001101011110111110101";
        ram[90] = "0b00111010111111111011100010110010";
        ram[91] = "0b10111010101010000100101111100100";
        ram[92] = "0b00111011100100100100011010111111";
        ram[93] = "0b00111011000100010010100110001001";
        ram[94] = "0b10111011101001100011101101101001";
        ram[95] = "0b10111011001101110010110001010010";
        ram[96] = "0b10111011100110000101111100000111";
        ram[97] = "0b00111011001011100010000100010000";
        ram[98] = "0b00111010000000011100001011100011";
        ram[99] = "0b10111010100010101100111000100101";
        ram[100] = "0b00111010101111011110110001011111";
        ram[101] = "0b00111011011101111001100001010010";
        ram[102] = "0b10111011100011010100101110101101";
        ram[103] = "0b10111011010010000000010000010000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_20) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_20_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_20) {
meminst = new L3_up_L2_WEIGHTS_20_ram("L3_up_L2_WEIGHTS_20_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_20() {
    delete meminst;
}


};//endmodule
#endif
