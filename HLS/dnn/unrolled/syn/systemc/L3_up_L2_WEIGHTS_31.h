// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_31_H__
#define __L3_up_L2_WEIGHTS_31_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_31_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_31_ram) {
        ram[0] = "0b00111110001011000001001001101010";
        ram[1] = "0b00111101111010111110101001001111";
        ram[2] = "0b10111011001110000101101001001111";
        ram[3] = "0b10111101011010010000101111001000";
        ram[4] = "0b10111101011111100111110000000111";
        ram[5] = "0b10111101110010101001000001000111";
        ram[6] = "0b10111100110101001101110001100110";
        ram[7] = "0b00111101000101101110000001001100";
        ram[8] = "0b00111101101111000010010111010000";
        ram[9] = "0b00111101110100110111111100111001";
        ram[10] = "0b00111101010110111000100110010100";
        ram[11] = "0b00111101001000101100011001101001";
        ram[12] = "0b10111100110111010101100100001100";
        ram[13] = "0b10111101100011000001000110100001";
        ram[14] = "0b10111101010011100101111101110100";
        ram[15] = "0b10111101001001000010011010111011";
        ram[16] = "0b00111011101011101001011010000001";
        ram[17] = "0b00111101101011000011001110110101";
        ram[18] = "0b00111101100101110101110100010100";
        ram[19] = "0b00111101100110111110010011001101";
        ram[20] = "0b00111100101101100110001011111110";
        ram[21] = "0b10111101011100011001111110000000";
        ram[22] = "0b10111101000001100101010100011001";
        ram[23] = "0b10111101110100100001110111011010";
        ram[24] = "0b10111101101010001100110001010111";
        ram[25] = "0b10111100110101010011111011110111";
        ram[26] = "0b00111101101001110101001001010100";
        ram[27] = "0b00111101100101110000001001100000";
        ram[28] = "0b00111101000111000100101010000100";
        ram[29] = "0b10111100110010001110110011011001";
        ram[30] = "0b10111101101010101001110001010110";
        ram[31] = "0b10111101100100001110011011110011";
        ram[32] = "0b10111101010011110001010111101000";
        ram[33] = "0b00111101001000101111000001011010";
        ram[34] = "0b00111101101111110011110101111101";
        ram[35] = "0b00111101110100111011000100000111";
        ram[36] = "0b00111101101100110000001101111101";
        ram[37] = "0b00111101001010101110101011111011";
        ram[38] = "0b10111101000111011011011101101011";
        ram[39] = "0b10111100110100011110111110110111";
        ram[40] = "0b10111101100000101101010100010111";
        ram[41] = "0b10111101100101101010001101111011";
        ram[42] = "0b10111101100000001011100010001101";
        ram[43] = "0b10111011100101010011000101010101";
        ram[44] = "0b00111100111000101110011011101011";
        ram[45] = "0b00111101100110000110100001110111";
        ram[46] = "0b00111101101111000100010111001100";
        ram[47] = "0b00111101100101100010010010011010";
        ram[48] = "0b00111011111111111001011100100100";
        ram[49] = "0b10111101101111001010001010011000";
        ram[50] = "0b10111101111100100100011010111111";
        ram[51] = "0b10111101111111110000101010100010";
        ram[52] = "0b00111100010100110010001111111111";
        ram[53] = "0b10111101101011010101001110001011";
        ram[54] = "0b10111110000111100110100101101010";
        ram[55] = "0b10111101100101001101101001001101";
        ram[56] = "0b10111101101000010001001000110100";
        ram[57] = "0b10111100011010110101001011001010";
        ram[58] = "0b00111101100111111010011101100101";
        ram[59] = "0b00111101100111110100000010100011";
        ram[60] = "0b00111101010001101100010101001100";
        ram[61] = "0b00111100101111100001000000000110";
        ram[62] = "0b10111100100100101011110000110000";
        ram[63] = "0b10111101110100111010011000000101";
        ram[64] = "0b10111101011000001001111011011100";
        ram[65] = "0b10111011001101001001111000000010";
        ram[66] = "0b00111100001010101000111010110100";
        ram[67] = "0b00111101100011000111111100110101";
        ram[68] = "0b00111101010000101000011011111001";
        ram[69] = "0b00111101110100110010010110010010";
        ram[70] = "0b00111101100010101011100000100000";
        ram[71] = "0b10111100001010001001111111000111";
        ram[72] = "0b10111101100000001101111111011111";
        ram[73] = "0b10111100101100011000001100110000";
        ram[74] = "0b10111101010100101011100100001010";
        ram[75] = "0b00111100000111100111011101001111";
        ram[76] = "0b00111100001011011110111010111011";
        ram[77] = "0b00111101111000110011001001101010";
        ram[78] = "0b10111100001001010010001001100100";
        ram[79] = "0b10111101010000100110011001110111";
        ram[80] = "0b10111101110000001101110010111010";
        ram[81] = "0b10111101111011100100001100100100";
        ram[82] = "0b10111101000001010110100000011111";
        ram[83] = "0b10111100011101110101110110011010";
        ram[84] = "0b00111101100010010011010100110011";
        ram[85] = "0b00111101110101101110100100110110";
        ram[86] = "0b00111101101100101100010000001101";
        ram[87] = "0b00111101000011110011100110001111";
        ram[88] = "0b10111101010111000111111111111110";
        ram[89] = "0b10111101111010101000110110101000";
        ram[90] = "0b10111101100001001111101000000101";
        ram[91] = "0b10111101001110010111001101010100";
        ram[92] = "0b10111101000011011101111001111010";
        ram[93] = "0b10111011111000010111000110011111";
        ram[94] = "0b00111101000000110001110111110111";
        ram[95] = "0b00111101101110011010101011100111";
        ram[96] = "0b00111110000000010110100000110000";
        ram[97] = "0b00111101010001110100010100111001";
        ram[98] = "0b10111101011010000001011001101010";
        ram[99] = "0b10111101101110100010010010001001";
        ram[100] = "0b10111101110100010001110001101101";
        ram[101] = "0b10111101111011000010000001001111";
        ram[102] = "0b00111011010101000010001111011001";
        ram[103] = "0b00111110000001101000111010000010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_31) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_31_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_31) {
meminst = new L3_up_L2_WEIGHTS_31_ram("L3_up_L2_WEIGHTS_31_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_31() {
    delete meminst;
}


};//endmodule
#endif
