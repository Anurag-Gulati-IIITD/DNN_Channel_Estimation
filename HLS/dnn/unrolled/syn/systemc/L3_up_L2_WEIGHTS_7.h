// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_7_H__
#define __L3_up_L2_WEIGHTS_7_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_7_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_7_ram) {
        ram[0] = "0b10111011011000011110011100010000";
        ram[1] = "0b00111101000000100011111110101011";
        ram[2] = "0b00111100000100110011111000110110";
        ram[3] = "0b10111101000100100011001111011111";
        ram[4] = "0b10111011001011011101110111110100";
        ram[5] = "0b00111100100111000010011111101001";
        ram[6] = "0b00111101110001010010100110111011";
        ram[7] = "0b00111101011010001111011011001111";
        ram[8] = "0b10111101000010000010110011110101";
        ram[9] = "0b10111101100011011000010001001101";
        ram[10] = "0b10111101010011110100010100010111";
        ram[11] = "0b00111100010011010110011111111101";
        ram[12] = "0b00111101101111010111001111001001";
        ram[13] = "0b00111101100010001101111100110111";
        ram[14] = "0b00111100110101111101010110101010";
        ram[15] = "0b10111101100000001101011011110101";
        ram[16] = "0b10111101100110100001111000111111";
        ram[17] = "0b00111001001011010000001111011010";
        ram[18] = "0b00111101100011110101101000010000";
        ram[19] = "0b00111101101010000011100100000100";
        ram[20] = "0b00111011100101010100001000011100";
        ram[21] = "0b10111101011011000110110011011011";
        ram[22] = "0b10111101100111110010101010011101";
        ram[23] = "0b10111101001011101110010000011001";
        ram[24] = "0b00111101010010011111001011111110";
        ram[25] = "0b00111101101011011000101110100100";
        ram[26] = "0b10111011010110101111010010101110";
        ram[27] = "0b10111101010010111111111000111011";
        ram[28] = "0b10111101011110110010010101110000";
        ram[29] = "0b10111101001011110010100001000001";
        ram[30] = "0b00111011011001010110000001000010";
        ram[31] = "0b00111101001000011101101001111011";
        ram[32] = "0b00111100110100111110000010111101";
        ram[33] = "0b00111100111010001000010110010000";
        ram[34] = "0b00111101010000011000011100011110";
        ram[35] = "0b00111100111100110000000111101011";
        ram[36] = "0b10111101000100001000110000111111";
        ram[37] = "0b10111101100000001110011000101010";
        ram[38] = "0b10111101101100100111010011100010";
        ram[39] = "0b10111100111010111010100011000110";
        ram[40] = "0b00111101000100000000000011001001";
        ram[41] = "0b00111101101001011001010110111100";
        ram[42] = "0b00111101101001000100011010110111";
        ram[43] = "0b00111100101001001101110100101111";
        ram[44] = "0b10111101011010011000000000101100";
        ram[45] = "0b10111101101000111011110001001101";
        ram[46] = "0b10111101010111101000111101101101";
        ram[47] = "0b10111100010001011110001011001110";
        ram[48] = "0b00111100101001111110011100111010";
        ram[49] = "0b00111100011111011111110000011010";
        ram[50] = "0b00111101000010011100000010101001";
        ram[51] = "0b00111100111011010010001001000010";
        ram[52] = "0b10111100100110000110110110110101";
        ram[53] = "0b10111100101010010111111000010011";
        ram[54] = "0b10111100011110110000100100100000";
        ram[55] = "0b00111100011110100000100101000110";
        ram[56] = "0b00111101000000101110011101110001";
        ram[57] = "0b00111101001111000100111100111100";
        ram[58] = "0b10111100100101100111110010101111";
        ram[59] = "0b10111101010101100100000011101010";
        ram[60] = "0b10111101100010110011101100110010";
        ram[61] = "0b10111100111001111111000010101010";
        ram[62] = "0b00111100111111101011111100100011";
        ram[63] = "0b00111101101100010100010001000110";
        ram[64] = "0b00111101001011011100100011111100";
        ram[65] = "0b10111101000110001101001101101011";
        ram[66] = "0b10111101100010000100000001011011";
        ram[67] = "0b10111101011001110111101100111001";
        ram[68] = "0b00111100011000100000110011010000";
        ram[69] = "0b00111101100110000110010001000101";
        ram[70] = "0b00111101011110000101001011111000";
        ram[71] = "0b10111101000010111001111011001111";
        ram[72] = "0b10111101101111010011101100101010";
        ram[73] = "0b10111101001110110000111101101011";
        ram[74] = "0b00111100111000101111110111111100";
        ram[75] = "0b00111101101010110000111110101110";
        ram[76] = "0b00111101100110010110010000011111";
        ram[77] = "0b00111011011111100110100100100111";
        ram[78] = "0b10111101010111010000111010011001";
        ram[79] = "0b10111100100100101000100111011011";
        ram[80] = "0b00111001110100110100100110111111";
        ram[81] = "0b00111101000000010001000010100001";
        ram[82] = "0b00111101001001100110001000110101";
        ram[83] = "0b00111100100010000011001101000000";
        ram[84] = "0b00111101000010111011011011101101";
        ram[85] = "0b00111100000010001001110000011011";
        ram[86] = "0b10111100110111111111101000111100";
        ram[87] = "0b10111101000110001111011000000110";
        ram[88] = "0b10111101100010111100011000100010";
        ram[89] = "0b10111100001000001000101111111100";
        ram[90] = "0b00111100111101110100000000111110";
        ram[91] = "0b00111101101000110101000011010011";
        ram[92] = "0b00111101101110010111000100111011";
        ram[93] = "0b00111100100110010010101001110011";
        ram[94] = "0b10111101011110010010110100010011";
        ram[95] = "0b10111101100100011001111011111001";
        ram[96] = "0b10111101011011000111011101010111";
        ram[97] = "0b10111011111100000010100000011100";
        ram[98] = "0b00111100011000000101110011001101";
        ram[99] = "0b00111101010001001110110001100011";
        ram[100] = "0b00111101000110011010110110000110";
        ram[101] = "0b00111100011010010001110010001111";
        ram[102] = "0b00111100011001010111010100111010";
        ram[103] = "0b10111101010110011001110111001011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_7) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_7_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_7) {
meminst = new L3_up_L2_WEIGHTS_7_ram("L3_up_L2_WEIGHTS_7_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_7() {
    delete meminst;
}


};//endmodule
#endif
