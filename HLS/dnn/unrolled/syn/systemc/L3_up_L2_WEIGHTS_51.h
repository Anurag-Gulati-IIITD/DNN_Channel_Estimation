// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_51_H__
#define __L3_up_L2_WEIGHTS_51_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_51_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_51_ram) {
        ram[0] = "0b00111101101110100001011001100001";
        ram[1] = "0b00111101100110110010000100111110";
        ram[2] = "0b00111101001011001100011100001000";
        ram[3] = "0b10111101011010010101111110101011";
        ram[4] = "0b10111110000011111000010010001000";
        ram[5] = "0b10111101111011110010100001000001";
        ram[6] = "0b10111101101000110101101111010101";
        ram[7] = "0b10111011110010001100110101100100";
        ram[8] = "0b00111101101011100001111001110001";
        ram[9] = "0b00111101111110101011001110101011";
        ram[10] = "0b00111101111001010011100101110101";
        ram[11] = "0b00111011001000001110010000010001";
        ram[12] = "0b10111101100101001111110111110100";
        ram[13] = "0b10111101111100111101011111010100";
        ram[14] = "0b10111110000010011110100110001110";
        ram[15] = "0b10111101101001001001110010110010";
        ram[16] = "0b00111100010111101010010001100110";
        ram[17] = "0b00111101101001011110010001100000";
        ram[18] = "0b00111110000000111000110100011110";
        ram[19] = "0b00111101100111111000010111010111";
        ram[20] = "0b00111100100101101100000111100011";
        ram[21] = "0b10111101000001001101101110011100";
        ram[22] = "0b10111101111100111100101010111000";
        ram[23] = "0b10111101100111000011100010110000";
        ram[24] = "0b10111101001001110110011001000001";
        ram[25] = "0b00111100011111111100010101001000";
        ram[26] = "0b00111101101011011100010111010110";
        ram[27] = "0b00111101110011111100010110001011";
        ram[28] = "0b00111101100011111101010111001011";
        ram[29] = "0b00111100101001101101100010110010";
        ram[30] = "0b10111101011001011101010010100110";
        ram[31] = "0b10111110000010100010111100000110";
        ram[32] = "0b10111110000011110001101100100110";
        ram[33] = "0b10111101111000010001110000101010";
        ram[34] = "0b00111011011101110010001011100010";
        ram[35] = "0b00111101110101101010110001100100";
        ram[36] = "0b00111110000000001110001011000001";
        ram[37] = "0b00111101101100011111101010111001";
        ram[38] = "0b00111100100101010101010011111100";
        ram[39] = "0b10111101101111000111101000111010";
        ram[40] = "0b10111101111000001110101001011011";
        ram[41] = "0b10111101101100010100011011100101";
        ram[42] = "0b10111101000100000101111100101001";
        ram[43] = "0b00111010100100110011000110100001";
        ram[44] = "0b00111101011001010101010111000101";
        ram[45] = "0b00111101101100010011101101011100";
        ram[46] = "0b00111101110110010101000000110011";
        ram[47] = "0b00111101011000101100101010011011";
        ram[48] = "0b10111011110010110001000000110100";
        ram[49] = "0b10111101110000100001001110100001";
        ram[50] = "0b10111110000101101101100001101111";
        ram[51] = "0b10111101111010101101111011101100";
        ram[52] = "0b10111100001111000011100000101010";
        ram[53] = "0b10111101100011101001000000110110";
        ram[54] = "0b10111101110011100011010110000011";
        ram[55] = "0b10111101111100101001011001110000";
        ram[56] = "0b10111100101011100100100011101001";
        ram[57] = "0b00111101100110110100000111000000";
        ram[58] = "0b00111101111001001011101000001111";
        ram[59] = "0b00111110000100000011101100111111";
        ram[60] = "0b00111101110001010110110001010001";
        ram[61] = "0b10111100010011100010010010111100";
        ram[62] = "0b10111101111001101110010000111011";
        ram[63] = "0b10111101111010000111010101001111";
        ram[64] = "0b10111101111101011001011110010010";
        ram[65] = "0b10111101100110001001111110000100";
        ram[66] = "0b00111101011001101110111111000011";
        ram[67] = "0b00111101111001111000011000111100";
        ram[68] = "0b00111110000100101000101111110100";
        ram[69] = "0b00111101000100101011100100001010";
        ram[70] = "0b10111101001011010010101110110010";
        ram[71] = "0b10111101110101010101110001010011";
        ram[72] = "0b10111101111000110001001001101111";
        ram[73] = "0b10111101111101100010000011101111";
        ram[74] = "0b10111101000001011111000001101111";
        ram[75] = "0b00111101000011001110101000101001";
        ram[76] = "0b00111101111110100100101101010101";
        ram[77] = "0b00111101100001100011010000010001";
        ram[78] = "0b00111101100011010101110011111011";
        ram[79] = "0b10111011111000101110001010111001";
        ram[80] = "0b10111101011010010110110101001100";
        ram[81] = "0b10111101101100110110101011000110";
        ram[82] = "0b10111110000000001000011101000100";
        ram[83] = "0b10111100111000011000000001001110";
        ram[84] = "0b00111101010100000100111001100010";
        ram[85] = "0b00111101111001100101100111010001";
        ram[86] = "0b00111110000010011000000001101111";
        ram[87] = "0b00111101100111110110011111110101";
        ram[88] = "0b10111011111111111011100010110010";
        ram[89] = "0b10111101100001000111010011011010";
        ram[90] = "0b10111101111111100100111001101010";
        ram[91] = "0b10111101101100100000001110100011";
        ram[92] = "0b10111011011001000010000101111101";
        ram[93] = "0b00111101100000110000000110101000";
        ram[94] = "0b00111101110001110000101110001101";
        ram[95] = "0b00111101100001100110011111111001";
        ram[96] = "0b00111101000001110010110100011011";
        ram[97] = "0b00111100011010011100010001010100";
        ram[98] = "0b10111011000100011100000010000111";
        ram[99] = "0b10111101100011001010101010111001";
        ram[100] = "0b10111110000001110111111010100010";
        ram[101] = "0b10111101101100011000101000000001";
        ram[102] = "0b10111100010001001100110111111011";
        ram[103] = "0b00111101100100110011011001011001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_51) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_51_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_51) {
meminst = new L3_up_L2_WEIGHTS_51_ram("L3_up_L2_WEIGHTS_51_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_51() {
    delete meminst;
}


};//endmodule
#endif
