// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_44_H__
#define __L3_up_L2_WEIGHTS_44_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_44_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_44_ram) {
        ram[0] = "0b00111011110010011100100100001100";
        ram[1] = "0b10111010111100101001110101000001";
        ram[2] = "0b00111011010000011110101111001000";
        ram[3] = "0b00111011110100110101001000100010";
        ram[4] = "0b00111010010000000010011011001100";
        ram[5] = "0b10111011100111101110110011000000";
        ram[6] = "0b00111011000100011100000010000111";
        ram[7] = "0b10111011101100110101011011011010";
        ram[8] = "0b10111011000010100010011001011111";
        ram[9] = "0b00111010100100001011010000011000";
        ram[10] = "0b00111011011000111011110011010011";
        ram[11] = "0b00111011011110111101101011010111";
        ram[12] = "0b00111011111001101000111000111111";
        ram[13] = "0b00111011110110010101100110100011";
        ram[14] = "0b10111011010110001100101100001000";
        ram[15] = "0b10111100010100001010001001000100";
        ram[16] = "0b10111011010001110001100100101111";
        ram[17] = "0b10111010010111111001101111011100";
        ram[18] = "0b00111011001110011100101101101000";
        ram[19] = "0b00111011101001011110111111101001";
        ram[20] = "0b10111011110101011111000100111001";
        ram[21] = "0b10111011001000001001000000101110";
        ram[22] = "0b00111011110100110001111111001101";
        ram[23] = "0b00111011100011000110000011001100";
        ram[24] = "0b10111010000101011111001001000101";
        ram[25] = "0b00111011001111011100101011010001";
        ram[26] = "0b10111100001000101001100001000110";
        ram[27] = "0b00111100000110010101111011100001";
        ram[28] = "0b10111001111001001001011011101110";
        ram[29] = "0b00111011110100010100000110100111";
        ram[30] = "0b00111011100101100010110011111110";
        ram[31] = "0b10111100000011100000100001101100";
        ram[32] = "0b10111100000100001101010110100110";
        ram[33] = "0b10111011101101100111001111000101";
        ram[34] = "0b00111001111100100011100010010111";
        ram[35] = "0b00111010101111100111001010010111";
        ram[36] = "0b00111100001001100001100111011011";
        ram[37] = "0b00111011000000010010101111100101";
        ram[38] = "0b10111010110001101001001011110111";
        ram[39] = "0b10111010101100101000010100100011";
        ram[40] = "0b00111011010100100110111110100100";
        ram[41] = "0b10111010010000100011111110101011";
        ram[42] = "0b10111011001001101000011011101000";
        ram[43] = "0b10111011101111010001001001000101";
        ram[44] = "0b10111001010001110011101010111101";
        ram[45] = "0b00111010011001110111100100100000";
        ram[46] = "0b00111011100010110101010001011100";
        ram[47] = "0b00111011111001101001111100000110";
        ram[48] = "0b00111011110101011010010110111001";
        ram[49] = "0b10111011101100110101011011011010";
        ram[50] = "0b10111011001001010100100000100100";
        ram[51] = "0b10111100001001001110101111011101";
        ram[52] = "0b00111011100000110101110111101110";
        ram[53] = "0b00111010000101101011101110011001";
        ram[54] = "0b10111011100101101010001001101110";
        ram[55] = "0b10111010100010000111001000101010";
        ram[56] = "0b10111011000110001100001110110001";
        ram[57] = "0b10111011010110100101110110101111";
        ram[58] = "0b10111010100111101011101001101011";
        ram[59] = "0b00111011100000111011000111010001";
        ram[60] = "0b00111010111101001101011110101110";
        ram[61] = "0b00111010111101011010000100000001";
        ram[62] = "0b00111011101001000110111000001001";
        ram[63] = "0b00111011100000110011001111111101";
        ram[64] = "0b10111011000110111100011101110001";
        ram[65] = "0b10111100001110111010110111000001";
        ram[66] = "0b10111011001010101101101000110100";
        ram[67] = "0b10111010010010100001110011101111";
        ram[68] = "0b00111011010001111100000011110100";
        ram[69] = "0b00111011111000011001001100101101";
        ram[70] = "0b10111011101100110100011000010011";
        ram[71] = "0b10111011001111100000110111101101";
        ram[72] = "0b00111011100000100011100001010100";
        ram[73] = "0b10111010110000100110000100111001";
        ram[74] = "0b00111011000010001111100001100010";
        ram[75] = "0b00111011011111110000000000100110";
        ram[76] = "0b10111011011000100000100010011110";
        ram[77] = "0b10111100000001111000111110101100";
        ram[78] = "0b10111011001001000101110101000010";
        ram[79] = "0b00111011101011101000111000011101";
        ram[80] = "0b00111100001101001011111110010000";
        ram[81] = "0b10111100000100011010101110001111";
        ram[82] = "0b10111011110000110001000101100010";
        ram[83] = "0b10111011100100010111010100001000";
        ram[84] = "0b10111010101001000101110101000010";
        ram[85] = "0b00111011010010010010000101000111";
        ram[86] = "0b00111100010000110000000010011011";
        ram[87] = "0b00111011001101100001111111100010";
        ram[88] = "0b10111011001010101110101011111011";
        ram[89] = "0b00111010100011010110110100111011";
        ram[90] = "0b10111011000010001010010001111111";
        ram[91] = "0b10111001100000001111100110010000";
        ram[92] = "0b10111000001110001000110010100100";
        ram[93] = "0b00111010010011110001100000000001";
        ram[94] = "0b00111001010110000000000110110100";
        ram[95] = "0b00111001100111001100001100011010";
        ram[96] = "0b00111011001111011111110100100110";
        ram[97] = "0b00111011100011110110110011110000";
        ram[98] = "0b10000000000000000000000000000000";
        ram[99] = "0b10111011011001111100110100000011";
        ram[100] = "0b10111011000101011110000101111110";
        ram[101] = "0b10111100000111100010011110011110";
        ram[102] = "0b10111011100000101110100001111101";
        ram[103] = "0b00111100000001011001010000101001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_44) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_44_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_44) {
meminst = new L3_up_L2_WEIGHTS_44_ram("L3_up_L2_WEIGHTS_44_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_44() {
    delete meminst;
}


};//endmodule
#endif
