// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_46_H__
#define __L3_up_L2_WEIGHTS_46_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_46_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_46_ram) {
        ram[0] = "0b10111100000100100110100001001101";
        ram[1] = "0b10111100100100010101001101111010";
        ram[2] = "0b10111100010101010011100010101100";
        ram[3] = "0b10111010100010011010000000100111";
        ram[4] = "0b00111100001110010110111100100010";
        ram[5] = "0b00111100000111010110111100010001";
        ram[6] = "0b00111010100101000001110010000010";
        ram[7] = "0b10111011100101010111010001110001";
        ram[8] = "0b10111011110100000010010001110000";
        ram[9] = "0b10111010101110110000101000101101";
        ram[10] = "0b00111011111000110001110101110001";
        ram[11] = "0b00111100000011001110011100000100";
        ram[12] = "0b00111011100000011100101101000111";
        ram[13] = "0b00111001010111000011001101110010";
        ram[14] = "0b10111011110001000101000000100111";
        ram[15] = "0b00111011100011100000010000111010";
        ram[16] = "0b00111100100001110000011101011011";
        ram[17] = "0b00111010010000100011111110101011";
        ram[18] = "0b00111011100111001000100001100001";
        ram[19] = "0b10111100001011101000100111101100";
        ram[20] = "0b10111100000111111010110110110000";
        ram[21] = "0b00111011011001001011100001111100";
        ram[22] = "0b00111100100011001001010100111010";
        ram[23] = "0b00111011111101100101000100101011";
        ram[24] = "0b00111010001111010000000101111110";
        ram[25] = "0b10111100000001011101111110101000";
        ram[26] = "0b00111010001011101001011010000001";
        ram[27] = "0b00111011101010000110110101110010";
        ram[28] = "0b00111100000000100110001001000101";
        ram[29] = "0b00111010101000100100010001100011";
        ram[30] = "0b10111011111100110101111000110001";
        ram[31] = "0b10111011001110000101101001001111";
        ram[32] = "0b00111010001110101110100010011111";
        ram[33] = "0b00111010111111001111100000001110";
        ram[34] = "0b00111011001001111101011001110011";
        ram[35] = "0b10111001101110000000011001101100";
        ram[36] = "0b00111010010100110000011010100011";
        ram[37] = "0b00111011001111111011000101011011";
        ram[38] = "0b00111011100000011001100011110010";
        ram[39] = "0b10111011010001011011100011011100";
        ram[40] = "0b10111011011011100100100111110101";
        ram[41] = "0b10111100000011110111100110000101";
        ram[42] = "0b10111010101010110000110010001001";
        ram[43] = "0b00111011000101010101101101000110";
        ram[44] = "0b00111011110110100010101101011010";
        ram[45] = "0b00111011011000100111111000001111";
        ram[46] = "0b00111001100111111110100001101000";
        ram[47] = "0b00111010001100000010100100101000";
        ram[48] = "0b10111011110010001110111011110010";
        ram[49] = "0b10111011100011110100001011111111";
        ram[50] = "0b10111010000001110100010000101100";
        ram[51] = "0b00111011100010111101001000110001";
        ram[52] = "0b10111100100011001101101001101110";
        ram[53] = "0b00111001100101101111111010110101";
        ram[54] = "0b00111100000110001010011001010101";
        ram[55] = "0b00111100011110100010101011010100";
        ram[56] = "0b00111100001000010111101100001111";
        ram[57] = "0b00111010110000000000010100111110";
        ram[58] = "0b10111100001001101101111011111100";
        ram[59] = "0b10111011101101010100111000101011";
        ram[60] = "0b00111011011111100101100001100000";
        ram[61] = "0b00111100001100000101011101001011";
        ram[62] = "0b00111011111011010010010001011011";
        ram[63] = "0b00111011001001100111011000100001";
        ram[64] = "0b10111100000111100010011110011110";
        ram[65] = "0b10111001010011011000010101011001";
        ram[66] = "0b00111100001100000010000011000101";
        ram[67] = "0b00111011101110010101010111111000";
        ram[68] = "0b00111010001100010111100010110011";
        ram[69] = "0b10111011101001111010110010000010";
        ram[70] = "0b10111100011101001011000111101110";
        ram[71] = "0b10111011101010110000010000100101";
        ram[72] = "0b00111100000100010100111101001000";
        ram[73] = "0b00111100000100011111011100001110";
        ram[74] = "0b00111011011100110001001010110010";
        ram[75] = "0b10111011110011001110010111110111";
        ram[76] = "0b10111100011011010001001110010100";
        ram[77] = "0b10111010110001001011110100110100";
        ram[78] = "0b00111100000110011010011000101111";
        ram[79] = "0b00111011101001001000111110010111";
        ram[80] = "0b10111011101010101100000100001001";
        ram[81] = "0b10111100000111011111100101111011";
        ram[82] = "0b10111011001010000101110010101011";
        ram[83] = "0b10111010111111110101010000001001";
        ram[84] = "0b00111100001000001010010100100111";
        ram[85] = "0b00111010111100101001110101000001";
        ram[86] = "0b00111011100000001010010110101101";
        ram[87] = "0b10111010101010000110110101110010";
        ram[88] = "0b00111011001000000100110100010010";
        ram[89] = "0b10111010110000111111001111100000";
        ram[90] = "0b10111011000000101011111010001100";
        ram[91] = "0b10111011100100010111110101101011";
        ram[92] = "0b10111011110011001000000101001101";
        ram[93] = "0b00111010111010001000010110010000";
        ram[94] = "0b00111011100101000111000001100101";
        ram[95] = "0b00111100000010110101110011000000";
        ram[96] = "0b00111011010011010101001100000101";
        ram[97] = "0b10111010100010101010110010010111";
        ram[98] = "0b10111100001000111011100110101110";
        ram[99] = "0b10111011101110110000000111001001";
        ram[100] = "0b10111011010001110000100001101000";
        ram[101] = "0b00111011110011101110010110101100";
        ram[102] = "0b00111100000000010010001110000001";
        ram[103] = "0b10111010011110101001110000010011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_46) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_46_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_46) {
meminst = new L3_up_L2_WEIGHTS_46_ram("L3_up_L2_WEIGHTS_46_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_46() {
    delete meminst;
}


};//endmodule
#endif
