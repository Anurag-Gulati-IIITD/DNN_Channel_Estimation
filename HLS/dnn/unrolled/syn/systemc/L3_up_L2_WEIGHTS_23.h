// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_23_H__
#define __L3_up_L2_WEIGHTS_23_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_23_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_23_ram) {
        ram[0] = "0b00111101101010100000111011000111";
        ram[1] = "0b10111101000100011100110100011100";
        ram[2] = "0b10111101111110011011111111011111";
        ram[3] = "0b10111101110111001110111110101010";
        ram[4] = "0b10111101001001000110011010110010";
        ram[5] = "0b00111101010010000110100010111010";
        ram[6] = "0b00111101110101110000101011000100";
        ram[7] = "0b00111101101110101111001100011011";
        ram[8] = "0b00111100100011010001110110001010";
        ram[9] = "0b10111101010101100010111100010110";
        ram[10] = "0b10111101101011101111101110110001";
        ram[11] = "0b10111101010010100000101000001111";
        ram[12] = "0b00111100000100001010101110110100";
        ram[13] = "0b00111101100110011011111001001101";
        ram[14] = "0b00111101101100110010010100001011";
        ram[15] = "0b00111101000111101000101100111011";
        ram[16] = "0b10111100110111100001001110110010";
        ram[17] = "0b10111101110011111011001100110001";
        ram[18] = "0b10111101110011110101101000010000";
        ram[19] = "0b10111100101101110101011001000011";
        ram[20] = "0b00111101100001110100100001011110";
        ram[21] = "0b00111110000100000100110000000110";
        ram[22] = "0b00111101111001011100010111111000";
        ram[23] = "0b00111100010000011010010001111011";
        ram[24] = "0b10111101110111000100100101110111";
        ram[25] = "0b10111110000101111111000101110011";
        ram[26] = "0b00111101001100011010110000010101";
        ram[27] = "0b00111101110100001111111100010001";
        ram[28] = "0b00111101101111110111101111100001";
        ram[29] = "0b00111011101000000101110111011001";
        ram[30] = "0b10111101101000110100111101000000";
        ram[31] = "0b10111101100100000001110100011001";
        ram[32] = "0b10111100100100100001011010000011";
        ram[33] = "0b00111101010001101001111110001100";
        ram[34] = "0b00111101100001110110100101100110";
        ram[35] = "0b00111100010100000001001110101001";
        ram[36] = "0b10111100111100111010010101111111";
        ram[37] = "0b10111101010110111100011001100101";
        ram[38] = "0b10111101001101101101101010001000";
        ram[39] = "0b00111011101111001001010001110000";
        ram[40] = "0b00111101001010001100001101101110";
        ram[41] = "0b00111101000011101000001000001110";
        ram[42] = "0b00111100101101010011100100110010";
        ram[43] = "0b10111100101000111100100001011100";
        ram[44] = "0b10111100111011011101100010110110";
        ram[45] = "0b10111100110000111110111110101110";
        ram[46] = "0b00111100100101011101100100011011";
        ram[47] = "0b00111101001111110110011011101000";
        ram[48] = "0b00111100101100001100000000100111";
        ram[49] = "0b10111100100011010110101100100011";
        ram[50] = "0b10111101010111110000011011110111";
        ram[51] = "0b10111101010111101101100111100000";
        ram[52] = "0b10111101111101100110111100001101";
        ram[53] = "0b10111110000010000011001001110110";
        ram[54] = "0b10111101011000110000101110011110";
        ram[55] = "0b00111101000110110101001100001101";
        ram[56] = "0b00111101110111111100110000011000";
        ram[57] = "0b00111101110101000101010010011011";
        ram[58] = "0b00111101000101101101101100001110";
        ram[59] = "0b10111101001111100011011111011111";
        ram[60] = "0b10111101110010101000011101011101";
        ram[61] = "0b10111101011101101100101111011010";
        ram[62] = "0b10111011100001011110001111011010";
        ram[63] = "0b00111101010101011111110111001110";
        ram[64] = "0b00111101101000110011011000010101";
        ram[65] = "0b00111101011000110100001000100100";
        ram[66] = "0b10111100100000101111010100010010";
        ram[67] = "0b10111101101010001110111111111110";
        ram[68] = "0b10111101101110101011011001001010";
        ram[69] = "0b10111101010000000100001100011100";
        ram[70] = "0b00111101010010111100101011011010";
        ram[71] = "0b00111101111001010011010010111101";
        ram[72] = "0b00111101110101100001001101001101";
        ram[73] = "0b00111100001010111110101011010101";
        ram[74] = "0b10111101101110000101111110001101";
        ram[75] = "0b10111110000010101000001000011111";
        ram[76] = "0b10111101101111010111001111001001";
        ram[77] = "0b00111100111000010100101111100000";
        ram[78] = "0b00111101111011110101000100100110";
        ram[79] = "0b00111101010000011011101010000000";
        ram[80] = "0b10111101011000110101110001011011";
        ram[81] = "0b10111101101101111111101011100011";
        ram[82] = "0b10111101010011000111101100000011";
        ram[83] = "0b00111100010011000000101111011101";
        ram[84] = "0b00111101100001010101001110101100";
        ram[85] = "0b00111101011000110100101110010100";
        ram[86] = "0b10111100010000110010101010001101";
        ram[87] = "0b10111101100010101000001010100101";
        ram[88] = "0b10111101010100010011010000000101";
        ram[89] = "0b00111011101101011010101001110001";
        ram[90] = "0b00111101001011001001110000001011";
        ram[91] = "0b00111101011010100110100011110101";
        ram[92] = "0b00111100100010001101110100011110";
        ram[93] = "0b10111100000101110000011100011000";
        ram[94] = "0b10111101001100111110010001101001";
        ram[95] = "0b10111100110101111011001000000011";
        ram[96] = "0b10111011111111011011100011111110";
        ram[97] = "0b00111101001011111000001101111011";
        ram[98] = "0b00111100101010000011110100110110";
        ram[99] = "0b10111100010110110100100010010001";
        ram[100] = "0b10111101000010110101111111100101";
        ram[101] = "0b10111101001111011110011100100001";
        ram[102] = "0b10111100110111110110001100111101";
        ram[103] = "0b00111100110101010101011000001000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_23) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_23_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_23) {
meminst = new L3_up_L2_WEIGHTS_23_ram("L3_up_L2_WEIGHTS_23_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_23() {
    delete meminst;
}


};//endmodule
#endif
