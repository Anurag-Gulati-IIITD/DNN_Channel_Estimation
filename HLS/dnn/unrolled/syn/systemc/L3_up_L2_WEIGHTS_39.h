// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_39_H__
#define __L3_up_L2_WEIGHTS_39_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_39_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_39_ram) {
        ram[0] = "0b10111110001010101001000010001010";
        ram[1] = "0b10111110000001100111100000111010";
        ram[2] = "0b10111100100001111000110110010011";
        ram[3] = "0b00111101101001010100010110000100";
        ram[4] = "0b00111101111001011000101100111111";
        ram[5] = "0b00111110000000101110010100010101";
        ram[6] = "0b00111101010110000111000011011010";
        ram[7] = "0b10111100111001010111011101010011";
        ram[8] = "0b10111101101111110111000101100101";
        ram[9] = "0b10111110000001000110000100110001";
        ram[10] = "0b10111101101001110001110111100111";
        ram[11] = "0b10111100110011010101010100011101";
        ram[12] = "0b00111101010101001011101011011000";
        ram[13] = "0b00111101100101100011110010111000";
        ram[14] = "0b00111101101010111111000100100000";
        ram[15] = "0b00111101011110010110011010111110";
        ram[16] = "0b00111011101001101111001111110101";
        ram[17] = "0b10111101101000101111011010100101";
        ram[18] = "0b10111101110000100111100111011101";
        ram[19] = "0b10111101101110101101011001000101";
        ram[20] = "0b10111100111111010100101111110001";
        ram[21] = "0b00111101000001011001100101100111";
        ram[22] = "0b00111101011000000011100100100110";
        ram[23] = "0b00111101110101100000011100111110";
        ram[24] = "0b00111101100110010110101111111101";
        ram[25] = "0b00111011011101100101100110001110";
        ram[26] = "0b10111101110100111000010001110111";
        ram[27] = "0b10111101110010101011011010001101";
        ram[28] = "0b10111101011010110001100000010001";
        ram[29] = "0b00111100111111011000011010101001";
        ram[30] = "0b00111101101110001010001010101001";
        ram[31] = "0b00111101110111001101000111001000";
        ram[32] = "0b00111101101110001011001001100100";
        ram[33] = "0b00111100010011011000010101011001";
        ram[34] = "0b10111101101010101011110001010001";
        ram[35] = "0b10111101111110110111000101110110";
        ram[36] = "0b10111101111101001010011101110010";
        ram[37] = "0b10111101100101101000010100010010";
        ram[38] = "0b00111101000011010010011011111010";
        ram[39] = "0b00111101100101110101101110000001";
        ram[40] = "0b00111101110101100000001100001100";
        ram[41] = "0b00111101110000001000011010111110";
        ram[42] = "0b00111101001111110001100101010000";
        ram[43] = "0b10111011111110110010001001001011";
        ram[44] = "0b10111101010100001001101111111010";
        ram[45] = "0b10111101101011000101100101110101";
        ram[46] = "0b10111101110100100011000010111010";
        ram[47] = "0b10111101101011111110001001100001";
        ram[48] = "0b10111100011011000101001010100100";
        ram[49] = "0b00111101110111111010111111001001";
        ram[50] = "0b00111110000111111101001111110110";
        ram[51] = "0b00111110000100111011000111010001";
        ram[52] = "0b10111010011100110000000111101011";
        ram[53] = "0b00111101110000001111111011001110";
        ram[54] = "0b00111110001001110110101011111001";
        ram[55] = "0b00111101111001100110111001000100";
        ram[56] = "0b00111101100010101001011010010010";
        ram[57] = "0b10111100110101110000011000001100";
        ram[58] = "0b10111101110001011000101100111111";
        ram[59] = "0b10111101111101110111100101100100";
        ram[60] = "0b10111101101001001100101001001111";
        ram[61] = "0b10111100010011111100100000101010";
        ram[62] = "0b00111101010010101010011101011001";
        ram[63] = "0b00111101111001000111111001001010";
        ram[64] = "0b00111101100101110001000000000010";
        ram[65] = "0b00111100101110110110111011010110";
        ram[66] = "0b10111100100111111001110011101001";
        ram[67] = "0b10111101100111111110011011010110";
        ram[68] = "0b10111101101010110000101101111100";
        ram[69] = "0b10111101101011010110100110010000";
        ram[70] = "0b10111101010000111011111101110010";
        ram[71] = "0b00111101000011000110011000001010";
        ram[72] = "0b00111101101010010000100000011100";
        ram[73] = "0b00111101011010111000000011101101";
        ram[74] = "0b00111101010110101111110000000101";
        ram[75] = "0b10111100100100001001011010111100";
        ram[76] = "0b10111101010100101000000101110111";
        ram[77] = "0b10111101110110010101001101011000";
        ram[78] = "0b10111100100011001101001000001011";
        ram[79] = "0b00111101001011101001011010000001";
        ram[80] = "0b00111101110010000100111110010000";
        ram[81] = "0b00111101111011000101000110011000";
        ram[82] = "0b00111101011111000111001111101111";
        ram[83] = "0b00111100101000010001010001001101";
        ram[84] = "0b10111101100010101000100101110110";
        ram[85] = "0b10111110000001101010010111010111";
        ram[86] = "0b10111101111110001000111010111101";
        ram[87] = "0b10111101010011011010010011001111";
        ram[88] = "0b00111101010111000000110110110010";
        ram[89] = "0b00111101111110111010111101010011";
        ram[90] = "0b00111101110101110001100011101100";
        ram[91] = "0b00111101100110000001000101101111";
        ram[92] = "0b00111100100101000110100000000001";
        ram[93] = "0b10111100111110001110111000101000";
        ram[94] = "0b10111101101010000001101110101000";
        ram[95] = "0b10111101110011100111010001101101";
        ram[96] = "0b10111101110000000011000101001000";
        ram[97] = "0b10111101000110110010011100000011";
        ram[98] = "0b00111101010110010110110010000011";
        ram[99] = "0b00111101101110100100100010110110";
        ram[100] = "0b00111110000100111000000001000101";
        ram[101] = "0b00111110000001101111100000100111";
        ram[102] = "0b00111100010111000011011110100100";
        ram[103] = "0b10111110000000100111110100000011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_39) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_39_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_39) {
meminst = new L3_up_L2_WEIGHTS_39_ram("L3_up_L2_WEIGHTS_39_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_39() {
    delete meminst;
}


};//endmodule
#endif
