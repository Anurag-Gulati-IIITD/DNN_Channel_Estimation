// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_47_H__
#define __L3_up_L2_WEIGHTS_47_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_47_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_47_ram) {
        ram[0] = "0b00111010110100011011011100010111";
        ram[1] = "0b00111100011000110010111000111000";
        ram[2] = "0b00111100000001000000000110000010";
        ram[3] = "0b00111011011100000111001110011011";
        ram[4] = "0b10111100000001000010011101000010";
        ram[5] = "0b10111100001111100101110110011110";
        ram[6] = "0b10111100011010001011001110110011";
        ram[7] = "0b10111100001000010110101001001000";
        ram[8] = "0b00111011000000101001110011111110";
        ram[9] = "0b00111100000111111010100101111110";
        ram[10] = "0b00111100001101000110001101001001";
        ram[11] = "0b00111100000001100011011110111101";
        ram[12] = "0b00111010000110010001011110010100";
        ram[13] = "0b10111011101011010111100101001010";
        ram[14] = "0b10111011111010111110010110010111";
        ram[15] = "0b10111011000000110101010110001010";
        ram[16] = "0b10111010101001000011101110110100";
        ram[17] = "0b10111011010110110110101000011111";
        ram[18] = "0b10111011110010111001011001101100";
        ram[19] = "0b00111011010011101011001101010111";
        ram[20] = "0b10111011000000010100110101110010";
        ram[21] = "0b10111001101110011001100100010011";
        ram[22] = "0b00111010101111010110011000100111";
        ram[23] = "0b10111010111001110101011110010011";
        ram[24] = "0b00111010011101001001010010010010";
        ram[25] = "0b00111010100110011110000011100111";
        ram[26] = "0b10111011011010001011011111100101";
        ram[27] = "0b10111011100110110100000100111010";
        ram[28] = "0b10111010100111101101101111111001";
        ram[29] = "0b00111010101101001011111110010000";
        ram[30] = "0b00111011101101110101111010100110";
        ram[31] = "0b00111100010111100110100110101101";
        ram[32] = "0b00111011010001010101010000110011";
        ram[33] = "0b00111010111110010110111000010110";
        ram[34] = "0b10111011101001000001101000100110";
        ram[35] = "0b10111011110010111001011001101100";
        ram[36] = "0b10111011111111111100100101111001";
        ram[37] = "0b10111011110010010111110110001101";
        ram[38] = "0b10111010100011101001101100111001";
        ram[39] = "0b00111010101011011100110100101101";
        ram[40] = "0b00111100001010111111011101101010";
        ram[41] = "0b00111100011100010101000111100111";
        ram[42] = "0b00111011111000110100011101100011";
        ram[43] = "0b10111011000100000011111010100111";
        ram[44] = "0b10111100011010001111101100000001";
        ram[45] = "0b10111100010010001110001001011101";
        ram[46] = "0b10111010111111011110001011101111";
        ram[47] = "0b00111011101110000111001101111001";
        ram[48] = "0b00111100001100010100011001011111";
        ram[49] = "0b00111100001011100011000111010111";
        ram[50] = "0b10111011011011110010010000010000";
        ram[51] = "0b10111011011010000010000011100110";
        ram[52] = "0b00111011111110011011000100110001";
        ram[53] = "0b00111011100010111011000010100011";
        ram[54] = "0b10111011000010010111111010011001";
        ram[55] = "0b10111100011010001010001011101100";
        ram[56] = "0b10111100010001010001100101111010";
        ram[57] = "0b10111100000100111011011111011000";
        ram[58] = "0b00111011111010001000110111110011";
        ram[59] = "0b00111100001110011001110101000101";
        ram[60] = "0b00111100001001101100111000110110";
        ram[61] = "0b00111011101111001011010111111110";
        ram[62] = "0b10111011001111010100010010011010";
        ram[63] = "0b10111100001111101101101101110011";
        ram[64] = "0b10111011110001000001110111010010";
        ram[65] = "0b10111011110111101010000000110100";
        ram[66] = "0b10111010011100011111010101111011";
        ram[67] = "0b00111001010010000100011100101100";
        ram[68] = "0b00111010001001001010000001011110";
        ram[69] = "0b00111011001001010011011101011101";
        ram[70] = "0b10111011001111101111100011001111";
        ram[71] = "0b00111011010110110101100101011000";
        ram[72] = "0b00111011101001001001011111111010";
        ram[73] = "0b10111011010100110011100011111000";
        ram[74] = "0b00111011010010010111010100101001";
        ram[75] = "0b00111010101101110101111010100110";
        ram[76] = "0b10111011011001001000011000100111";
        ram[77] = "0b10111001101100000010100100101000";
        ram[78] = "0b00110111010110100001101010010011";
        ram[79] = "0b00111011011101001001010010010010";
        ram[80] = "0b00111011100111000100110110101001";
        ram[81] = "0b00111100010010011110011001101000";
        ram[82] = "0b00111010100001010010101101001110";
        ram[83] = "0b10111001100011101001101100111001";
        ram[84] = "0b10111011100011010100001101001010";
        ram[85] = "0b10111100001010111110011010100011";
        ram[86] = "0b10111100001010101000011001010001";
        ram[87] = "0b00111001010110000000000110110100";
        ram[88] = "0b10111011000110110001111110101100";
        ram[89] = "0b00111011010111111100111000110001";
        ram[90] = "0b00111100000011010001110110001010";
        ram[91] = "0b00111011111011011110110110101111";
        ram[92] = "0b00111011110100101010000111111001";
        ram[93] = "0b10111000111010001100100010101100";
        ram[94] = "0b10111100001011001001001010011011";
        ram[95] = "0b10111100011111000010001000100101";
        ram[96] = "0b10111011111001000100001100001011";
        ram[97] = "0b00111011011100000111001110011011";
        ram[98] = "0b00111100011011000100011000001111";
        ram[99] = "0b00111100010001100100011101111000";
        ram[100] = "0b10111010110000111000111100110110";
        ram[101] = "0b10111011101011000010000101011100";
        ram[102] = "0b10111100001101001011001011111011";
        ram[103] = "0b10111011111111101100110111010001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_47) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_47_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_47) {
meminst = new L3_up_L2_WEIGHTS_47_ram("L3_up_L2_WEIGHTS_47_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_47() {
    delete meminst;
}


};//endmodule
#endif
