// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_34_H__
#define __L3_up_L2_WEIGHTS_34_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_34_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_34_ram) {
        ram[0] = "0b10111101000100101010101101101001";
        ram[1] = "0b10111101010000101001100111011001";
        ram[2] = "0b00111100000100110111110100100000";
        ram[3] = "0b10111100011110110100001111011001";
        ram[4] = "0b10111101000100110101101110010010";
        ram[5] = "0b10111100111101110111001010010011";
        ram[6] = "0b00111100000001111010010010100101";
        ram[7] = "0b00111101001110001101111001101110";
        ram[8] = "0b00111101100001111100111100011100";
        ram[9] = "0b00111100101110110000110001000110";
        ram[10] = "0b10111101010111011111111111000101";
        ram[11] = "0b10111101110101100111001010111001";
        ram[12] = "0b10111101100000010010001001110101";
        ram[13] = "0b10111100101111111010111101000010";
        ram[14] = "0b00111101010000010110000001010010";
        ram[15] = "0b00111101100000110000011101101100";
        ram[16] = "0b00111100101101011010011001000000";
        ram[17] = "0b10111100110011110100010000001011";
        ram[18] = "0b10111011100110100011010011001010";
        ram[19] = "0b00111101001001001100100000110110";
        ram[20] = "0b00111100100100011100010010111001";
        ram[21] = "0b10111100111100011100100101110001";
        ram[22] = "0b10111101100101001100101000001100";
        ram[23] = "0b10111110000000110101100100110110";
        ram[24] = "0b10111101011100100000111010100110";
        ram[25] = "0b00111101010100010101001101111010";
        ram[26] = "0b00111101111000110011001001101010";
        ram[27] = "0b00111101011100011000110110101100";
        ram[28] = "0b10111101010101111101100111011100";
        ram[29] = "0b10111110000010010011000100000001";
        ram[30] = "0b10111101101001110001011000001001";
        ram[31] = "0b10111101101000010001001010111010";
        ram[32] = "0b00111011000000000011000000111100";
        ram[33] = "0b00111101010110010101101010101111";
        ram[34] = "0b00111101101101101101110110101101";
        ram[35] = "0b00111101110000001010101001100101";
        ram[36] = "0b00111101011000100011011011000001";
        ram[37] = "0b10111100101110101111110110010111";
        ram[38] = "0b10111101101110010001101010111001";
        ram[39] = "0b10111101111101001010000110101101";
        ram[40] = "0b10111101101000100000001111100110";
        ram[41] = "0b00111011000010001111100001100010";
        ram[42] = "0b00111101101001111001011100000011";
        ram[43] = "0b00111110000010001011110010011101";
        ram[44] = "0b00111101100000111001101101000101";
        ram[45] = "0b00111010110000010111011001010111";
        ram[46] = "0b10111101110100111110110011001100";
        ram[47] = "0b10111101110011101100101101110101";
        ram[48] = "0b10111101010011110000011100111010";
        ram[49] = "0b00111011101111101111000001101011";
        ram[50] = "0b00111101000100110110100100110100";
        ram[51] = "0b00111101100001101110100011110011";
        ram[52] = "0b10111100010000010100110001100110";
        ram[53] = "0b10111100101010011000110011000001";
        ram[54] = "0b00111100000001011001010000101001";
        ram[55] = "0b00111100110111100011000100001110";
        ram[56] = "0b00111100000111011101011111101101";
        ram[57] = "0b00111101000011110100110101111011";
        ram[58] = "0b00111101000001000100000101111000";
        ram[59] = "0b00111100101100011100011001001100";
        ram[60] = "0b10111100111010001101100101110011";
        ram[61] = "0b10111101101001000011110011000000";
        ram[62] = "0b10111101100100110100100110111111";
        ram[63] = "0b10111100010011010110110000101111";
        ram[64] = "0b00111101001111101101100001001101";
        ram[65] = "0b00111101101011001010110011010010";
        ram[66] = "0b00111101010000111110010000100110";
        ram[67] = "0b10111100101110011010100111011010";
        ram[68] = "0b10111100110011111000010100001110";
        ram[69] = "0b10111100010001010001110110101100";
        ram[70] = "0b00111100001011101010111110101011";
        ram[71] = "0b00111011101000111100011001000011";
        ram[72] = "0b10111101011001110011011100010001";
        ram[73] = "0b10111101100111111100001100101111";
        ram[74] = "0b10111101011111010001100110011100";
        ram[75] = "0b00111101001010001010001111111001";
        ram[76] = "0b00111101101010100011000011011011";
        ram[77] = "0b00111101110010101010100001100101";
        ram[78] = "0b10111101101000100110100100010110";
        ram[79] = "0b10111110000000110110000100010011";
        ram[80] = "0b10111101110111000000101000000111";
        ram[81] = "0b10111101100000100101100111100010";
        ram[82] = "0b00111101001110010110100011010111";
        ram[83] = "0b00111101101100001110101110101011";
        ram[84] = "0b00111101100001000111101100100100";
        ram[85] = "0b00111101101000110001110011101011";
        ram[86] = "0b00111100110101001101100000110100";
        ram[87] = "0b10111100110000100000110101010110";
        ram[88] = "0b10111101101001111001110011000111";
        ram[89] = "0b10111101110011110111110010101010";
        ram[90] = "0b10111101101011000110111001101110";
        ram[91] = "0b00111011100111001100001100011010";
        ram[92] = "0b00111101110100100000111100101100";
        ram[93] = "0b00111110000011000110101110001011";
        ram[94] = "0b00111101101110110101100111011110";
        ram[95] = "0b00111100101011001111101101110110";
        ram[96] = "0b10111101100101010101101000111010";
        ram[97] = "0b10111101111010010010000000111010";
        ram[98] = "0b10111101000111110000111101011010";
        ram[99] = "0b00111100010011001001101001111000";
        ram[100] = "0b00111101100100111100100000011001";
        ram[101] = "0b00111101100111000000010011001001";
        ram[102] = "0b00111101001011111110110101100011";
        ram[103] = "0b00111100011000010110100100111100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_34) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_34_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_34) {
meminst = new L3_up_L2_WEIGHTS_34_ram("L3_up_L2_WEIGHTS_34_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_34() {
    delete meminst;
}


};//endmodule
#endif
