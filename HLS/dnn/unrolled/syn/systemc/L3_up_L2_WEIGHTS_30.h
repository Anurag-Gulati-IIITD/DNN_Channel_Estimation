// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_30_H__
#define __L3_up_L2_WEIGHTS_30_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_30_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_30_ram) {
        ram[0] = "0b00111110000110010010100110101010";
        ram[1] = "0b00111101110111100100010011111010";
        ram[2] = "0b10111011010100111011111100101111";
        ram[3] = "0b10111101101101110100010101111100";
        ram[4] = "0b10111110000010011110111101010010";
        ram[5] = "0b10111101110001000001010001100010";
        ram[6] = "0b00111011111100100001011100001001";
        ram[7] = "0b00111101101100110010111001111011";
        ram[8] = "0b00111101111101110001100001100101";
        ram[9] = "0b00111101101101000010111111101000";
        ram[10] = "0b00111100010000111110001100011001";
        ram[11] = "0b10111101001100000011111000100001";
        ram[12] = "0b10111101100011111101110010011100";
        ram[13] = "0b10111101001011001001011111011001";
        ram[14] = "0b10111100010010000100011100101100";
        ram[15] = "0b10111011111110001100011001010000";
        ram[16] = "0b00111100111001011110000000101111";
        ram[17] = "0b00111101000001100001001100001010";
        ram[18] = "0b00111100111000111011100010100010";
        ram[19] = "0b00111100110000010111110010100010";
        ram[20] = "0b10111100000001010101100101110001";
        ram[21] = "0b10111100010110011101101110101001";
        ram[22] = "0b10111100111010011000011110000011";
        ram[23] = "0b10111100101111110111000001011000";
        ram[24] = "0b10111011101010001001111111000111";
        ram[25] = "0b00111101001010000111101100010100";
        ram[26] = "0b00111101000011101110111000001111";
        ram[27] = "0b10111101011011111000010010001000";
        ram[28] = "0b10111101110100110011000010010100";
        ram[29] = "0b10111101101000001010001110010100";
        ram[30] = "0b10111011101011011111111110000010";
        ram[31] = "0b00111101111000000100001010010110";
        ram[32] = "0b00111101111001100010100000000010";
        ram[33] = "0b00111101000000011011100001100111";
        ram[34] = "0b10111101010101000100000100110101";
        ram[35] = "0b10111101110111101110010001011100";
        ram[36] = "0b10111101010001100101110101111101";
        ram[37] = "0b00111101001101000011100101011000";
        ram[38] = "0b00111101010011100010010111001000";
        ram[39] = "0b00111100001000001001110011000011";
        ram[40] = "0b10111101100000100111000101111010";
        ram[41] = "0b10111101101011011010001100111100";
        ram[42] = "0b00111100000100011110111010101010";
        ram[43] = "0b00111101101111101101000001110000";
        ram[44] = "0b00111101111110100011111101000110";
        ram[45] = "0b00111100101110001100100101110101";
        ram[46] = "0b10111101100110011010111100011001";
        ram[47] = "0b10111110000011001110001001001100";
        ram[48] = "0b10111101101101010111100100101001";
        ram[49] = "0b00111100001110101110110011010000";
        ram[50] = "0b00111101111100110101100001101101";
        ram[51] = "0b00111101110010001101101001111111";
        ram[52] = "0b00111011110101110111001100011001";
        ram[53] = "0b10111101110011110110000011100001";
        ram[54] = "0b10111110000111001111011010111110";
        ram[55] = "0b10111101110100011100000010000111";
        ram[56] = "0b10111100000001101110011111100110";
        ram[57] = "0b00111101110011110000100011001100";
        ram[58] = "0b00111110000011101100001101010100";
        ram[59] = "0b00111101110010001101101001111111";
        ram[60] = "0b10111001110010111111001010110010";
        ram[61] = "0b10111101011000110110110100100010";
        ram[62] = "0b10111101110010110100011101000001";
        ram[63] = "0b10111101101001011101111010011100";
        ram[64] = "0b10111100011010101010101100000100";
        ram[65] = "0b00111100111100000011110100010100";
        ram[66] = "0b00111101011011000110011010010000";
        ram[67] = "0b00111101001111111011111011111101";
        ram[68] = "0b00111100100111100111100101101000";
        ram[69] = "0b10111100010010111111101100010110";
        ram[70] = "0b10111100000011011011010010001001";
        ram[71] = "0b10111101000001111000000011111110";
        ram[72] = "0b10111100110000110010110010100101";
        ram[73] = "0b10111100110111110101101011011001";
        ram[74] = "0b10111100000101110000001011100110";
        ram[75] = "0b00111101001101001010001000110100";
        ram[76] = "0b00111101100010000110001011110110";
        ram[77] = "0b00111101001101011001101010110111";
        ram[78] = "0b10111101100110111111111100000100";
        ram[79] = "0b10111101100100010000110000101100";
        ram[80] = "0b10111011111110000100000000011000";
        ram[81] = "0b00111101101101100110011110110110";
        ram[82] = "0b00111101111011010111111110010101";
        ram[83] = "0b00111101010010111100100111001101";
        ram[84] = "0b10111101000110010001111111110111";
        ram[85] = "0b10111101110011110100111010000111";
        ram[86] = "0b10111101101011000011011001010100";
        ram[87] = "0b10111011100111000001001011110001";
        ram[88] = "0b00111101100001011111110001111110";
        ram[89] = "0b00111101101000001011100110011001";
        ram[90] = "0b10111000001110001000110010100100";
        ram[91] = "0b10111101010001010001000100010111";
        ram[92] = "0b10111101001101010011011100011001";
        ram[93] = "0b00111101010100011010001000011111";
        ram[94] = "0b00111101110000101001100001000110";
        ram[95] = "0b00111101011100000000100110110011";
        ram[96] = "0b10111101010100001001111000010011";
        ram[97] = "0b10111101111110010111010111110011";
        ram[98] = "0b10111110000001010011011000001101";
        ram[99] = "0b10111100001100100000111110110010";
        ram[100] = "0b00111101110110110011101101110101";
        ram[101] = "0b00111110000000000000101110001001";
        ram[102] = "0b00111101011101101001111011000011";
        ram[103] = "0b10111101001000000100010110111011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_30) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_30_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_30) {
meminst = new L3_up_L2_WEIGHTS_30_ram("L3_up_L2_WEIGHTS_30_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_30() {
    delete meminst;
}


};//endmodule
#endif
