// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_11_H__
#define __L3_up_L2_WEIGHTS_11_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_11_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_11_ram) {
        ram[0] = "0b10111110011101111000001111100000";
        ram[1] = "0b10111101111011011000010101011001";
        ram[2] = "0b00111101100101001000110100111011";
        ram[3] = "0b00111110001110011011110001110111";
        ram[4] = "0b00111101101110110001100111100111";
        ram[5] = "0b10111101011010100100000000010000";
        ram[6] = "0b10111110000000011100000101010001";
        ram[7] = "0b10111101010001010100110111101000";
        ram[8] = "0b00111101011010100100111111001010";
        ram[9] = "0b00111101110100100101000010110101";
        ram[10] = "0b00111101000111100111000100000100";
        ram[11] = "0b10111101001011110000101011100101";
        ram[12] = "0b10111101100011110111011011100110";
        ram[13] = "0b10111100001111001111010011101000";
        ram[14] = "0b00111101010111100101101011111111";
        ram[15] = "0b00111101010111001001011100001111";
        ram[16] = "0b00111100010000000011011110010011";
        ram[17] = "0b10111101011010001000110011100111";
        ram[18] = "0b10111101010100111010001111101100";
        ram[19] = "0b00111011100011101111011101111111";
        ram[20] = "0b00111100111101101100110011100110";
        ram[21] = "0b00111101000001001101110010101001";
        ram[22] = "0b10111100100011100100010100111101";
        ram[23] = "0b10111101000000000110100011011100";
        ram[24] = "0b10111100000010010101000001110110";
        ram[25] = "0b00111101001011000010100110111111";
        ram[26] = "0b00111100100000100101001110010111";
        ram[27] = "0b10111101100101010010000110011011";
        ram[28] = "0b10111101101110110100100000001010";
        ram[29] = "0b10111101011000001000100011010111";
        ram[30] = "0b00111100001101010010000000001000";
        ram[31] = "0b00111101100100001000100000001110";
        ram[32] = "0b00111101011000011111011111010111";
        ram[33] = "0b00111100110001110101011000000000";
        ram[34] = "0b00111100011100100000011001000010";
        ram[35] = "0b10111100000100111011110000001010";
        ram[36] = "0b10111011110111001110101111111111";
        ram[37] = "0b10111100111000000001011110011000";
        ram[38] = "0b10111101100001110011011010001011";
        ram[39] = "0b10111101001100011110111100110001";
        ram[40] = "0b00111100001000010011110000100101";
        ram[41] = "0b00111101010000111010111110111000";
        ram[42] = "0b00111101010011111111000100001111";
        ram[43] = "0b10111100010000010110010110010000";
        ram[44] = "0b10111100101101001011011100101100";
        ram[45] = "0b10111011010100000011010100110111";
        ram[46] = "0b00111101101000010001000010100001";
        ram[47] = "0b00111101100111001000100101101110";
        ram[48] = "0b10111101000010100111011000010000";
        ram[49] = "0b10111110001110100010010111011001";
        ram[50] = "0b10111110010001100010010000010100";
        ram[51] = "0b10111101000111011111011001010101";
        ram[52] = "0b10111100000001111000111110101100";
        ram[53] = "0b00111110001010110000011100000111";
        ram[54] = "0b00111110001101100101101011011110";
        ram[55] = "0b00111100100010100011011100100110";
        ram[56] = "0b10111110000000010101000100011110";
        ram[57] = "0b10111101111101010101000101010000";
        ram[58] = "0b00111011001110101001010010111100";
        ram[59] = "0b00111101110100110010011110101010";
        ram[60] = "0b00111101101100010010100001111100";
        ram[61] = "0b00111011101100001111001001111100";
        ram[62] = "0b10111101101100110101111010110111";
        ram[63] = "0b10111101100011101010101001101101";
        ram[64] = "0b00111100001111100011110000010000";
        ram[65] = "0b00111101100101000001010100101011";
        ram[66] = "0b00111101001110111100001111000110";
        ram[67] = "0b10111100110100101111011111110101";
        ram[68] = "0b10111101100010011010111111100010";
        ram[69] = "0b10111101000100010001010010010000";
        ram[70] = "0b00111100110100111111010110110110";
        ram[71] = "0b00111101000110011101101110101001";
        ram[72] = "0b00111100011111100100101111001011";
        ram[73] = "0b10111101001010011101011000101000";
        ram[74] = "0b10111101000100101111000010011110";
        ram[75] = "0b00111100100100110111110100100000";
        ram[76] = "0b00111101011010110011001101010101";
        ram[77] = "0b00111101001001001100111010000001";
        ram[78] = "0b10111101101010111100100111001101";
        ram[79] = "0b10111101100000101100111101010011";
        ram[80] = "0b00111011011100101001110101000001";
        ram[81] = "0b00111101101001111101010011100001";
        ram[82] = "0b00111101101000101010001101001000";
        ram[83] = "0b00111100110110010111100100011000";
        ram[84] = "0b10111100010011110101011011101011";
        ram[85] = "0b10111100111001010101010111000101";
        ram[86] = "0b10111100110010011110101010011010";
        ram[87] = "0b10111100110100011101100010100101";
        ram[88] = "0b10111100111111101101111010011000";
        ram[89] = "0b10111100100011110001011011110100";
        ram[90] = "0b10111011111010101011111111111101";
        ram[91] = "0b00111101010110101111000001111100";
        ram[92] = "0b00111101011001010000100100111001";
        ram[93] = "0b00111100110111110100000110101111";
        ram[94] = "0b10111100111011110111001111000001";
        ram[95] = "0b10111101000010011110010101011100";
        ram[96] = "0b00111011001100001111001001111100";
        ram[97] = "0b00111101011000010010001011111011";
        ram[98] = "0b00111010000010010001100111110000";
        ram[99] = "0b10111101110001101011110111110101";
        ram[100] = "0b10111110000110011111101111100111";
        ram[101] = "0b10111101100010010000001011011110";
        ram[102] = "0b00111101110101001100001010110101";
        ram[103] = "0b00111110100000111101110010001100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_11) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_11_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_11) {
meminst = new L3_up_L2_WEIGHTS_11_ram("L3_up_L2_WEIGHTS_11_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_11() {
    delete meminst;
}


};//endmodule
#endif
