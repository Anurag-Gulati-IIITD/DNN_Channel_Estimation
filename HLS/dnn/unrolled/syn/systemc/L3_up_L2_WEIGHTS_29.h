// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_29_H__
#define __L3_up_L2_WEIGHTS_29_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_29_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_29_ram) {
        ram[0] = "0b00111101100101100001011101111111";
        ram[1] = "0b00111101010100011001101011001000";
        ram[2] = "0b10111100100111010101010111100111";
        ram[3] = "0b10111101100010111111101100010110";
        ram[4] = "0b10111101100111110110000110101010";
        ram[5] = "0b10111011011000011000001001100110";
        ram[6] = "0b00111100110101011110001010001011";
        ram[7] = "0b00111101001000111101010111111110";
        ram[8] = "0b10111011100101101010101011010010";
        ram[9] = "0b10111101001100111111011000111100";
        ram[10] = "0b10111101000010000011001000110011";
        ram[11] = "0b00111100101010001101111010110001";
        ram[12] = "0b00111101100010010000111001100111";
        ram[13] = "0b00111101001000010110011100100011";
        ram[14] = "0b10111100101101111000000000110100";
        ram[15] = "0b10111101100011100000111010110110";
        ram[16] = "0b10111101011100011010010111001010";
        ram[17] = "0b10111100101011001000011000000101";
        ram[18] = "0b00111100101000000111011100000011";
        ram[19] = "0b00111101000001000110000111111010";
        ram[20] = "0b10111001101000111001001111101110";
        ram[21] = "0b10111100101001100011111110011010";
        ram[22] = "0b10111100001101111110110101000010";
        ram[23] = "0b00111100101111001110001000001001";
        ram[24] = "0b00111101000000100010011010000001";
        ram[25] = "0b00111011100110110010100000001111";
        ram[26] = "0b10111101100000110111110001010111";
        ram[27] = "0b10111101001010001110100000100001";
        ram[28] = "0b00111011111011110000001010000010";
        ram[29] = "0b00111101000010010101001010001111";
        ram[30] = "0b00111101001001101010100110000010";
        ram[31] = "0b00111010011010101001111001101111";
        ram[32] = "0b10111011101011001110101010101111";
        ram[33] = "0b00111100001000011110100000011101";
        ram[34] = "0b00111100110000001001000111000001";
        ram[35] = "0b00111001111000001110101101101000";
        ram[36] = "0b10111100111101001001010010010010";
        ram[37] = "0b10111101010101111000100000010010";
        ram[38] = "0b10111101000100110111011111100010";
        ram[39] = "0b00111100001001111100000101111011";
        ram[40] = "0b00111101010010011001111100011011";
        ram[41] = "0b00111101010011001110000010111001";
        ram[42] = "0b00111010100000010111111111000111";
        ram[43] = "0b10111100110110111000101110101100";
        ram[44] = "0b10111100010010100100111101000100";
        ram[45] = "0b00111011101110011101001111001100";
        ram[46] = "0b00111100011110001100111010110011";
        ram[47] = "0b10111100011111111011000001001111";
        ram[48] = "0b10111100110101010110100011101000";
        ram[49] = "0b10111101000110000000111001001001";
        ram[50] = "0b10111011001001100011001100000101";
        ram[51] = "0b00111101000000001010101011101011";
        ram[52] = "0b00111100001110111000110000110011";
        ram[53] = "0b10111101100110001111011010001100";
        ram[54] = "0b10111101101100001111111010001011";
        ram[55] = "0b10111100111111100000100010101111";
        ram[56] = "0b00111101000000011110011110010110";
        ram[57] = "0b00111101100001110001000001000101";
        ram[58] = "0b00111101001000111101101000110000";
        ram[59] = "0b10111100110101110001100011101100";
        ram[60] = "0b10111101001001101010101110011011";
        ram[61] = "0b10111011110111001010100011100011";
        ram[62] = "0b00111101001000100010100000010011";
        ram[63] = "0b00111101010110001101001001011111";
        ram[64] = "0b00111011101111110101010100010101";
        ram[65] = "0b10111101011011001111010100101100";
        ram[66] = "0b10111101101000001011100010001101";
        ram[67] = "0b10111100111111101110000010110001";
        ram[68] = "0b00111101000000010111110110101111";
        ram[69] = "0b00111101100001010010101011000111";
        ram[70] = "0b00111101000110010110100101011110";
        ram[71] = "0b10111100010001100000100010001101";
        ram[72] = "0b10111100100101011100010000100010";
        ram[73] = "0b10111100011110111000011011110100";
        ram[74] = "0b00111100001110001100011101011100";
        ram[75] = "0b00111100100010001011101110010000";
        ram[76] = "0b10111100100100111110010111111011";
        ram[77] = "0b10111101011001000111001000111011";
        ram[78] = "0b10111011110111000110010111000111";
        ram[79] = "0b00111101000001100110000010100010";
        ram[80] = "0b00111101010100010001001110000011";
        ram[81] = "0b00111100111110001111000001000001";
        ram[82] = "0b10111100011010101110111000100000";
        ram[83] = "0b10111100001100111111101001101110";
        ram[84] = "0b10111100010000001010100011010010";
        ram[85] = "0b00111010100111110001111100010101";
        ram[86] = "0b10111100001101011011111101101010";
        ram[87] = "0b10111100111011101011011100000010";
        ram[88] = "0b10111100111010011100100010000110";
        ram[89] = "0b00111011101000111010010010110101";
        ram[90] = "0b00111101000000111100111100101101";
        ram[91] = "0b00111101011100000010111101110011";
        ram[92] = "0b00111100110010100011010000000001";
        ram[93] = "0b10111100110101001100011101101101";
        ram[94] = "0b10111101000001111011000000101101";
        ram[95] = "0b10111100101110000100011101101111";
        ram[96] = "0b00111100010001110110100011100000";
        ram[97] = "0b00111011101100001100000000100111";
        ram[98] = "0b00111011010001100001110110000110";
        ram[99] = "0b10111100101101110011001010011100";
        ram[100] = "0b10111100011100001001010100101001";
        ram[101] = "0b00111100111111110111000101100101";
        ram[102] = "0b00111101000101100001001111010011";
        ram[103] = "0b00111101010000100111101101110000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_29) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_29_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_29) {
meminst = new L3_up_L2_WEIGHTS_29_ram("L3_up_L2_WEIGHTS_29_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_29() {
    delete meminst;
}


};//endmodule
#endif
