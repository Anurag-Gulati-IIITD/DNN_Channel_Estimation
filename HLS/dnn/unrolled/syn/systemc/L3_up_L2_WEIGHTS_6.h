// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_6_H__
#define __L3_up_L2_WEIGHTS_6_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_6_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_6_ram) {
        ram[0] = "0b10111101000101110010100110110011";
        ram[1] = "0b00111101000010011110110111000000";
        ram[2] = "0b00111100000010010000100100101001";
        ram[3] = "0b00111100100001000010100101011010";
        ram[4] = "0b10111011101001110000010010111100";
        ram[5] = "0b00111100001110011000110001111110";
        ram[6] = "0b00111101001001010001010011000010";
        ram[7] = "0b00111101010011010001011101000000";
        ram[8] = "0b00111011000111100010001101101100";
        ram[9] = "0b10111011101100001110000110110101";
        ram[10] = "0b10111101001010001010011100011110";
        ram[11] = "0b10111101010110100101100001110001";
        ram[12] = "0b10111101000000110101111011111010";
        ram[13] = "0b10111100010101110111001100011001";
        ram[14] = "0b00111101001101000100010011100001";
        ram[15] = "0b00111100110001011111011111000110";
        ram[16] = "0b00111100000111010001001011001011";
        ram[17] = "0b00111011101001111100010110101100";
        ram[18] = "0b10111101000011111000010000000010";
        ram[19] = "0b00111101001011110000011111000000";
        ram[20] = "0b00111101000101110101000110001011";
        ram[21] = "0b00111011000000111101101111000010";
        ram[22] = "0b10111101100100110001100110000011";
        ram[23] = "0b10111101100011011100001010110001";
        ram[24] = "0b10111101000001001011011111110110";
        ram[25] = "0b00111011111001010111000100001001";
        ram[26] = "0b00111101101001011100101000101010";
        ram[27] = "0b00111101001110110111100001000110";
        ram[28] = "0b00111100000011010110010011011000";
        ram[29] = "0b10111100101111100001100001101010";
        ram[30] = "0b10111101010001000001101010101100";
        ram[31] = "0b10111101000110011110111110010101";
        ram[32] = "0b10111101011010100000000000011001";
        ram[33] = "0b10111100001111110110101000001110";
        ram[34] = "0b10111100100001010010110101100110";
        ram[35] = "0b00111100110011110111110010101010";
        ram[36] = "0b00111101001011110011101000010101";
        ram[37] = "0b00111101000000001101101000011011";
        ram[38] = "0b10111011011011010101111100010100";
        ram[39] = "0b10111100110001000011011011111100";
        ram[40] = "0b10111101000110000000101100100100";
        ram[41] = "0b00111100101111111110011111100010";
        ram[42] = "0b00111100110111100011000100001110";
        ram[43] = "0b00111101000000000000101110001001";
        ram[44] = "0b00111011011011011001000101101000";
        ram[45] = "0b10111100001110000010110000101100";
        ram[46] = "0b10111100111000011110011100010000";
        ram[47] = "0b10111101010100001110000000100010";
        ram[48] = "0b10111100101010010111010110110000";
        ram[49] = "0b00111100111001010000100000101101";
        ram[50] = "0b00111101011000001101001101001010";
        ram[51] = "0b00111101101001110101101010111000";
        ram[52] = "0b00111100011001101001101011010100";
        ram[53] = "0b00111101100001010000001101110101";
        ram[54] = "0b00111100100010101000000010001101";
        ram[55] = "0b10111100101100010011001101111111";
        ram[56] = "0b10111011111100111010100110110000";
        ram[57] = "0b10111010001001001110001101111010";
        ram[58] = "0b00111100110001111111110111000110";
        ram[59] = "0b10111010111011011000000010100001";
        ram[60] = "0b10111101001001101110000100010101";
        ram[61] = "0b10111101100101000111111110011001";
        ram[62] = "0b10111101010101001001010000001100";
        ram[63] = "0b10111100101100001011100111011100";
        ram[64] = "0b00111101100011001000011100010010";
        ram[65] = "0b00111101010001011100111111101110";
        ram[66] = "0b00111101000010101000110000010101";
        ram[67] = "0b10111100001001111100000101111011";
        ram[68] = "0b10111100100011000110001011100101";
        ram[69] = "0b10111100011101111111100011001011";
        ram[70] = "0b00111100111011101001011110001101";
        ram[71] = "0b00111100010000011000111110000010";
        ram[72] = "0b10111100011000100101100001001111";
        ram[73] = "0b10111101001110011100101001011100";
        ram[74] = "0b10111011011100000110001011010100";
        ram[75] = "0b00111100100101111111100001000100";
        ram[76] = "0b00111101100000001001100110011110";
        ram[77] = "0b00111101101000110000001100111010";
        ram[78] = "0b00111100001011101000100111101100";
        ram[79] = "0b10111100011111111100000100010110";
        ram[80] = "0b10111101100001001111101110011000";
        ram[81] = "0b10111100101011110111111101001010";
        ram[82] = "0b10111101000000100110010101101011";
        ram[83] = "0b00111010101011010100011011110110";
        ram[84] = "0b00111100010100011011111101111011";
        ram[85] = "0b00111101000011011001001011111011";
        ram[86] = "0b00111100100000010111101110010110";
        ram[87] = "0b00111100110101011011010001100111";
        ram[88] = "0b00111001010110000000000110110100";
        ram[89] = "0b10111100010010001011110010011101";
        ram[90] = "0b10111100101100000100110011001111";
        ram[91] = "0b10111100100000111111111101101001";
        ram[92] = "0b00111100100100101001111011010100";
        ram[93] = "0b00111100011011111101100001101011";
        ram[94] = "0b00111011011010110111100010001001";
        ram[95] = "0b10111101001000111100010000101010";
        ram[96] = "0b10111101011010111111101010001111";
        ram[97] = "0b10111100110101010000100001110000";
        ram[98] = "0b00111011011001110111100100100000";
        ram[99] = "0b00111100101101011010001000001110";
        ram[100] = "0b00111101011110100110100010110010";
        ram[101] = "0b00111101010010101111010011110001";
        ram[102] = "0b00111100100101101000110101110110";
        ram[103] = "0b10111101010101100101111101010010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_6) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_6_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_6) {
meminst = new L3_up_L2_WEIGHTS_6_ram("L3_up_L2_WEIGHTS_6_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_6() {
    delete meminst;
}


};//endmodule
#endif
