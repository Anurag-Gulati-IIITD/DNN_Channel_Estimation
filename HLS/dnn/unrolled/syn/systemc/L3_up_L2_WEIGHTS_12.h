// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_12_H__
#define __L3_up_L2_WEIGHTS_12_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_12_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_12_ram) {
        ram[0] = "0b10111101100000010111110010100010";
        ram[1] = "0b10111101000110111101111010000011";
        ram[2] = "0b10111100111110101010000001000101";
        ram[3] = "0b00111100101111101001100001010111";
        ram[4] = "0b00111101110001001001000010100011";
        ram[5] = "0b00111101101001010000010110001110";
        ram[6] = "0b00111101011101011011010011101110";
        ram[7] = "0b00111100000101011011101110111111";
        ram[8] = "0b10111101100111110110100001111011";
        ram[9] = "0b10111101101110010100101001101111";
        ram[10] = "0b10111101101110110010011001111100";
        ram[11] = "0b10111100000101110101001010010111";
        ram[12] = "0b00111101010110000000001011000001";
        ram[13] = "0b00111110000000011101011010001100";
        ram[14] = "0b00111101111010111011101010011001";
        ram[15] = "0b00111101100000110110001100101100";
        ram[16] = "0b10111100111101110101111110110011";
        ram[17] = "0b10111101101010111100100111001101";
        ram[18] = "0b10111101111011001100111011100110";
        ram[19] = "0b10111101011001010010001001100100";
        ram[20] = "0b10111011100110101100101111001001";
        ram[21] = "0b00111101011011010111100101001010";
        ram[22] = "0b00111101111011100011111001101100";
        ram[23] = "0b00111101011111111000100110000011";
        ram[24] = "0b00111101000100000111010100101110";
        ram[25] = "0b00111001010100011011011100010111";
        ram[26] = "0b10111101010111110111011100101001";
        ram[27] = "0b10111101100110000001111000000100";
        ram[28] = "0b10111101010110101110111001100011";
        ram[29] = "0b10111101001101000100010011100001";
        ram[30] = "0b00111101000100110100000101011011";
        ram[31] = "0b00111101110101000011101011101011";
        ram[32] = "0b00111101111010001001000000001100";
        ram[33] = "0b00111101101101010010001000100001";
        ram[34] = "0b00111100011000110000100001111000";
        ram[35] = "0b10111101100111000000001100110110";
        ram[36] = "0b10111101101111010100011100111001";
        ram[37] = "0b10111101011010101001111101111011";
        ram[38] = "0b10111101000000101110010001001011";
        ram[39] = "0b00111101010000100100111101100110";
        ram[40] = "0b00111101100010110000101001110000";
        ram[41] = "0b00111101011110011110010110011111";
        ram[42] = "0b00111101001111100110110101011001";
        ram[43] = "0b00111100010111001100001000001101";
        ram[44] = "0b10111101000001101100100001110001";
        ram[45] = "0b10111101100110011111100001111111";
        ram[46] = "0b10111101101111111101100010101110";
        ram[47] = "0b10111100111110101010011010001111";
        ram[48] = "0b00111100101000100101111110100110";
        ram[49] = "0b00111101100011110001111011010001";
        ram[50] = "0b00111101110100010110111101000100";
        ram[51] = "0b00111101101001101001111110001100";
        ram[52] = "0b00111011011001011111011101000000";
        ram[53] = "0b00111101010010100110011101100010";
        ram[54] = "0b00111101100010010011111110101111";
        ram[55] = "0b00111101100111100011110100011101";
        ram[56] = "0b00111100011110111100101000010000";
        ram[57] = "0b10111101010011100101110001001111";
        ram[58] = "0b10111101110000101111110011110000";
        ram[59] = "0b10111101110011100011100110110100";
        ram[60] = "0b10111101100010011100100110010011";
        ram[61] = "0b00111100001010110100011101000001";
        ram[62] = "0b00111101110011000111101110001001";
        ram[63] = "0b00111101110100100110010110101110";
        ram[64] = "0b00111101111010010000000011000101";
        ram[65] = "0b00111101100100000011110000001000";
        ram[66] = "0b10111101011011111001101010001101";
        ram[67] = "0b10111101111001101101101111010111";
        ram[68] = "0b10111101111111011111001000100100";
        ram[69] = "0b10111101000101000000001001001011";
        ram[70] = "0b00111101010110000000110000110001";
        ram[71] = "0b00111101110100001010111011011010";
        ram[72] = "0b00111101110010010001000110001100";
        ram[73] = "0b00111101110100101011111111011011";
        ram[74] = "0b00111100101101110101100001011100";
        ram[75] = "0b10111101000000001111001000111001";
        ram[76] = "0b10111101110100101011110010110110";
        ram[77] = "0b10111101010111101010110011001001";
        ram[78] = "0b10111101011011010010000100110110";
        ram[79] = "0b10111010010101100010101111110001";
        ram[80] = "0b00111101000110100010010100010000";
        ram[81] = "0b00111101100111001000110010010011";
        ram[82] = "0b00111101111011000001010101001101";
        ram[83] = "0b00111100110010110001101010110001";
        ram[84] = "0b10111101001100001011010110101010";
        ram[85] = "0b10111101100110111111011110101101";
        ram[86] = "0b10111101110011101000011011000110";
        ram[87] = "0b10111101100011110100100000111101";
        ram[88] = "0b10111100000001001110010000000000";
        ram[89] = "0b00111101000010111000000101110011";
        ram[90] = "0b00111101101100101000100001001000";
        ram[91] = "0b00111101011101010011000111011011";
        ram[92] = "0b00111100011100011110000010000011";
        ram[93] = "0b10111101000101011101101000100111";
        ram[94] = "0b10111101010010110000110000000010";
        ram[95] = "0b10111101001010010010111101101111";
        ram[96] = "0b10111101001100011001101001000001";
        ram[97] = "0b10111100100001101001011000011100";
        ram[98] = "0b10111100010001010011101100001000";
        ram[99] = "0b00111101011100010010011011101001";
        ram[100] = "0b00111101101010010001100111110000";
        ram[101] = "0b00111101010101001100101110011111";
        ram[102] = "0b10111011101100110111000000000100";
        ram[103] = "0b10111101010111100011110110100011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_12) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_12_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_12) {
meminst = new L3_up_L2_WEIGHTS_12_ram("L3_up_L2_WEIGHTS_12_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_12() {
    delete meminst;
}


};//endmodule
#endif
