// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_26_H__
#define __L3_up_L2_WEIGHTS_26_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_26_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_26_ram) {
        ram[0] = "0b10111110000110100100111101000100";
        ram[1] = "0b10111101101011100100010100111101";
        ram[2] = "0b10111100111100001011101011101001";
        ram[3] = "0b00111011110111011000101101100001";
        ram[4] = "0b00111100100111111110011001001111";
        ram[5] = "0b00111101000010001000000011011000";
        ram[6] = "0b00111101011011000111111010101110";
        ram[7] = "0b00111101110010110111101100101001";
        ram[8] = "0b00111101101010010110000000110001";
        ram[9] = "0b00111100100100001011010000011000";
        ram[10] = "0b10111101011010001011001010100111";
        ram[11] = "0b10111101101110011110011110111000";
        ram[12] = "0b10111101101110011000011000110100";
        ram[13] = "0b10111101010100110110000011010000";
        ram[14] = "0b10111100100000011010000101010101";
        ram[15] = "0b00111100110111010010111100011011";
        ram[16] = "0b00111101011011110100010010010001";
        ram[17] = "0b00111101100110001001011110100110";
        ram[18] = "0b00111101101010011101011110111010";
        ram[19] = "0b00111101010101011001110001001001";
        ram[20] = "0b00111100000000011010000101010101";
        ram[21] = "0b10111101001011110101000100100110";
        ram[22] = "0b10111101100111011100100100111111";
        ram[23] = "0b10111101101110100011110000100001";
        ram[24] = "0b10111101101000100100110111010011";
        ram[25] = "0b10111101001010101010100111111000";
        ram[26] = "0b00111101011101000100011011111010";
        ram[27] = "0b00111101101011010100110111000110";
        ram[28] = "0b00111101110000000101100010011011";
        ram[29] = "0b00111101011010101101100000011011";
        ram[30] = "0b00111011110101000110011011110101";
        ram[31] = "0b10111101001001011111011000110100";
        ram[32] = "0b10111101100010011101110001110010";
        ram[33] = "0b10111101100011100011110011011010";
        ram[34] = "0b10111101001100101100011000100110";
        ram[35] = "0b10111101000010011010000100110100";
        ram[36] = "0b00111011001000011111000010000000";
        ram[37] = "0b00111101001101100000011010111000";
        ram[38] = "0b00111101100101010001100010110001";
        ram[39] = "0b00111101101111101100100110011111";
        ram[40] = "0b00111101100100011010100101110110";
        ram[41] = "0b00111011110111011111100001101110";
        ram[42] = "0b10111101010110000111111110001000";
        ram[43] = "0b10111101101100100000001110100011";
        ram[44] = "0b10111101011101111101010100100100";
        ram[45] = "0b10111101001111100010100000100100";
        ram[46] = "0b10111100110000000010000010000001";
        ram[47] = "0b10111100100001111100111010010110";
        ram[48] = "0b10111010110100111010111001101000";
        ram[49] = "0b00111101001110000001011100110011";
        ram[50] = "0b00111110000001000011110100000100";
        ram[51] = "0b00111110000111100001110010011011";
        ram[52] = "0b00111011111111111100000100010110";
        ram[53] = "0b00111101100001110001001111110000";
        ram[54] = "0b00111101101001010100100110110110";
        ram[55] = "0b00111101011101011100010010101000";
        ram[56] = "0b00111101010000010010110111111101";
        ram[57] = "0b00111101010100101101110010110001";
        ram[58] = "0b00111101001001100010011001110000";
        ram[59] = "0b10111100010010111000010110100101";
        ram[60] = "0b10111101100011000001011111101100";
        ram[61] = "0b10111101110001000011000100111000";
        ram[62] = "0b10111101101100101110000111101111";
        ram[63] = "0b10111100111000110101111001110100";
        ram[64] = "0b00111100101011100100111100110011";
        ram[65] = "0b00111101100100101110011000100001";
        ram[66] = "0b00111101100100010010101110100001";
        ram[67] = "0b00111101100101011000000010000000";
        ram[68] = "0b00111101001110001100001000011110";
        ram[69] = "0b00111101000010100111101101001110";
        ram[70] = "0b10111100100101001100101010010010";
        ram[71] = "0b10111101100100010010101110100001";
        ram[72] = "0b10111101101110110011101011101111";
        ram[73] = "0b10111101101100110001011001011101";
        ram[74] = "0b10111101011001100110101110100101";
        ram[75] = "0b10111010011000011011010010111011";
        ram[76] = "0b00111101010100101011101100100011";
        ram[77] = "0b00111101101101111000101000101011";
        ram[78] = "0b00111101100001011001111100101100";
        ram[79] = "0b00111100010010011010011101111110";
        ram[80] = "0b10111101000100111110110001000110";
        ram[81] = "0b10111101100111101011001100010100";
        ram[82] = "0b10111101101110010011011110001111";
        ram[83] = "0b10111101101000011110101101000010";
        ram[84] = "0b10111100111011010110011101110111";
        ram[85] = "0b00111100000010101010110010010111";
        ram[86] = "0b00111101010101001110110000100000";
        ram[87] = "0b00111101100001001110000001010100";
        ram[88] = "0b00111101100101111101101101101110";
        ram[89] = "0b00111101100000000111000010111001";
        ram[90] = "0b00111100110111000110100111111001";
        ram[91] = "0b10111100011011100010110010011001";
        ram[92] = "0b10111101101000010000111010001000";
        ram[93] = "0b10111101111000110010011011100001";
        ram[94] = "0b10111101101001001100011010100100";
        ram[95] = "0b10111100101011001111100101011101";
        ram[96] = "0b00111100111101110000000101010100";
        ram[97] = "0b00111101001011100100100111110101";
        ram[98] = "0b00111100110101010011100010101100";
        ram[99] = "0b00111101001000010000101111101001";
        ram[100] = "0b00111101100001101110010000111011";
        ram[101] = "0b00111101110010010101100001010011";
        ram[102] = "0b00111101010001110100100001011110";
        ram[103] = "0b10111101001100101011111011001111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_26) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_26_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_26) {
meminst = new L3_up_L2_WEIGHTS_26_ram("L3_up_L2_WEIGHTS_26_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_26() {
    delete meminst;
}


};//endmodule
#endif
