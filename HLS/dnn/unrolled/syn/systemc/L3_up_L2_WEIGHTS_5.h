// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_5_H__
#define __L3_up_L2_WEIGHTS_5_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_5_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_5_ram) {
        ram[0] = "0b10111101011110010011101111000001";
        ram[1] = "0b10111101001011110110110001101010";
        ram[2] = "0b00111100100000101110110010101111";
        ram[3] = "0b00111101011001110111011100001000";
        ram[4] = "0b00111101100000111100011001000011";
        ram[5] = "0b00111010111111000101000001001000";
        ram[6] = "0b10111100101101101010000111101000";
        ram[7] = "0b10111101000010010001101011111100";
        ram[8] = "0b00111011101000000111011100000011";
        ram[9] = "0b00111101000110101101000100000111";
        ram[10] = "0b00111100111010010010010011110010";
        ram[11] = "0b10111100100011011001000011100010";
        ram[12] = "0b10111101011001101000000110101010";
        ram[13] = "0b10111101000010100010000100100001";
        ram[14] = "0b00111100100101001101011100101000";
        ram[15] = "0b00111101011011000111000000000000";
        ram[16] = "0b00111101010010010101111100100100";
        ram[17] = "0b00111100100100001001011010111100";
        ram[18] = "0b10111100100000110010000100011101";
        ram[19] = "0b10111100110110110000010101110101";
        ram[20] = "0b00111010001101000101101011100110";
        ram[21] = "0b00111100100011010100011101111100";
        ram[22] = "0b00111100000111000010011111101001";
        ram[23] = "0b10111100100111111100101100001100";
        ram[24] = "0b10111100110110101010001011100100";
        ram[25] = "0b10111011100001110011001101100110";
        ram[26] = "0b00111101010110111010001010111110";
        ram[27] = "0b00111101000011001100110011001101";
        ram[28] = "0b10111011110010010010100110101010";
        ram[29] = "0b10111100111001000101000110111001";
        ram[30] = "0b10111101000010010101111100100100";
        ram[31] = "0b10111001111100101011111011001111";
        ram[32] = "0b00111011100111000001001011110001";
        ram[33] = "0b10111100000010101110011101001111";
        ram[34] = "0b10111100101000101111011010100101";
        ram[35] = "0b10111001100100100100011010111111";
        ram[36] = "0b00111100110011011110101000000011";
        ram[37] = "0b00111101001101001011011000100000";
        ram[38] = "0b00111100111101001011011000100000";
        ram[39] = "0b10111100000110100101001000100110";
        ram[40] = "0b10111101001010110001010011101100";
        ram[41] = "0b10111101001010111110001101111110";
        ram[42] = "0b10111001100111001100001100011010";
        ram[43] = "0b00111100110000010011111111010001";
        ram[44] = "0b00111100001101010010100001101011";
        ram[45] = "0b10111011100100110100101011001011";
        ram[46] = "0b10111100010110000011010000001001";
        ram[47] = "0b00111100010011001000000101001101";
        ram[48] = "0b00111100101011011000011111111001";
        ram[49] = "0b00111100111110100010011010100010";
        ram[50] = "0b00111010110101101111010101000101";
        ram[51] = "0b10111100110101110010101111001011";
        ram[52] = "0b10111100001001111001111111101101";
        ram[53] = "0b00111101011111100100101010111110";
        ram[54] = "0b00111101100100101111001100111101";
        ram[55] = "0b00111100110011111001001110111100";
        ram[56] = "0b10111100110110011000000101111100";
        ram[57] = "0b10111101010111111100001110110101";
        ram[58] = "0b10111101000001011100110011001001";
        ram[59] = "0b00111100101110111111001011110101";
        ram[60] = "0b00111101000011100101000011000110";
        ram[61] = "0b00111011101110011101110000101111";
        ram[62] = "0b10111101000010101000110100100010";
        ram[63] = "0b10111101001101111111100011001011";
        ram[64] = "0b10111011101101101100011110101000";
        ram[65] = "0b00111101010001010110001011100001";
        ram[66] = "0b00111101100001101001001001110001";
        ram[67] = "0b00111100110101111110100010001010";
        ram[68] = "0b10111100110101010110101100000001";
        ram[69] = "0b10111101010111011100101001001011";
        ram[70] = "0b10111100111111011000011010101001";
        ram[71] = "0b00111100001010011001111110100001";
        ram[72] = "0b00111100011110100011001100110111";
        ram[73] = "0b00111100010011011010011011100111";
        ram[74] = "0b10111100001000010001101010010111";
        ram[75] = "0b10111100011010010100111011100100";
        ram[76] = "0b00111100011101110011001110101001";
        ram[77] = "0b00111101001111110010101100100100";
        ram[78] = "0b00111011101110101100011100010001";
        ram[79] = "0b10111100111000001001010101101100";
        ram[80] = "0b10111101001011010101110011111011";
        ram[81] = "0b10111100110011011010110100110010";
        ram[82] = "0b00111100010010100111100100110101";
        ram[83] = "0b00111100000100100111110101000110";
        ram[84] = "0b00111100000110101101110010010000";
        ram[85] = "0b10111010101100101000010100100011";
        ram[86] = "0b00111100000110110000001001001111";
        ram[87] = "0b00111100110001111100000011110100";
        ram[88] = "0b00111100110000110111111001101111";
        ram[89] = "0b10111011100101101011101110011001";
        ram[90] = "0b10111100110111111100001110110101";
        ram[91] = "0b10111101010010001101011111100000";
        ram[92] = "0b10111100101001001100011000011110";
        ram[93] = "0b00111100101110100110001001100111";
        ram[94] = "0b00111100111010001011010111001100";
        ram[95] = "0b00111100100110101111111000011110";
        ram[96] = "0b10111100001100000101111110101111";
        ram[97] = "0b10111011101100110000101101011011";
        ram[98] = "0b10111011010010101000000110011001";
        ram[99] = "0b00111100100101111000001011010100";
        ram[100] = "0b00111100010010111111011011100100";
        ram[101] = "0b10111100110100100010001000001100";
        ram[102] = "0b10111100111101111111000001100111";
        ram[103] = "0b10111101001000001011001111010101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_5) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_5_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_5) {
meminst = new L3_up_L2_WEIGHTS_5_ram("L3_up_L2_WEIGHTS_5_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_5() {
    delete meminst;
}


};//endmodule
#endif
