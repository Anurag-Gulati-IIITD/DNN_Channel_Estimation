// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_8_H__
#define __L3_up_L2_WEIGHTS_8_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_8_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_8_ram) {
        ram[0] = "0b00111101000100011100000010000111";
        ram[1] = "0b00111101110000001101110101000000";
        ram[2] = "0b00111101100001011101001100010011";
        ram[3] = "0b10111101000001010111101011111111";
        ram[4] = "0b10111101110001100111001011111100";
        ram[5] = "0b10111101101010001000111110000110";
        ram[6] = "0b10111100000100010011000111101100";
        ram[7] = "0b00111101100111101101101011101100";
        ram[8] = "0b00111101110010010111010100101001";
        ram[9] = "0b00111100101001110100110000001010";
        ram[10] = "0b10111101011011110000100011001100";
        ram[11] = "0b10111101101101101111111100111011";
        ram[12] = "0b10111101001100001101101001011110";
        ram[13] = "0b00111101001101111011110100000110";
        ram[14] = "0b00111101100001010100010011111110";
        ram[15] = "0b00111101001000000000010111000100";
        ram[16] = "0b10111101001000111100110010001110";
        ram[17] = "0b10111101010110111110010011001101";
        ram[18] = "0b10111100010100101001110111000111";
        ram[19] = "0b00111100110011010101101101101000";
        ram[20] = "0b00111101100110110000010001101000";
        ram[21] = "0b00111100100100110001110010101000";
        ram[22] = "0b10111101010110111000001000111101";
        ram[23] = "0b10111101100111111001011110101011";
        ram[24] = "0b10111101000101001000010101011110";
        ram[25] = "0b00111101010010101001010001111001";
        ram[26] = "0b00111101100011010111000101101101";
        ram[27] = "0b00111011000000110001001001101111";
        ram[28] = "0b10111101100111010101110010111000";
        ram[29] = "0b10111101100111101011101111111101";
        ram[30] = "0b10111101000010001011101010000100";
        ram[31] = "0b00111101001000101000000000101000";
        ram[32] = "0b00111101110000000001000111010011";
        ram[33] = "0b00111101100101001001010100011000";
        ram[34] = "0b10111010100001111110101111110010";
        ram[35] = "0b10111101011010010000111011101101";
        ram[36] = "0b10111101101110110001100101100001";
        ram[37] = "0b10111101010100011111010011110101";
        ram[38] = "0b00111101001111100101111110110111";
        ram[39] = "0b00111101101111100000111110000000";
        ram[40] = "0b00111101101001010010001011101010";
        ram[41] = "0b00111100000110010011110101010011";
        ram[42] = "0b10111101101000101000011011111001";
        ram[43] = "0b10111101110001000001111111101011";
        ram[44] = "0b10111101000011111011010101001010";
        ram[45] = "0b00111101010011111111110110100100";
        ram[46] = "0b00111101101011111110010001111010";
        ram[47] = "0b00111101010000000111010001100100";
        ram[48] = "0b10111100100110111011110011110101";
        ram[49] = "0b10111101010110001011101001000001";
        ram[50] = "0b10111101000111001110100011011001";
        ram[51] = "0b00111011110110100101110110101111";
        ram[52] = "0b00111101101111000000010001000011";
        ram[53] = "0b00111100110011110110110111111100";
        ram[54] = "0b10111101100110101000010110001000";
        ram[55] = "0b10111101110100001110111101010110";
        ram[56] = "0b10111101000000111101100010011101";
        ram[57] = "0b00111101011001100011100001000011";
        ram[58] = "0b00111101110101000001010100101011";
        ram[59] = "0b00111101011000100011000001110111";
        ram[60] = "0b10111100110111100110001101100011";
        ram[61] = "0b10111101110011010000111001010110";
        ram[62] = "0b10111101100000111011000000111110";
        ram[63] = "0b00111100101011011100101100010100";
        ram[64] = "0b00111101100101111011001000000011";
        ram[65] = "0b00111101011100111010110011010110";
        ram[66] = "0b10111100000001110011101111001001";
        ram[67] = "0b10111101010011101001111101101011";
        ram[68] = "0b10111101010100101100011010101100";
        ram[69] = "0b00111100011100111100111101110000";
        ram[70] = "0b00111101010010110010111010011101";
        ram[71] = "0b00111101010101001101011100101000";
        ram[72] = "0b10111100001000101110110000101001";
        ram[73] = "0b10111101011010101000000100010011";
        ram[74] = "0b10111101011000110100111010111010";
        ram[75] = "0b10111011011000100001100101100101";
        ram[76] = "0b00111101100111100010000001000111";
        ram[77] = "0b00111101101000010111010011000101";
        ram[78] = "0b10111101010111110111011100101001";
        ram[79] = "0b10111101110101010110011111011100";
        ram[80] = "0b10111101011010110100110110001100";
        ram[81] = "0b00111100100010110011001011001111";
        ram[82] = "0b00111101101000011110010001110001";
        ram[83] = "0b00111101110000011011100111111010";
        ram[84] = "0b00111101000001101010110100101110";
        ram[85] = "0b10111101100000111010000010000100";
        ram[86] = "0b10111101101101100010110011111110";
        ram[87] = "0b10111101011011000111110110100010";
        ram[88] = "0b00111100011011011100011111101111";
        ram[89] = "0b00111101011101100010100101010010";
        ram[90] = "0b00111101101101111110010001011000";
        ram[91] = "0b00111100101000111010000010000100";
        ram[92] = "0b10111101010111011100010000000000";
        ram[93] = "0b10111101110011101110110001111101";
        ram[94] = "0b10111101010111111110001100101010";
        ram[95] = "0b00111100010110101010100100101110";
        ram[96] = "0b00111101101101001011001110000001";
        ram[97] = "0b00111101100000000011101010111000";
        ram[98] = "0b00111100000010100110010101001001";
        ram[99] = "0b10111101010000010101101000001000";
        ram[100] = "0b10111101100100101011100110010001";
        ram[101] = "0b10111100100111000010111000110100";
        ram[102] = "0b00111101001100110111010000110110";
        ram[103] = "0b00111101010111110000111101011010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_8) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_8_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_8) {
meminst = new L3_up_L2_WEIGHTS_8_ram("L3_up_L2_WEIGHTS_8_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_8() {
    delete meminst;
}


};//endmodule
#endif
