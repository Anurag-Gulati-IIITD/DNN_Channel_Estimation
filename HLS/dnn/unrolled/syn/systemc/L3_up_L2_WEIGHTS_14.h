// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_14_H__
#define __L3_up_L2_WEIGHTS_14_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_14_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_14_ram) {
        ram[0] = "0b10111110000110010110110101001100";
        ram[1] = "0b10111101110111110100011001100111";
        ram[2] = "0b00111011010111010110000101110000";
        ram[3] = "0b00111101101101111100000110111110";
        ram[4] = "0b00111110000010100010100010111011";
        ram[5] = "0b00111101110001000010100101011010";
        ram[6] = "0b10111011111111011001011101110000";
        ram[7] = "0b10111101101101000000000100111111";
        ram[8] = "0b10111101111101110100100000011011";
        ram[9] = "0b10111101101101000110100010001000";
        ram[10] = "0b10111100010000111000101100000101";
        ram[11] = "0b00111101001100001001110010000000";
        ram[12] = "0b00111101100100000010000101001011";
        ram[13] = "0b00111101001011011001101111100101";
        ram[14] = "0b00111100010010010001010010110001";
        ram[15] = "0b00111011111111010101110010111000";
        ram[16] = "0b10111100111001101011110001100010";
        ram[17] = "0b10111101000001110110011011000111";
        ram[18] = "0b10111100111000110101111001110100";
        ram[19] = "0b10111100110000111001011110011010";
        ram[20] = "0b00111100000000110110101010000011";
        ram[21] = "0b00111100010110101001000000000100";
        ram[22] = "0b00111100111011001001010111000000";
        ram[23] = "0b00111100110000001010010010100000";
        ram[24] = "0b00111011101010000010101001010110";
        ram[25] = "0b10111101001010000111000110100100";
        ram[26] = "0b10111101000011111110000101010100";
        ram[27] = "0b00111101011011110111001010110100";
        ram[28] = "0b00111101110100110010010010000101";
        ram[29] = "0b00111101101000001000001010001100";
        ram[30] = "0b00111011101011111111011011010011";
        ram[31] = "0b10111101111000001010101101110001";
        ram[32] = "0b10111101111001100000011110000001";
        ram[33] = "0b10111101000000010110010010000100";
        ram[34] = "0b00111101010101011111010101101010";
        ram[35] = "0b00111101110111111001100000110001";
        ram[36] = "0b00111101010001101100001000100111";
        ram[37] = "0b10111101001101010100011111100000";
        ram[38] = "0b10111101010011111001010111010101";
        ram[39] = "0b10111100001001000011101110110100";
        ram[40] = "0b00111101100000101010100100001101";
        ram[41] = "0b00111101101011011011010100001111";
        ram[42] = "0b10111100000011111110101011000100";
        ram[43] = "0b10111101101111101111100111011011";
        ram[44] = "0b10111101111110101010111101111001";
        ram[45] = "0b10111100101110011111100110001011";
        ram[46] = "0b00111101100110011100110011111011";
        ram[47] = "0b00111110000011010101111010001101";
        ram[48] = "0b00111101101101100110101011011011";
        ram[49] = "0b10111100001110101111010100110100";
        ram[50] = "0b10111101111101000101111110011110";
        ram[51] = "0b10111101110010100111001111110111";
        ram[52] = "0b10111011110101010001111110000010";
        ram[53] = "0b00111101110011110100111000000001";
        ram[54] = "0b00111110000111010011111100011000";
        ram[55] = "0b00111101110100100111110000111001";
        ram[56] = "0b00111100000001011011000110000101";
        ram[57] = "0b10111101110011110111001100111011";
        ram[58] = "0b10111110000011110001001100000110";
        ram[59] = "0b10111101110010010000110101011010";
        ram[60] = "0b00111010000100110101001100101110";
        ram[61] = "0b00111101011001001101111101001000";
        ram[62] = "0b00111101110010111111011011100100";
        ram[63] = "0b00111101101001100101111010001001";
        ram[64] = "0b00111100011010000110010000000010";
        ram[65] = "0b10111100111100000110001011010100";
        ram[66] = "0b10111101011011010100010111101001";
        ram[67] = "0b10111101010000000101111101101100";
        ram[68] = "0b10111100100111111010000100011011";
        ram[69] = "0b00111100010010110100111100011110";
        ram[70] = "0b00111100000010110110000011110010";
        ram[71] = "0b00111101000001111110000101110110";
        ram[72] = "0b00111100110000111010010000101111";
        ram[73] = "0b00111100111000000100001110100010";
        ram[74] = "0b00111100000101000000001101011000";
        ram[75] = "0b10111101001101010001110111101111";
        ram[76] = "0b10111101100010001111101100000001";
        ram[77] = "0b10111101001101101001110010101010";
        ram[78] = "0b00111101100110111010001101000100";
        ram[79] = "0b00111101100100001100000110111001";
        ram[80] = "0b00111011111111000110100101110011";
        ram[81] = "0b10111101101101101101000110011110";
        ram[82] = "0b10111101111011010101100101001111";
        ram[83] = "0b10111101010010110111000110111001";
        ram[84] = "0b00111101000110011011110101000000";
        ram[85] = "0b00111101110011111101110000010110";
        ram[86] = "0b00111101101011001010101100111111";
        ram[87] = "0b00111011100101111100100000001000";
        ram[88] = "0b10111101100001101011010010000101";
        ram[89] = "0b10111101101000011000110101101001";
        ram[90] = "0b10111001000101001110010111010110";
        ram[91] = "0b00111101010001011100100010010111";
        ram[92] = "0b00111101001101100110010000001010";
        ram[93] = "0b10111101010100000101111000011100";
        ram[94] = "0b10111101110000101001001110001110";
        ram[95] = "0b10111101011011111010100000101111";
        ram[96] = "0b00111101010100010110101010001100";
        ram[97] = "0b00111101111110011100101111101111";
        ram[98] = "0b00111110000001011000101010111001";
        ram[99] = "0b00111100001100110010110011101001";
        ram[100] = "0b10111101110111000010011111101001";
        ram[101] = "0b10111110000000001010100000001001";
        ram[102] = "0b10111101011110001000001000101000";
        ram[103] = "0b00111101001000010111000110011111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_14) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_14_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_14) {
meminst = new L3_up_L2_WEIGHTS_14_ram("L3_up_L2_WEIGHTS_14_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_14() {
    delete meminst;
}


};//endmodule
#endif
