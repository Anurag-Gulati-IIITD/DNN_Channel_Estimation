// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_25_H__
#define __L3_up_L2_WEIGHTS_25_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_25_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_25_ram) {
        ram[0] = "0b10111100111111100010011000001011";
        ram[1] = "0b00111100111010010000010101111101";
        ram[2] = "0b00111011011100111000100000100010";
        ram[3] = "0b00111101001101101101011001010110";
        ram[4] = "0b10111010100010101100111000100101";
        ram[5] = "0b10111011101011101000111000011101";
        ram[6] = "0b10111100001110000000101010011110";
        ram[7] = "0b10111011100100100100011010111111";
        ram[8] = "0b00111011100000100111001100001100";
        ram[9] = "0b10111100001011011000000110101110";
        ram[10] = "0b00111010111000001000011010111110";
        ram[11] = "0b00111100100110000010111011001011";
        ram[12] = "0b10111100101010011101000111110110";
        ram[13] = "0b00111101001001000000110010000100";
        ram[14] = "0b00111001000000100000010111111111";
        ram[15] = "0b10111100110111001011001101011111";
        ram[16] = "0b10111011101000101111110011110000";
        ram[17] = "0b00111011111110110000000010111101";
        ram[18] = "0b00111100010010111111011011100100";
        ram[19] = "0b10111011000011011100000100011110";
        ram[20] = "0b00111100100100101101001101000001";
        ram[21] = "0b10111100101101111010001111011011";
        ram[22] = "0b00111011110100110011000010010100";
        ram[23] = "0b10111011010000011101101100000001";
        ram[24] = "0b10111100011011010001001110010100";
        ram[25] = "0b10111100001100100001110001000111";
        ram[26] = "0b00111100110111100111100001011011";
        ram[27] = "0b00111100110101110011110010010010";
        ram[28] = "0b10111100001101110101111010100110";
        ram[29] = "0b10111100110010011100010011011011";
        ram[30] = "0b10111011101101110100010101111100";
        ram[31] = "0b00111011110101110001111100110110";
        ram[32] = "0b10111100100010010100100000010011";
        ram[33] = "0b10111100111011111101000000000111";
        ram[34] = "0b00111100010110000011110001101101";
        ram[35] = "0b00111100010110101111000001111100";
        ram[36] = "0b00111100111000000100111000011110";
        ram[37] = "0b00111100101100001100001001000000";
        ram[38] = "0b10111100100011110100000011100110";
        ram[39] = "0b00111011001101001101000001010111";
        ram[40] = "0b10111100101111111011101111011000";
        ram[41] = "0b00111100001000101100111011001101";
        ram[42] = "0b00111100100001100010101100101000";
        ram[43] = "0b00111010111001110111100100100000";
        ram[44] = "0b10111100100011100101011000000100";
        ram[45] = "0b00111011101111000111001011100010";
        ram[46] = "0b00111101000101001000010101011110";
        ram[47] = "0b10111100101001001100100000110110";
        ram[48] = "0b10111011100100110001000000010011";
        ram[49] = "0b00111100101000100000011110010010";
        ram[50] = "0b00111011011111010101110010111000";
        ram[51] = "0b10111100101101001011011100101100";
        ram[52] = "0b00111101000111011101011011100000";
        ram[53] = "0b10111100010101101111110110101000";
        ram[54] = "0b10111100100001110100100001011110";
        ram[55] = "0b00111100101000000011100000011001";
        ram[56] = "0b10111011110010110000011111010001";
        ram[57] = "0b00111100000110110010001111011101";
        ram[58] = "0b10111100000011110010000101110001";
        ram[59] = "0b10111011000011101011110011000111";
        ram[60] = "0b10111011100100010101001101111010";
        ram[61] = "0b10111100101011000001000010010101";
        ram[62] = "0b00111011011001001001011011101110";
        ram[63] = "0b10111100001101001110000100011110";
        ram[64] = "0b00111011011101110110010111111110";
        ram[65] = "0b10111100011111111100010101001000";
        ram[66] = "0b10111100101010011001110110001000";
        ram[67] = "0b00111100101001111110110110000101";
        ram[68] = "0b10111100001010110000010000100101";
        ram[69] = "0b00111101000111011011100110000100";
        ram[70] = "0b10111100110111011101100011111001";
        ram[71] = "0b00111011110111111011110101101010";
        ram[72] = "0b00111100100011011000001000110100";
        ram[73] = "0b10111011010101111100111101011111";
        ram[74] = "0b00111011100011001001001100100001";
        ram[75] = "0b10111100010000110111111001101111";
        ram[76] = "0b10111100010001010001000100010111";
        ram[77] = "0b10111101001000101011100111010100";
        ram[78] = "0b10111100110000111100001110100100";
        ram[79] = "0b00111100010110101001000000000100";
        ram[80] = "0b00111011100111110011100000111111";
        ram[81] = "0b00111100000100111100100010011111";
        ram[82] = "0b00111100010000000110000110000100";
        ram[83] = "0b00111100100101110010101010111111";
        ram[84] = "0b00111101000101001101100000110100";
        ram[85] = "0b00111100000010100000100100000011";
        ram[86] = "0b00111011100011011111001101110011";
        ram[87] = "0b00111011111000111101010111111110";
        ram[88] = "0b10111011110110101100101010111100";
        ram[89] = "0b00111101000000110010110010100101";
        ram[90] = "0b00111100010000000001101000110111";
        ram[91] = "0b10111101000010111110010100010001";
        ram[92] = "0b10111101000101101111101010000011";
        ram[93] = "0b00111101001011001100111101101100";
        ram[94] = "0b00111100101000000110011000111100";
        ram[95] = "0b00111011011111001011010011110010";
        ram[96] = "0b10111100111010001010111110000001";
        ram[97] = "0b00111011111000000110010100110000";
        ram[98] = "0b00111100011010010100101010110010";
        ram[99] = "0b10111100101111101110100000001000";
        ram[100] = "0b10111100010011101101010011100101";
        ram[101] = "0b10111100100010111100100111001101";
        ram[102] = "0b00111011110001101011010010000101";
        ram[103] = "0b00111100101111011100011010100000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_25) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_25_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_25) {
meminst = new L3_up_L2_WEIGHTS_25_ram("L3_up_L2_WEIGHTS_25_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_25() {
    delete meminst;
}


};//endmodule
#endif
