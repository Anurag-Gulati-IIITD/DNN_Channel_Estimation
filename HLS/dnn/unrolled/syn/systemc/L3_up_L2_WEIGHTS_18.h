// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_18_H__
#define __L3_up_L2_WEIGHTS_18_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_18_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_18_ram) {
        ram[0] = "0b10111010110000101100010111100011";
        ram[1] = "0b00111010101000010101100110000001";
        ram[2] = "0b00111011000100111100100010011111";
        ram[3] = "0b10111001111111000010111010111010";
        ram[4] = "0b00111011000111000101111001110000";
        ram[5] = "0b00111010011100001010010111110000";
        ram[6] = "0b00111001110110010000111000100100";
        ram[7] = "0b10111011010111100111111010100110";
        ram[8] = "0b00111010000011110010000101110001";
        ram[9] = "0b00111011001011000001100011111000";
        ram[10] = "0b00111010110001000111101000011000";
        ram[11] = "0b00111010000011010100101110101101";
        ram[12] = "0b00111011011000100010101000101100";
        ram[13] = "0b00111011001100100100001000000111";
        ram[14] = "0b00111010000111111110100001101000";
        ram[15] = "0b10111100000100011000010111001111";
        ram[16] = "0b10111011000001001101011101101011";
        ram[17] = "0b00111011100001000100000001101100";
        ram[18] = "0b10111011111110010100110010001000";
        ram[19] = "0b10111011001101011010101001110001";
        ram[20] = "0b10111011111100100101000111000010";
        ram[21] = "0b00111100000000111111000010111011";
        ram[22] = "0b00111100000110110111011111000000";
        ram[23] = "0b00111011100001011010000010111110";
        ram[24] = "0b10111011111010011000100110011100";
        ram[25] = "0b10111100001100110100101001000101";
        ram[26] = "0b00111011001010110111000100110010";
        ram[27] = "0b00111011111100111001100011101001";
        ram[28] = "0b00111011110111100010101011000011";
        ram[29] = "0b00111010110011101111011001110011";
        ram[30] = "0b10111100000000110100100011110101";
        ram[31] = "0b10111011011000100111111000001111";
        ram[32] = "0b10111011110100000101111100101001";
        ram[33] = "0b10111011001010110110000001101011";
        ram[34] = "0b00111100010010000001100100001001";
        ram[35] = "0b00111000010101011110100011010101";
        ram[36] = "0b00111010000001111000011101001000";
        ram[37] = "0b00111011000001100011011110111101";
        ram[38] = "0b00111010000101010010100011110010";
        ram[39] = "0b00111010101111001001110011010100";
        ram[40] = "0b10111100000101001001000111110011";
        ram[41] = "0b10111100010000100111101001100011";
        ram[42] = "0b10111011110000000001111001101001";
        ram[43] = "0b10111011100000110000000110101000";
        ram[44] = "0b00111011001110011101110000101111";
        ram[45] = "0b00111010101100111111011000111100";
        ram[46] = "0b00111100001001100010011001110000";
        ram[47] = "0b10111001111100111100101100111110";
        ram[48] = "0b00111011100110011101100010000100";
        ram[49] = "0b10111011111000111110011011000101";
        ram[50] = "0b10111011010101101110010001111110";
        ram[51] = "0b10111011100110010000011011001101";
        ram[52] = "0b10111011011111010111111001000110";
        ram[53] = "0b10111011101111010001101010101000";
        ram[54] = "0b10111011101111110110111000111111";
        ram[55] = "0b00111011011110101000101101001100";
        ram[56] = "0b10111011100101001101010100001111";
        ram[57] = "0b00111011011111110011001001111011";
        ram[58] = "0b10111010111011110101011001100101";
        ram[59] = "0b10111011000110010100100111101001";
        ram[60] = "0b00111000111000100111111000001111";
        ram[61] = "0b00111011101000010110000111100101";
        ram[62] = "0b10111000101110001000110010100100";
        ram[63] = "0b10111010001100100100001000000111";
        ram[64] = "0b00111011001100011011101111001111";
        ram[65] = "0b10111011111101111001100001010010";
        ram[66] = "0b00111010100111010100100101010010";
        ram[67] = "0b10111011101101000010000000101110";
        ram[68] = "0b10111010111110000100000000011000";
        ram[69] = "0b10111011100100011011100000100100";
        ram[70] = "0b10111011001100110010110011101001";
        ram[71] = "0b10111001100100001011010000011000";
        ram[72] = "0b00111011101001000010101011101101";
        ram[73] = "0b00111011111000001111110000101111";
        ram[74] = "0b10111011010101001010101000010001";
        ram[75] = "0b10111011011001110101011110010011";
        ram[76] = "0b10111001011011001111101001101010";
        ram[77] = "0b10111011110010101100010010110101";
        ram[78] = "0b00111100011000100001010100110011";
        ram[79] = "0b00111011011001101000111000111111";
        ram[80] = "0b00111010100001011101001100010011";
        ram[81] = "0b10111011010011100011110111100110";
        ram[82] = "0b10111100000101111100001111010111";
        ram[83] = "0b10111011000000000110001010010001";
        ram[84] = "0b00111011111001010011011001010000";
        ram[85] = "0b00111100000001101110110000011000";
        ram[86] = "0b00111011110010101111111101101101";
        ram[87] = "0b10111011011111110001000011101101";
        ram[88] = "0b10111011101100101100100000111111";
        ram[89] = "0b00111011111000010110100100111100";
        ram[90] = "0b00111011100001111000011101001000";
        ram[91] = "0b10111011001101100100000101110000";
        ram[92] = "0b10111011101010000011001010111010";
        ram[93] = "0b10111010000110110011000001110011";
        ram[94] = "0b00111011011010111011101110100101";
        ram[95] = "0b00111100000110010000011011001101";
        ram[96] = "0b00111011111101100000010110101011";
        ram[97] = "0b00111011010001111100000011110100";
        ram[98] = "0b10111010000000101100111101010011";
        ram[99] = "0b00111011011101010001101011001010";
        ram[100] = "0b10111010111010000110010000000010";
        ram[101] = "0b10111011110001010010000111011110";
        ram[102] = "0b00111010110010110000011111010001";
        ram[103] = "0b00111100000111101011101001101011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_18) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_18_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_18) {
meminst = new L3_up_L2_WEIGHTS_18_ram("L3_up_L2_WEIGHTS_18_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_18() {
    delete meminst;
}


};//endmodule
#endif
