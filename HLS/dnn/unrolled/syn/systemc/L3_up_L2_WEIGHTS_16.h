// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_16_H__
#define __L3_up_L2_WEIGHTS_16_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_16_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_16_ram) {
        ram[0] = "0b00111011100000110010001100110110";
        ram[1] = "0b00111011001001001100000111101100";
        ram[2] = "0b00111011110010110101101110110100";
        ram[3] = "0b10111100000101100101011011101111";
        ram[4] = "0b10111011010001000110100101010001";
        ram[5] = "0b10111100101101001111101001001000";
        ram[6] = "0b10111100000011100100101110001000";
        ram[7] = "0b10111011110100000011110110011011";
        ram[8] = "0b00111100011001110101111111110110";
        ram[9] = "0b00111100010111110000100100001111";
        ram[10] = "0b00111011011001111110111010010001";
        ram[11] = "0b10111011110100000110011110001100";
        ram[12] = "0b00111010100101111100100000001000";
        ram[13] = "0b10111100100000000110000001111000";
        ram[14] = "0b10111010011111111001011100100100";
        ram[15] = "0b10111010111011100000011011011001";
        ram[16] = "0b10111011100001010011001110110001";
        ram[17] = "0b10111011001100100011000101000000";
        ram[18] = "0b10111011111110010000000100001000";
        ram[19] = "0b00111010111000110000010001000111";
        ram[20] = "0b00111100000011100000010000111010";
        ram[21] = "0b00111011100001001000001110001000";
        ram[22] = "0b10111011000001101001110001100111";
        ram[23] = "0b10111011100000110011110001100000";
        ram[24] = "0b00111011110000101101111100001101";
        ram[25] = "0b10111100000110010010010000101001";
        ram[26] = "0b00111010010010111010111110010110";
        ram[27] = "0b10111011101100001000010101101110";
        ram[28] = "0b00111010011000110000010001000111";
        ram[29] = "0b00111011001111110001101001011101";
        ram[30] = "0b00111100010001111101101000011111";
        ram[31] = "0b00111011101010000001000100101100";
        ram[32] = "0b00111100011001110000110000010011";
        ram[33] = "0b10111001100010010101110100001011";
        ram[34] = "0b10111011111110000100100001111100";
        ram[35] = "0b10111011101101010011110101100100";
        ram[36] = "0b00111011000000110010001100110110";
        ram[37] = "0b00111011001001001000111110010111";
        ram[38] = "0b10111011100010000011011101110010";
        ram[39] = "0b10111100010010000111100110000001";
        ram[40] = "0b10111011110110100100110011101000";
        ram[41] = "0b00111011101100010101111110001001";
        ram[42] = "0b00111011100100001010001101010001";
        ram[43] = "0b00111100101100010100000000010100";
        ram[44] = "0b00111001100000111001100010100110";
        ram[45] = "0b00111010000011010000100010010010";
        ram[46] = "0b10111100001110000010001111001000";
        ram[47] = "0b10111010000101010010100011110010";
        ram[48] = "0b00111011011011110001001101001001";
        ram[49] = "0b10111010011101101010110101110001";
        ram[50] = "0b10111100100001000010100101011010";
        ram[51] = "0b10111100010001010010101001000001";
        ram[52] = "0b10111100011011111100101111010101";
        ram[53] = "0b00111100001100000001010000101111";
        ram[54] = "0b00111010001101111100001101010000";
        ram[55] = "0b10111100101000111010101100000000";
        ram[56] = "0b10111011110000110011001011110000";
        ram[57] = "0b00111011001000010010011100101101";
        ram[58] = "0b00111011110001001101111011000010";
        ram[59] = "0b00111100001110101000001111110101";
        ram[60] = "0b00111100010011100111100010011110";
        ram[61] = "0b00111011001000100010001011010101";
        ram[62] = "0b10111100000111011111100101111011";
        ram[63] = "0b00111011111011110111011111110010";
        ram[64] = "0b10111010111111000010111010111010";
        ram[65] = "0b00111011001010000110110101110010";
        ram[66] = "0b10111011001111101011010110110011";
        ram[67] = "0b10111100000100010110010001000001";
        ram[68] = "0b10111011101101101111000110011001";
        ram[69] = "0b00111001100110000000101100100100";
        ram[70] = "0b00111100101011000110010001110111";
        ram[71] = "0b00111100010011001111001010001100";
        ram[72] = "0b00111100010001001000111100010001";
        ram[73] = "0b00111010100011010000100010010010";
        ram[74] = "0b10111011010010010010000101000111";
        ram[75] = "0b10111100000001000011001111010111";
        ram[76] = "0b00111011000101011011111111110000";
        ram[77] = "0b10111010100101010010100011110010";
        ram[78] = "0b00111010111100110010001101111001";
        ram[79] = "0b10111011100001001010010100010110";
        ram[80] = "0b00111011100001100100100010000100";
        ram[81] = "0b00111100001001000011011110000010";
        ram[82] = "0b00111100100010000110010110010101";
        ram[83] = "0b10111100000111101000001111100100";
        ram[84] = "0b10111100000010110000000001111010";
        ram[85] = "0b10111100011111010010101001100011";
        ram[86] = "0b00111011111101000101100111011010";
        ram[87] = "0b10111011011110111100101000010000";
        ram[88] = "0b00111010101011011010101110011111";
        ram[89] = "0b00111011000100000011111010100111";
        ram[90] = "0b10111011100111110010011101111000";
        ram[91] = "0b00111011111111000100011111100101";
        ram[92] = "0b00111100000110101100001101100101";
        ram[93] = "0b10111011111000011000101011001010";
        ram[94] = "0b10111011100111100101010111000001";
        ram[95] = "0b10111100000010001111110010010011";
        ram[96] = "0b10111100010001110110010010101110";
        ram[97] = "0b10111011100000001101100000000010";
        ram[98] = "0b00111100001111100001001000011111";
        ram[99] = "0b00111011111010100111010001111110";
        ram[100] = "0b00111100001001000000100101011111";
        ram[101] = "0b00111011101011010010010101101000";
        ram[102] = "0b10111100011101100011001111001110";
        ram[103] = "0b10111100000111011001000010011111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_16) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_16_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_16) {
meminst = new L3_up_L2_WEIGHTS_16_ram("L3_up_L2_WEIGHTS_16_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_16() {
    delete meminst;
}


};//endmodule
#endif
