// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_38_H__
#define __L3_up_L2_WEIGHTS_38_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_38_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_38_ram) {
        ram[0] = "0b10111100101001011001100111101101";
        ram[1] = "0b10111110001011101111001100001010";
        ram[2] = "0b10111110010000001001100010010001";
        ram[3] = "0b10111101011110000100110110111010";
        ram[4] = "0b00111101100111111110111100111001";
        ram[5] = "0b00111110000100110000001000101110";
        ram[6] = "0b00111101100101110001111100110110";
        ram[7] = "0b10111100110111000001111001111001";
        ram[8] = "0b10111101101000110010011001011011";
        ram[9] = "0b10111101100100000011100111101111";
        ram[10] = "0b00111011111101100010111110011101";
        ram[11] = "0b00111101101000001101010111101001";
        ram[12] = "0b00111101100000100111110110001001";
        ram[13] = "0b00111100101001000000000011111100";
        ram[14] = "0b10111101101001011100011100000100";
        ram[15] = "0b10111101111000100110111101100001";
        ram[16] = "0b10111101011101100101010001010000";
        ram[17] = "0b00111101000101010011001101101110";
        ram[18] = "0b00111101111010100111000001001100";
        ram[19] = "0b00111101110111010110001100000010";
        ram[20] = "0b00111101011000110100111111000110";
        ram[21] = "0b10111101010101100110010010010001";
        ram[22] = "0b10111101111111111001100000110001";
        ram[23] = "0b10111101110110010010111000011111";
        ram[24] = "0b10111101000110010010010100110101";
        ram[25] = "0b00111101100100111100101000110010";
        ram[26] = "0b00111101110101100111011111110111";
        ram[27] = "0b00111100000101001100110010101011";
        ram[28] = "0b10111101100101010100111000101011";
        ram[29] = "0b10111101101101010000001110111000";
        ram[30] = "0b10111101100111010011000010101101";
        ram[31] = "0b10111011100100100100111100100010";
        ram[32] = "0b00111101010000000010000010000001";
        ram[33] = "0b00111101010100111111110100001101";
        ram[34] = "0b00111101000011111000111001111110";
        ram[35] = "0b00111100100110010101111011100001";
        ram[36] = "0b00111100100111000100110110101001";
        ram[37] = "0b00111010101110100001111101001011";
        ram[38] = "0b10111100110100001101011010110010";
        ram[39] = "0b10111101100000110011111110000101";
        ram[40] = "0b10111101100001111000011011000010";
        ram[41] = "0b10111100111001100010001101001011";
        ram[42] = "0b00111101001001101111000111011100";
        ram[43] = "0b00111101101000110110110110101000";
        ram[44] = "0b00111101101100101100110101111101";
        ram[45] = "0b00111100110101001010110000101010";
        ram[46] = "0b10111100101010100000100001111101";
        ram[47] = "0b10111101011001010011111010110100";
        ram[48] = "0b10111101011101001011110001101010";
        ram[49] = "0b10111101001010100111001001100101";
        ram[50] = "0b10111100101001010011001100101011";
        ram[51] = "0b10111010101101010010010000111010";
        ram[52] = "0b10111110010000011001110101100111";
        ram[53] = "0b10111101110000101110111111010100";
        ram[54] = "0b00111101010100010011011000011110";
        ram[55] = "0b00111110000110010011100000010101";
        ram[56] = "0b00111110000010101011001011100001";
        ram[57] = "0b00111100101000111111000000110101";
        ram[58] = "0b10111101100110101101001100100000";
        ram[59] = "0b10111101110101001100011001100001";
        ram[60] = "0b10111101000101001011011010100110";
        ram[61] = "0b00111101011100010101101001001011";
        ram[62] = "0b00111101101111011100101101011000";
        ram[63] = "0b00111101000010010001001110100101";
        ram[64] = "0b10111101001111111000100001110110";
        ram[65] = "0b10111101110001001000011010101101";
        ram[66] = "0b10111101100011111100111110000001";
        ram[67] = "0b00111100111010110101000010110001";
        ram[68] = "0b00111101110010110010101111111110";
        ram[69] = "0b00111101110111100101110110011110";
        ram[70] = "0b00111101001110000110011011100100";
        ram[71] = "0b10111101001111011011010111011001";
        ram[72] = "0b10111101110111100010000011001101";
        ram[73] = "0b10111101111100100110000101111100";
        ram[74] = "0b10111101001111011100101011010001";
        ram[75] = "0b00111101011111001011010111111110";
        ram[76] = "0b00111110000011110110000100100100";
        ram[77] = "0b00111101111110100100010110010001";
        ram[78] = "0b10111101100111111000100110000011";
        ram[79] = "0b10111110000001000111000001100101";
        ram[80] = "0b10111101101001100111110011110010";
        ram[81] = "0b10111000111000000110010100110000";
        ram[82] = "0b00111101011101000101000101110110";
        ram[83] = "0b00111101101001011000101000110011";
        ram[84] = "0b00111101010101111000110101010000";
        ram[85] = "0b00111011101100001110000110110101";
        ram[86] = "0b10111100000011001110101100110101";
        ram[87] = "0b10111100111110011000001100001110";
        ram[88] = "0b10111100111101010001001001100110";
        ram[89] = "0b10111101010111010110010110100001";
        ram[90] = "0b10111101000111011001001111000100";
        ram[91] = "0b10111100010111101011110110010000";
        ram[92] = "0b00111100110110100100110011101000";
        ram[93] = "0b00111101101001101101011110100101";
        ram[94] = "0b00111101101011001000111001101001";
        ram[95] = "0b00111100011111010001010101101010";
        ram[96] = "0b10111101001101011101000000110001";
        ram[97] = "0b10111101101001011101000011111010";
        ram[98] = "0b10111101100110000001000101101111";
        ram[99] = "0b10111100111011001101110100001110";
        ram[100] = "0b00111011101011000110110011011011";
        ram[101] = "0b00111100111101111110100000000100";
        ram[102] = "0b00111101010101000100110010111110";
        ram[103] = "0b00111101101101000000100010010110";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_38) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_38_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_38) {
meminst = new L3_up_L2_WEIGHTS_38_ram("L3_up_L2_WEIGHTS_38_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_38() {
    delete meminst;
}


};//endmodule
#endif
