// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_48_H__
#define __L3_up_L2_WEIGHTS_48_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_48_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_48_ram) {
        ram[0] = "0b10111101100110000100011101101111";
        ram[1] = "0b10111100101000100110110000111100";
        ram[2] = "0b00111101011011101011100100011011";
        ram[3] = "0b00111101110100100000111110110010";
        ram[4] = "0b00111101101110000000110111000011";
        ram[5] = "0b00111101000001000000001110011011";
        ram[6] = "0b10111100101010101001010011111111";
        ram[7] = "0b10111101101110010000000110001110";
        ram[8] = "0b10111101011101010010111010110110";
        ram[9] = "0b10111101001001101001000101100100";
        ram[10] = "0b10111100100101011101100100011011";
        ram[11] = "0b00111100000111100111011101001111";
        ram[12] = "0b00111101011101000110111111011111";
        ram[13] = "0b00111101101111101000001011011000";
        ram[14] = "0b00111101100011101001101010110011";
        ram[15] = "0b10111101001001100001010110101001";
        ram[16] = "0b10111101101111100011101100000100";
        ram[17] = "0b10111101101110011101001101000110";
        ram[18] = "0b10111101100100001101101001011110";
        ram[19] = "0b00111011000100110110001111110101";
        ram[20] = "0b00111101100011011111101111010111";
        ram[21] = "0b00111101110001101011101011001111";
        ram[22] = "0b00111101100100000000000111010110";
        ram[23] = "0b10111100010101110100000011000100";
        ram[24] = "0b10111101101000101000100000000101";
        ram[25] = "0b10111101100000011000100100110111";
        ram[26] = "0b00111100000101110110111111110100";
        ram[27] = "0b00111100111011000000000011011010";
        ram[28] = "0b00111100101110101110101010111000";
        ram[29] = "0b00111101000010001010001101110010";
        ram[30] = "0b00111100100111100111010100110110";
        ram[31] = "0b00111100010100101010101001011100";
        ram[32] = "0b10111100101100010000110110111111";
        ram[33] = "0b10111101100011010000111001010110";
        ram[34] = "0b10111101011001010100110101100010";
        ram[35] = "0b10111101001000010000001110000110";
        ram[36] = "0b10111010111011100010100001100111";
        ram[37] = "0b00111101011001100110000000011100";
        ram[38] = "0b00111101010100100010100001010110";
        ram[39] = "0b00111101001010001110110101011111";
        ram[40] = "0b00111011110000100110000100111001";
        ram[41] = "0b10111100110001000010001000000011";
        ram[42] = "0b10111101000111110011101101100100";
        ram[43] = "0b10111101001010001101000000000011";
        ram[44] = "0b10111101100000101011100111010100";
        ram[45] = "0b10111101100011010100100010001000";
        ram[46] = "0b10111100000100100111010011100010";
        ram[47] = "0b00111100110100101110111110010001";
        ram[48] = "0b00111101111011111111111100110111";
        ram[49] = "0b00111101101010110110101111110100";
        ram[50] = "0b00111101011110101000001111110101";
        ram[51] = "0b10111101011001001001011011101110";
        ram[52] = "0b00111101100001011001001100011101";
        ram[53] = "0b00111101110101011010001110100001";
        ram[54] = "0b00111101010111110101100011000001";
        ram[55] = "0b00111101001010110111001000111111";
        ram[56] = "0b10111101100001101100111111001000";
        ram[57] = "0b10111101101011001111111010011011";
        ram[58] = "0b10111101101000111011010011110110";
        ram[59] = "0b10111101000001111001101000101000";
        ram[60] = "0b00111100001101000000101100110101";
        ram[61] = "0b00111101010011000111110100011100";
        ram[62] = "0b00111101011011001110010101110001";
        ram[63] = "0b00111101010011110110001110000000";
        ram[64] = "0b00111101011000100001000100000010";
        ram[65] = "0b10111100111000111011011010001001";
        ram[66] = "0b10111101010111101011001000000111";
        ram[67] = "0b10111101101010010000100010100010";
        ram[68] = "0b10111101100101110000101000111101";
        ram[69] = "0b10111100110001000110011100111000";
        ram[70] = "0b00111101101100011111001001010110";
        ram[71] = "0b00111101110010111111001100111000";
        ram[72] = "0b00111101110000110010100110000000";
        ram[73] = "0b00111100101000001100000001101010";
        ram[74] = "0b10111101101100001000110000111111";
        ram[75] = "0b10111101100001111001001111011110";
        ram[76] = "0b10111100101010111010011110111001";
        ram[77] = "0b00111011100100100100011010111111";
        ram[78] = "0b00111101010110011011000110111000";
        ram[79] = "0b00111100111101001100101100011001";
        ram[80] = "0b00111100110011100101010011111000";
        ram[81] = "0b00111011100111100111011101001111";
        ram[82] = "0b10111100111111111111101111001110";
        ram[83] = "0b10111101001101001101101011010011";
        ram[84] = "0b10111101010001000010110010000000";
        ram[85] = "0b10111100110111001010110100010101";
        ram[86] = "0b00111100110000000011001101100001";
        ram[87] = "0b00111101100010011110000110110001";
        ram[88] = "0b00111101010111010000001100010000";
        ram[89] = "0b00111101010110000101110111111011";
        ram[90] = "0b00111100110010011001001010000110";
        ram[91] = "0b10111100010000000011001101100001";
        ram[92] = "0b10111101001010001000000001010010";
        ram[93] = "0b10111101000010101110110110011010";
        ram[94] = "0b10111100110100111110101100111010";
        ram[95] = "0b10111101001100010011001101111111";
        ram[96] = "0b00111100000011010011111100011000";
        ram[97] = "0b00111100100111000101110001010111";
        ram[98] = "0b00111101101000111011010011110110";
        ram[99] = "0b00111101111110100111000010001111";
        ram[100] = "0b00111101001110001010111100111110";
        ram[101] = "0b10111101100010101000011101011101";
        ram[102] = "0b10111101101011000001100001110010";
        ram[103] = "0b10111101100000100110001101010010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_48) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_48_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_48) {
meminst = new L3_up_L2_WEIGHTS_48_ram("L3_up_L2_WEIGHTS_48_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_48() {
    delete meminst;
}


};//endmodule
#endif
