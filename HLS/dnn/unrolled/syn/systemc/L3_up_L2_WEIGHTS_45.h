// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_45_H__
#define __L3_up_L2_WEIGHTS_45_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_45_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_45_ram) {
        ram[0] = "0b00111101100110001001010010000001";
        ram[1] = "0b00111100101001001111001000101000";
        ram[2] = "0b10111101011011111010001111111101";
        ram[3] = "0b10111101110100101001100010001001";
        ram[4] = "0b10111101101110001010010000111100";
        ram[5] = "0b10111101000001000011110000111010";
        ram[6] = "0b00111100101011000011000000001010";
        ram[7] = "0b00111101101110011101010111100101";
        ram[8] = "0b00111101011101011000110100010101";
        ram[9] = "0b00111101001001110010011101010111";
        ram[10] = "0b00111100100101101101111101000000";
        ram[11] = "0b10111100000111001101001111100001";
        ram[12] = "0b10111101011101010011101000111111";
        ram[13] = "0b10111101101111111000101010001111";
        ram[14] = "0b10111101100011110011111011001101";
        ram[15] = "0b00111101001001100001111000001100";
        ram[16] = "0b00111101101111101110001111010110";
        ram[17] = "0b00111101101110101110000000111011";
        ram[18] = "0b00111101100100010101110001100100";
        ram[19] = "0b10111011000001100010011011110110";
        ram[20] = "0b10111101100011100100011011010000";
        ram[21] = "0b10111101110001111001000000110010";
        ram[22] = "0b10111101100100010000111101010010";
        ram[23] = "0b00111100010101100100110101111111";
        ram[24] = "0b00111101101000110010100001110100";
        ram[25] = "0b00111101100000011110000111010010";
        ram[26] = "0b10111100000101100100101001011010";
        ram[27] = "0b10111100111011000001001110111010";
        ram[28] = "0b10111100101110100011000000010010";
        ram[29] = "0b10111101000010000111110010100110";
        ram[30] = "0b10111100100111111000101000001001";
        ram[31] = "0b10111100010101001001000011100110";
        ram[32] = "0b00111100101011110110110001101010";
        ram[33] = "0b00111101100011010111000011100111";
        ram[34] = "0b00111101011001011001011111010101";
        ram[35] = "0b00111101001000011100101011000001";
        ram[36] = "0b00111010111110001010010011000010";
        ram[37] = "0b10111101011001101111000011010000";
        ram[38] = "0b10111101010100101011000010100111";
        ram[39] = "0b10111101001010010000111111111001";
        ram[40] = "0b10111011110000100000110101010110";
        ram[41] = "0b00111100110001100110001010111011";
        ram[42] = "0b00111101000111111010110110110000";
        ram[43] = "0b00111101001010001101100001100110";
        ram[44] = "0b00111101100000110000101110011110";
        ram[45] = "0b00111101100011011111011000010010";
        ram[46] = "0b00111100000101011001101000110001";
        ram[47] = "0b10111100110101001000111011001110";
        ram[48] = "0b10111101111100010100111101001000";
        ram[49] = "0b10111101101011000101000010001011";
        ram[50] = "0b10111101011110110100101100110000";
        ram[51] = "0b00111101011001101101001001100111";
        ram[52] = "0b10111101100001100000111111100100";
        ram[53] = "0b10111101110101011100010000100010";
        ram[54] = "0b10111101010111111110011001001111";
        ram[55] = "0b10111101001011001011010000101001";
        ram[56] = "0b00111101100001110010011111011101";
        ram[57] = "0b00111101101011010101101001011100";
        ram[58] = "0b00111101101001000101111101011011";
        ram[59] = "0b00111101000010000000010000010000";
        ram[60] = "0b10111100001101010001001101110011";
        ram[61] = "0b10111101010011010111010110011111";
        ram[62] = "0b10111101011011100001101011000101";
        ram[63] = "0b10111101010100001100010011011111";
        ram[64] = "0b10111101011000101010010111101000";
        ram[65] = "0b00111100111000111010111000100101";
        ram[66] = "0b00111101010111111010000000001110";
        ram[67] = "0b00111101101010011101101011100000";
        ram[68] = "0b00111101100101111101101011101000";
        ram[69] = "0b00111100110001100011010010011000";
        ram[70] = "0b10111101101100100101000100111011";
        ram[71] = "0b10111101110011001100111011100110";
        ram[72] = "0b10111101110001000001011001111011";
        ram[73] = "0b10111100101000100010001011010101";
        ram[74] = "0b00111101101100011000010000111100";
        ram[75] = "0b00111101100010000010110001101111";
        ram[76] = "0b00111100101011001111101101110110";
        ram[77] = "0b10111011100011100001010100000001";
        ram[78] = "0b10111101010110011010000111111101";
        ram[79] = "0b10111100111100111110010001101001";
        ram[80] = "0b10111100110011111101110100100011";
        ram[81] = "0b10111011100111111100111100111110";
        ram[82] = "0b00111100111111101100110111010001";
        ram[83] = "0b00111101001101001111011100100011";
        ram[84] = "0b00111101010001001110111001111100";
        ram[85] = "0b00111100110111100010010001111001";
        ram[86] = "0b10111100110000001101100100001110";
        ram[87] = "0b10111101100010100011011000011010";
        ram[88] = "0b10111101010111011000111010000110";
        ram[89] = "0b10111101010110001110100101110000";
        ram[90] = "0b10111100110010011010000100110100";
        ram[91] = "0b00111100010000001110101111101110";
        ram[92] = "0b00111101001010001111100111110100";
        ram[93] = "0b00111101000010101010101110001010";
        ram[94] = "0b00111100110100110001000100011111";
        ram[95] = "0b00111101001100010001010100010110";
        ram[96] = "0b10111100000011100100011101010110";
        ram[97] = "0b10111100100111000011110011100010";
        ram[98] = "0b10111101101001000101100110010110";
        ram[99] = "0b10111101111110111010001000111000";
        ram[100] = "0b10111101001110010011101111000001";
        ram[101] = "0b00111101100010110101101100101101";
        ram[102] = "0b00111101101011010011100101010100";
        ram[103] = "0b00111101100000101100101110100111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_45) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_45_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_45) {
meminst = new L3_up_L2_WEIGHTS_45_ram("L3_up_L2_WEIGHTS_45_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_45() {
    delete meminst;
}


};//endmodule
#endif
