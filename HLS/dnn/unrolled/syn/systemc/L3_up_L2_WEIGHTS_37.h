// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_37_H__
#define __L3_up_L2_WEIGHTS_37_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_37_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_37_ram) {
        ram[0] = "0b00111100110011100100101001111011";
        ram[1] = "0b00111101011110001110011011010001";
        ram[2] = "0b00111101101110100111100111111111";
        ram[3] = "0b00111101101011011100000010011000";
        ram[4] = "0b00111101000011000000010110010010";
        ram[5] = "0b10111101001110001101001011100101";
        ram[6] = "0b10111101111001100011100001000011";
        ram[7] = "0b10111110000010111101011100101100";
        ram[8] = "0b10111101110010011011100101010010";
        ram[9] = "0b00111100111011101001111111110001";
        ram[10] = "0b00111110000010010101011011000001";
        ram[11] = "0b00111110001011001001001101100100";
        ram[12] = "0b00111101111010001001011011011101";
        ram[13] = "0b10111100111001000101100000000100";
        ram[14] = "0b10111101111001011111110100000101";
        ram[15] = "0b10111110000100110101010101000111";
        ram[16] = "0b10111101111000010111101100001111";
        ram[17] = "0b10111101010000101010011001101110";
        ram[18] = "0b00111101001011000001100011111000";
        ram[19] = "0b00111110000011110010010110100010";
        ram[20] = "0b00111110000001011010110110010111";
        ram[21] = "0b00111101101101000110010101100010";
        ram[22] = "0b10111011001100010101011100100110";
        ram[23] = "0b10111101110100100010110100001110";
        ram[24] = "0b10111110000001100011100001000011";
        ram[25] = "0b10111101110110010101110111010101";
        ram[26] = "0b00111101010011100100011001001010";
        ram[27] = "0b00111101100111010100001010000001";
        ram[28] = "0b00111101010100011001100110111011";
        ram[29] = "0b10111011000111000001101101010100";
        ram[30] = "0b00111100100000100001101011111000";
        ram[31] = "0b00111100101000011010100100110011";
        ram[32] = "0b00111100100101100101100100001000";
        ram[33] = "0b10111100100010100000001010111000";
        ram[34] = "0b10111101101110110001011000111100";
        ram[35] = "0b10111101111110000000101000011000";
        ram[36] = "0b10111101011101001100110100110001";
        ram[37] = "0b00111101010011000110001111110001";
        ram[38] = "0b00111110000011011110111111001000";
        ram[39] = "0b00111110000101001100000001011001";
        ram[40] = "0b00111101010101100101011011101111";
        ram[41] = "0b10111101100010111111111101000111";
        ram[42] = "0b10111110000010101100000010000011";
        ram[43] = "0b10111101110110010011010011110000";
        ram[44] = "0b10111101000101010000000000001101";
        ram[45] = "0b00111101011110000011001001110110";
        ram[46] = "0b00111101101000111001101000111001";
        ram[47] = "0b00111101101001000011010001011101";
        ram[48] = "0b00111101000010110111100000000011";
        ram[49] = "0b10111010000100000010110111100000";
        ram[50] = "0b10111101010110101010001111110000";
        ram[51] = "0b10111101011001011000101000110011";
        ram[52] = "0b00111101100001100001110110000110";
        ram[53] = "0b00111101000111110100011111111010";
        ram[54] = "0b00111100100101101010000001010101";
        ram[55] = "0b10111101001101111010001111011011";
        ram[56] = "0b10111101110010011100000100101111";
        ram[57] = "0b10111101111100010010011101110000";
        ram[58] = "0b10111101100101100101011111111011";
        ram[59] = "0b00111101000010011110110111000000";
        ram[60] = "0b00111110000000011010010110000111";
        ram[61] = "0b00111110001000101101101110100101";
        ram[62] = "0b00111101110001001010100111001110";
        ram[63] = "0b10111100111100111010001101100110";
        ram[64] = "0b10111110000010010000001000010101";
        ram[65] = "0b10111110000111101011011101000101";
        ram[66] = "0b10111101110111110110110000100111";
        ram[67] = "0b10111100110010101001001001100000";
        ram[68] = "0b00111101101110000111110111110110";
        ram[69] = "0b00111110000011100110001011011100";
        ram[70] = "0b00111110000010011000100011010011";
        ram[71] = "0b00111101100011010111000011100111";
        ram[72] = "0b10111101001000011111100111110000";
        ram[73] = "0b10111101111101010100110100011111";
        ram[74] = "0b10111110000010111100001001110110";
        ram[75] = "0b10111101110001010110010011111001";
        ram[76] = "0b10111101000000101100100100001000";
        ram[77] = "0b00111101100011110110010110011001";
        ram[78] = "0b00111101100100000101010100110010";
        ram[79] = "0b00111100111011000010111011111101";
        ram[80] = "0b10111100110110010010110110011001";
        ram[81] = "0b10111100111011011101010010000100";
        ram[82] = "0b10111010101011101111101100101011";
        ram[83] = "0b10111100101001101101011010011001";
        ram[84] = "0b10111101100010100001011110110001";
        ram[85] = "0b10111101100011010100101010100001";
        ram[86] = "0b10111101011101110100111111111000";
        ram[87] = "0b00111101000001000100100111011100";
        ram[88] = "0b00111110000000010101001101111010";
        ram[89] = "0b00111110000111001111011010111110";
        ram[90] = "0b00111101010111100110001101100011";
        ram[91] = "0b10111101100011010011100001000111";
        ram[92] = "0b10111110000101001101011100101000";
        ram[93] = "0b10111110000001010100011110011101";
        ram[94] = "0b10111101001101110000111011110101";
        ram[95] = "0b00111101101011101110011100111110";
        ram[96] = "0b00111101111011010011011000101111";
        ram[97] = "0b00111101110111000001100100111011";
        ram[98] = "0b00111101001010101001000011001101";
        ram[99] = "0b10111101010000000001111101110101";
        ram[100] = "0b10111101011101010001100010110001";
        ram[101] = "0b10111101100000110011001001101010";
        ram[102] = "0b10111101100010001011110110101001";
        ram[103] = "0b10111101001100111010110111100010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_37) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_37_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_37) {
meminst = new L3_up_L2_WEIGHTS_37_ram("L3_up_L2_WEIGHTS_37_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_37() {
    delete meminst;
}


};//endmodule
#endif
