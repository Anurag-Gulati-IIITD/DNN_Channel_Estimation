// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_24_H__
#define __L3_up_L2_WEIGHTS_24_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_24_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_24_ram) {
        ram[0] = "0b10111100010010100110000000001011";
        ram[1] = "0b10111010100011101011110011000111";
        ram[2] = "0b00111011111010100100001000101001";
        ram[3] = "0b00111100010101110111111110101110";
        ram[4] = "0b00111100010010000001010011010111";
        ram[5] = "0b00111010010101000001001100010010";
        ram[6] = "0b10111011101100100111010001011100";
        ram[7] = "0b10111011000000111000011111011111";
        ram[8] = "0b10111011101011100111110101010110";
        ram[9] = "0b00111010011111111101101001000000";
        ram[10] = "0b00111011100111010000111010011001";
        ram[11] = "0b10111001110111001011100110101010";
        ram[12] = "0b10111011001011010001010010100001";
        ram[13] = "0b00111011100001111111010001010110";
        ram[14] = "0b00111011000111111011011000010011";
        ram[15] = "0b00111011100000111101001101011111";
        ram[16] = "0b00111011010000010001000110101110";
        ram[17] = "0b10111011000000111010100101101101";
        ram[18] = "0b10111011011101101111000010001101";
        ram[19] = "0b00111011001101000011100101011000";
        ram[20] = "0b00111010010100001110110111000100";
        ram[21] = "0b10111011100100101000000101110111";
        ram[22] = "0b10111011110110111010110100111010";
        ram[23] = "0b10111011111101000101100111011010";
        ram[24] = "0b10111011010010110000011111010001";
        ram[25] = "0b00111100000101101000010100010010";
        ram[26] = "0b00111011000011100100011101010110";
        ram[27] = "0b10111011100001100101100101001011";
        ram[28] = "0b10111100010100110010110001100010";
        ram[29] = "0b10111100000101100100111010001011";
        ram[30] = "0b00111011111001011111111110100100";
        ram[31] = "0b00111100010001001001011101110100";
        ram[32] = "0b00111011100111111111000011001100";
        ram[33] = "0b10111011100011101010001110011100";
        ram[34] = "0b10111100001000100011011111001110";
        ram[35] = "0b10111011111110110001000110000100";
        ram[36] = "0b00111001100111100101010111000001";
        ram[37] = "0b00111100001001111011010011100101";
        ram[38] = "0b00111011111000101011100011000111";
        ram[39] = "0b00111011100001100110000110101110";
        ram[40] = "0b10111010111010000110010000000010";
        ram[41] = "0b10111011100100100000110000000111";
        ram[42] = "0b10111011100101011001111001100010";
        ram[43] = "0b10111011100010010110110111010010";
        ram[44] = "0b10111100000001101000111111010010";
        ram[45] = "0b10111011100011101100010100101010";
        ram[46] = "0b10111001011001011010001101011101";
        ram[47] = "0b00111011100101100100011000101000";
        ram[48] = "0b00111100001011001100010011110000";
        ram[49] = "0b00111100000111011011001000101101";
        ram[50] = "0b00111011001010111000000111111001";
        ram[51] = "0b10111100000001101000011101101110";
        ram[52] = "0b00111011111010100101101101010011";
        ram[53] = "0b00111100001110011100011100110111";
        ram[54] = "0b00111100011000010111010111010001";
        ram[55] = "0b00111010101110101100011100010001";
        ram[56] = "0b10111100000010110000110100001111";
        ram[57] = "0b10111100001001001000111110010111";
        ram[58] = "0b10111100000111000101111001110000";
        ram[59] = "0b10111001011101010101110111100110";
        ram[60] = "0b00111011100111001100001100011010";
        ram[61] = "0b00111010001101001001111000000010";
        ram[62] = "0b10111010110111111001101111011100";
        ram[63] = "0b10111010000101001010001010111010";
        ram[64] = "0b10111010100101010110110000001101";
        ram[65] = "0b00111011010111101101001010001001";
        ram[66] = "0b00111011110110100110011000010011";
        ram[67] = "0b10111011000001010010101101001110";
        ram[68] = "0b10111011110001110111010101110101";
        ram[69] = "0b00111001100011111010011110101000";
        ram[70] = "0b10111001111011011000000010100001";
        ram[71] = "0b00111010101101111010000111000010";
        ram[72] = "0b10111011001100000001100001100001";
        ram[73] = "0b10111011010001001000101011011111";
        ram[74] = "0b10111011010010001100110101100100";
        ram[75] = "0b00111011110110010010111110110010";
        ram[76] = "0b00111011101101001101000001010111";
        ram[77] = "0b00111011100001101001110001100111";
        ram[78] = "0b10111100001111010110000111110110";
        ram[79] = "0b10111011110010001000101001001000";
        ram[80] = "0b10111010101111101101011101000001";
        ram[81] = "0b00111011111110001111100010100101";
        ram[82] = "0b00111011111111101110011011111011";
        ram[83] = "0b00111001001111101101011101000001";
        ram[84] = "0b10111100001011100111000011000001";
        ram[85] = "0b10111100000000111011000111010001";
        ram[86] = "0b10111011011000000000000010000110";
        ram[87] = "0b00111100001100000001100001100001";
        ram[88] = "0b00111100000011101001001011010101";
        ram[89] = "0b00111011100011001101011000111101";
        ram[90] = "0b10111011001110100100000011011001";
        ram[91] = "0b10111100001010000001110111000001";
        ram[92] = "0b10111011111010001000010110010000";
        ram[93] = "0b10111011000010100001010110011000";
        ram[94] = "0b00111000110111000011001101110010";
        ram[95] = "0b00111001110111011100011000011001";
        ram[96] = "0b00111011000010000111001000101010";
        ram[97] = "0b00111011100100101101110110111110";
        ram[98] = "0b00111011111001110000001110110000";
        ram[99] = "0b00111100000100010110010001000001";
        ram[100] = "0b00111010110000011111110010001111";
        ram[101] = "0b10111011111001101000010111011011";
        ram[102] = "0b10111100010110101111010010101110";
        ram[103] = "0b10111100001101110101001000010001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_24) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_24_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_24) {
meminst = new L3_up_L2_WEIGHTS_24_ram("L3_up_L2_WEIGHTS_24_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_24() {
    delete meminst;
}


};//endmodule
#endif
