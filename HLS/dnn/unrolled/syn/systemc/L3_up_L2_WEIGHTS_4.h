// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_4_H__
#define __L3_up_L2_WEIGHTS_4_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_4_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_4_ram) {
        ram[0] = "0b00111101010111111001101111011100";
        ram[1] = "0b00111110000101110000110110100110";
        ram[2] = "0b00111110000011111110100011101110";
        ram[3] = "0b00111101100110101100011110010111";
        ram[4] = "0b10111101000110000110001000101100";
        ram[5] = "0b10111101101011110001001111001111";
        ram[6] = "0b10111101110001010000001111111011";
        ram[7] = "0b10111100110010111111110100101111";
        ram[8] = "0b00111011101000100000000101000111";
        ram[9] = "0b10111011111001000110010010011001";
        ram[10] = "0b10111011110011101110010110101100";
        ram[11] = "0b00111101000000001100111010010010";
        ram[12] = "0b00111101011011101000110000000101";
        ram[13] = "0b00111101110010001011111000101111";
        ram[14] = "0b00111100110001101111100110111010";
        ram[15] = "0b10111101001110100011111111001101";
        ram[16] = "0b10111101110111101001010010101011";
        ram[17] = "0b10111101110001011100111111101110";
        ram[18] = "0b00111100000001000111111101010110";
        ram[19] = "0b00111101100111100011100001100101";
        ram[20] = "0b00111101110110010011010101110110";
        ram[21] = "0b00111101000101010100011001001110";
        ram[22] = "0b10111101001110111111011000011011";
        ram[23] = "0b10111101001111101010000010111010";
        ram[24] = "0b10111100101001000100000111111111";
        ram[25] = "0b00111100101100000010000011000101";
        ram[26] = "0b10111100011001011010111111110011";
        ram[27] = "0b10111101001011010010111011011000";
        ram[28] = "0b10110110111010101110000110001011";
        ram[29] = "0b00111101100001100111010110011011";
        ram[30] = "0b00111101011111011100110111110111";
        ram[31] = "0b00111100100110100010011000011100";
        ram[32] = "0b10111101011101110110000111001100";
        ram[33] = "0b10111101101110111101111100001001";
        ram[34] = "0b10111101010001100010101000011011";
        ram[35] = "0b00111101001100011111010101111011";
        ram[36] = "0b00111101110111100011010010111001";
        ram[37] = "0b00111101011110011100111110011010";
        ram[38] = "0b10111100100100011000110000011001";
        ram[39] = "0b10111101100111000010010000111110";
        ram[40] = "0b10111101000100001100010111101011";
        ram[41] = "0b00111101001110001011010110001001";
        ram[42] = "0b00111101101101010001111001110101";
        ram[43] = "0b00111100011000000100001110100010";
        ram[44] = "0b10111101100011110001100010000111";
        ram[45] = "0b10111110000011100110010110111111";
        ram[46] = "0b10111101100011000010000011010101";
        ram[47] = "0b00111101101010000010101011011100";
        ram[48] = "0b00111110001101000001001000000110";
        ram[49] = "0b00111110001111110101100001111101";
        ram[50] = "0b00111101001100111000001111110001";
        ram[51] = "0b10111101111111111111011000001010";
        ram[52] = "0b00111110010000101001011010110011";
        ram[53] = "0b00111101101111001100000110000111";
        ram[54] = "0b10111101000100001110000100101111";
        ram[55] = "0b10111110000100011110011000000100";
        ram[56] = "0b10111101111001011111111100011110";
        ram[57] = "0b10111101010010111011011011101101";
        ram[58] = "0b00111101000101111110001000111111";
        ram[59] = "0b00111101010001001010101101100000";
        ram[60] = "0b00111100111110101001110000010011";
        ram[61] = "0b00111100110011100101000011000110";
        ram[62] = "0b00111101001101010010111010110110";
        ram[63] = "0b00111101010110111001011100110101";
        ram[64] = "0b00111100101100111000001011100100";
        ram[65] = "0b10111100111101111100011001110110";
        ram[66] = "0b10111101110111100101011001000111";
        ram[67] = "0b10111101101110110001111010011111";
        ram[68] = "0b10111100100011010110000010100110";
        ram[69] = "0b00111101101011001001101011111110";
        ram[70] = "0b00111101110011010011111010010010";
        ram[71] = "0b00111101100001001001111011001011";
        ram[72] = "0b10111100111100001111101111101100";
        ram[73] = "0b10111101110001101001011100101001";
        ram[74] = "0b10111101100000011000001001100110";
        ram[75] = "0b10111100000100001011010000011000";
        ram[76] = "0b00111101001100100001010111111101";
        ram[77] = "0b00111101001000110000100001111000";
        ram[78] = "0b10111100111000011111011111010111";
        ram[79] = "0b00111010100000011010000101010101";
        ram[80] = "0b00111101001111010000000001110001";
        ram[81] = "0b00111101000110001001010110001110";
        ram[82] = "0b10111101000000011010011010010011";
        ram[83] = "0b10111101101000110010000100011101";
        ram[84] = "0b10111101011111100111010010110000";
        ram[85] = "0b00111100001101010110111110111001";
        ram[86] = "0b00111101110001001001101010011001";
        ram[87] = "0b00111101101001100111110011110010";
        ram[88] = "0b00111100100110011010011000101111";
        ram[89] = "0b10111101101100101101110010110001";
        ram[90] = "0b10111101101101110101001100011110";
        ram[91] = "0b10111100101010110101001111010110";
        ram[92] = "0b00111101010000100111011000110010";
        ram[93] = "0b00111101011101100110111110010011";
        ram[94] = "0b10111100011110100100100000110000";
        ram[95] = "0b10111101110010110111011001110001";
        ram[96] = "0b10111101101110100000101011011001";
        ram[97] = "0b00111100111111010110111110010111";
        ram[98] = "0b00111110000010001010100011110100";
        ram[99] = "0b00111110000110100100000001010011";
        ram[100] = "0b00111101010000111010100001100001";
        ram[101] = "0b10111101110010100001100010111101";
        ram[102] = "0b10111110010111000001111010111101";
        ram[103] = "0b10111110001100101101101110100101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_4) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_4_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_4) {
meminst = new L3_up_L2_WEIGHTS_4_ram("L3_up_L2_WEIGHTS_4_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_4() {
    delete meminst;
}


};//endmodule
#endif
