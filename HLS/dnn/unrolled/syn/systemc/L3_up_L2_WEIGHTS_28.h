// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_28_H__
#define __L3_up_L2_WEIGHTS_28_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_28_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_28_ram) {
        ram[0] = "0b00111010100101111110100110010110";
        ram[1] = "0b10111011010111000001000111100100";
        ram[2] = "0b10111011101111000101100110111000";
        ram[3] = "0b10111011100000101011111010001100";
        ram[4] = "0b10111011001010000101110010101011";
        ram[5] = "0b00111010111111010011101100101010";
        ram[6] = "0b00111011011010101011111111111101";
        ram[7] = "0b00111011011110010001101000110011";
        ram[8] = "0b00111011001000010000010110011111";
        ram[9] = "0b00111010100000011110010001110001";
        ram[10] = "0b10111001111111100100011110011001";
        ram[11] = "0b10111010101101111110010011011110";
        ram[12] = "0b10111011001000110000110110110111";
        ram[13] = "0b10111010010111000011001101110010";
        ram[14] = "0b10111001001010101110101011111011";
        ram[15] = "0b00111010001000100000000101000111";
        ram[16] = "0b10111001110001010010000111011110";
        ram[17] = "0b00111010010100011111101000110011";
        ram[18] = "0b00111010101101000111110001110100";
        ram[19] = "0b00111010110100100101111011011101";
        ram[20] = "0b00111011001000101000011101111111";
        ram[21] = "0b00111010100110110011000001110011";
        ram[22] = "0b00111010001001101111110001011001";
        ram[23] = "0b10111010100000101000110000110111";
        ram[24] = "0b10111011010100100101111011011101";
        ram[25] = "0b10111010100010010101110100001011";
        ram[26] = "0b10111010011110001000001100110100";
        ram[27] = "0b00111010011100110100010100000111";
        ram[28] = "0b00111010010101110011100001100001";
        ram[29] = "0b00111010110100110010100000110001";
        ram[30] = "0b00111010001111101001010000100101";
        ram[31] = "0b00111010101100010001010000001010";
        ram[32] = "0b10111010011111000010111010111010";
        ram[33] = "0b10111001111010000100001001110100";
        ram[34] = "0b10111001101101111000000000110100";
        ram[35] = "0b10111001110111000011001101110010";
        ram[36] = "0b10111011000010001111100001100010";
        ram[37] = "0b10111011001010010100011110001101";
        ram[38] = "0b10111010101100000010100100101000";
        ram[39] = "0b00111010000111000111111111111110";
        ram[40] = "0b00111011000100100111100100010100";
        ram[41] = "0b00111011010100000110011110001100";
        ram[42] = "0b00111011011011101011111101100110";
        ram[43] = "0b00111010100010110111010111101010";
        ram[44] = "0b10111010000000100000010111111111";
        ram[45] = "0b10111011001100001001111010011001";
        ram[46] = "0b10111011001110101011011001001010";
        ram[47] = "0b10111011011111000110000100001111";
        ram[48] = "0b10111011001011000100101101001101";
        ram[49] = "0b10111000101101100111001111000101";
        ram[50] = "0b00111011010101111111000011101101";
        ram[51] = "0b00111011100100100001110011001110";
        ram[52] = "0b10111011101001110000110100100000";
        ram[53] = "0b10111011110111011001110000101000";
        ram[54] = "0b10111011000110011111000110101110";
        ram[55] = "0b00111011011010000001000000011111";
        ram[56] = "0b00111011100011011111101111010111";
        ram[57] = "0b00111011011011111000100010111001";
        ram[58] = "0b00111011001110010101010111111000";
        ram[59] = "0b00111010001001110011111101110101";
        ram[60] = "0b10111011001001000100110001111011";
        ram[61] = "0b10111011010101001110110100101101";
        ram[62] = "0b10111011000100001111011100110100";
        ram[63] = "0b10111011100000000110101011110100";
        ram[64] = "0b10111000100110010001011110010100";
        ram[65] = "0b00111010010101010110001010011110";
        ram[66] = "0b00111010110001001001101110100110";
        ram[67] = "0b00111011001001011100111001011011";
        ram[68] = "0b00111010100110000010110010110010";
        ram[69] = "0b00111001111001111011110000111100";
        ram[70] = "0b10111000011011110001001101001001";
        ram[71] = "0b10111000111011110001001101001001";
        ram[72] = "0b10111010111000010000110011110110";
        ram[73] = "0b10111010110011111001111000111000";
        ram[74] = "0b10111011001101100110001011111110";
        ram[75] = "0b10111010110010101100010010110101";
        ram[76] = "0b10111010101110010001001011011100";
        ram[77] = "0b00111001100011001000001001011010";
        ram[78] = "0b00111010111000110010010111010101";
        ram[79] = "0b00111011001010001001111111000111";
        ram[80] = "0b00111010101110111001000001100100";
        ram[81] = "0b10111001010011011000010101011001";
        ram[82] = "0b10111011000001101111000001001010";
        ram[83] = "0b10110111111000100111111000001111";
        ram[84] = "0b10111010100000001101100000000010";
        ram[85] = "0b10111001011101100110101001010101";
        ram[86] = "0b10111011001000101011100111010100";
        ram[87] = "0b10111001101001110011111101110101";
        ram[88] = "0b10111010001110100001111101001011";
        ram[89] = "0b10111001001010001101001000011100";
        ram[90] = "0b00111011001101110110111101101101";
        ram[91] = "0b00111011000011110100001011111111";
        ram[92] = "0b00111011000111110110001000110000";
        ram[93] = "0b00111011010111100110110111011111";
        ram[94] = "0b10111001100111011100111110001001";
        ram[95] = "0b10111011001101110001101110001011";
        ram[96] = "0b10111011010001010011001010100101";
        ram[97] = "0b10111011011000110011011010011100";
        ram[98] = "0b10111010111110010110111000010110";
        ram[99] = "0b00111010011001111011110000111100";
        ram[100] = "0b00111011000000111110110010001001";
        ram[101] = "0b00111011001011011100110100101101";
        ram[102] = "0b00111011101100100101101100110001";
        ram[103] = "0b00111011011011100110101110000011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_28) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_28_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_28) {
meminst = new L3_up_L2_WEIGHTS_28_ram("L3_up_L2_WEIGHTS_28_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_28() {
    delete meminst;
}


};//endmodule
#endif
