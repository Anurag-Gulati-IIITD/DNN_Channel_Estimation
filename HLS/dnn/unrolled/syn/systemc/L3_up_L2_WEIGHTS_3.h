// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_3_H__
#define __L3_up_L2_WEIGHTS_3_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_3_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_3_ram) {
        ram[0] = "0b00111100000010110001000101000001";
        ram[1] = "0b10111100001110100001011011101000";
        ram[2] = "0b10111100001000101000111111100010";
        ram[3] = "0b10111100011000010111111000110101";
        ram[4] = "0b10111100100110101011110100011011";
        ram[5] = "0b00111100000111001101001111100001";
        ram[6] = "0b00111100010101111100011011111100";
        ram[7] = "0b00111100010100010011000011100000";
        ram[8] = "0b00111100100011011011111100000101";
        ram[9] = "0b10111001101000111001001111101110";
        ram[10] = "0b10111100100101000111101011100001";
        ram[11] = "0b10111100010011011110111000110101";
        ram[12] = "0b10111100001000101110110000101001";
        ram[13] = "0b10111011010011111110000101010100";
        ram[14] = "0b00111011100000101001010010011010";
        ram[15] = "0b00111011001001011011110110010100";
        ram[16] = "0b00111100001010001000001001101011";
        ram[17] = "0b00111100001100011110111000100100";
        ram[18] = "0b00111100001101111100001101010000";
        ram[19] = "0b10111011101011011101010110010001";
        ram[20] = "0b10111100011111111010001110111010";
        ram[21] = "0b10111100011101110001011001001100";
        ram[22] = "0b00111010001011110101111111010100";
        ram[23] = "0b10111011100111010000011000110110";
        ram[24] = "0b00111100011011110100000101101100";
        ram[25] = "0b00111100010011011110101000000011";
        ram[26] = "0b00111011101000101100001000110111";
        ram[27] = "0b10111100000100001100000010101101";
        ram[28] = "0b10111100001010110101100000001000";
        ram[29] = "0b10111011110011101110111000001111";
        ram[30] = "0b10111011010110101011000110010010";
        ram[31] = "0b10111010100001001010010100010110";
        ram[32] = "0b00111100000001010001011001010101";
        ram[33] = "0b00111011111111001100010110111001";
        ram[34] = "0b00111011110101100111011101110000";
        ram[35] = "0b00111100100101111000100100011110";
        ram[36] = "0b10111100010110001101011110011101";
        ram[37] = "0b10111100001110011101001111001100";
        ram[38] = "0b10111100011111111110101100000111";
        ram[39] = "0b10111100100110100000001001110101";
        ram[40] = "0b00111011010111000101010100000000";
        ram[41] = "0b00111100010111110101010010001111";
        ram[42] = "0b00111100011111011100010110010011";
        ram[43] = "0b00111100010110011001100010001101";
        ram[44] = "0b00111011110011100100111010101101";
        ram[45] = "0b10111100000001111111010001010110";
        ram[46] = "0b10111100010101100110101011011011";
        ram[47] = "0b10111100001110101000110001011000";
        ram[48] = "0b10111011111111110010000110110100";
        ram[49] = "0b10111010101101010000001010101100";
        ram[50] = "0b00111100000001000111101100100100";
        ram[51] = "0b00111100001101100101101010011011";
        ram[52] = "0b10111100000111000111001101101001";
        ram[53] = "0b10111100010110010100110100001110";
        ram[54] = "0b10111100101110101101000110001101";
        ram[55] = "0b00111100010111011111110010100000";
        ram[56] = "0b00111100000101111010001001001001";
        ram[57] = "0b00111100010011111111111010110000";
        ram[58] = "0b00111100100011010100001101001010";
        ram[59] = "0b10111100011000100001100101100101";
        ram[60] = "0b10111100010010101100000010000011";
        ram[61] = "0b10111100001101110100010101111100";
        ram[62] = "0b10111100001000011100111011110010";
        ram[63] = "0b00111010110001010100001101101100";
        ram[64] = "0b00111100001000000010101110000100";
        ram[65] = "0b00111100000101001100100001111010";
        ram[66] = "0b00111100001011100000001110110100";
        ram[67] = "0b00111100000000110100110100100111";
        ram[68] = "0b00111011101001101111001111110101";
        ram[69] = "0b10111010001000110000110110110111";
        ram[70] = "0b10111100000011111111001100101000";
        ram[71] = "0b10111100010000010011011101101101";
        ram[72] = "0b10111010101100101110100111001101";
        ram[73] = "0b00111100000011101010110000000000";
        ram[74] = "0b00111100001001010010011010010110";
        ram[75] = "0b00111100011011011010001000101111";
        ram[76] = "0b00111100001001000011011110000010";
        ram[77] = "0b00111011000011101001101100111001";
        ram[78] = "0b10111100011010001000000101011110";
        ram[79] = "0b10111011101111100111101011111010";
        ram[80] = "0b10111011100101111000110101010000";
        ram[81] = "0b10111010000101110100000111010001";
        ram[82] = "0b00111100000001110101110101010111";
        ram[83] = "0b00111100000000100110011001110111";
        ram[84] = "0b00111011100010100101000001010000";
        ram[85] = "0b00111100010001000110110110000011";
        ram[86] = "0b10111011100011101100010100101010";
        ram[87] = "0b10111011110001010100101111001111";
        ram[88] = "0b10111100010000101100010111100011";
        ram[89] = "0b10111100101101101011011011100001";
        ram[90] = "0b00111100000101100010010010011010";
        ram[91] = "0b00111100100100000111100101011111";
        ram[92] = "0b00111100100111011011010001000110";
        ram[93] = "0b00111100011000011011000010001010";
        ram[94] = "0b00111011011101110010001011100010";
        ram[95] = "0b10111100001011100001000001001001";
        ram[96] = "0b10111100010011101001010111111011";
        ram[97] = "0b10111100010111100011001100100111";
        ram[98] = "0b10111011111111001011010011110010";
        ram[99] = "0b00111100000011100111100110101011";
        ram[100] = "0b00111100001110001101100000100011";
        ram[101] = "0b00111011110100010110001100110101";
        ram[102] = "0b00111100100000010110101011001111";
        ram[103] = "0b00111100100000101101010110011101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_3) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_3_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_3) {
meminst = new L3_up_L2_WEIGHTS_3_ram("L3_up_L2_WEIGHTS_3_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_3() {
    delete meminst;
}


};//endmodule
#endif
