// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_15_H__
#define __L3_up_L2_WEIGHTS_15_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_15_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_15_ram) {
        ram[0] = "0b10111101001001011100001111011111";
        ram[1] = "0b00111101011100111011010000101101";
        ram[2] = "0b00111101110111100000110111101101";
        ram[3] = "0b00111101110100001110100110010010";
        ram[4] = "0b00111100111001100111011100101101";
        ram[5] = "0b10111101100010000010111000000010";
        ram[6] = "0b10111110000000001101011110111111";
        ram[7] = "0b10111101110100100100111100100010";
        ram[8] = "0b10111100001111011101101110011000";
        ram[9] = "0b00111101101011010001111000010001";
        ram[10] = "0b00111110000010110111000110111001";
        ram[11] = "0b00111101110101101101110010100000";
        ram[12] = "0b00111010010001011010100000010101";
        ram[13] = "0b10111101101000000101111001011111";
        ram[14] = "0b10111101111011101011110101001101";
        ram[15] = "0b10111101100100011101101000111000";
        ram[16] = "0b00111100001000101111100010111110";
        ram[17] = "0b00111101100001000110100011001011";
        ram[18] = "0b00111101100000100100000010111000";
        ram[19] = "0b00111100100100101101101110100101";
        ram[20] = "0b00111100000001110111001001010000";
        ram[21] = "0b00111100000000100100110101001101";
        ram[22] = "0b00111010001000111001001111101110";
        ram[23] = "0b10111100100011100010100111111010";
        ram[24] = "0b10111101011110011011000000100101";
        ram[25] = "0b10111101011011011010111011000101";
        ram[26] = "0b00111101101101010000111010111011";
        ram[27] = "0b00111101111000101001100001000110";
        ram[28] = "0b00111101010010100010010101010011";
        ram[29] = "0b10111101100000010101010011001010";
        ram[30] = "0b10111110001001000001111001011000";
        ram[31] = "0b10111101111010000001010111100100";
        ram[32] = "0b00111100100111011100100100111111";
        ram[33] = "0b00111110000101010010100111111110";
        ram[34] = "0b00111110001100101010010010011000";
        ram[35] = "0b00111101100110010100011011000011";
        ram[36] = "0b10111101100011000011101100001100";
        ram[37] = "0b10111110000111000001111001111001";
        ram[38] = "0b10111110000001100110011111111001";
        ram[39] = "0b10111101001000010001111111010110";
        ram[40] = "0b00111101010111101001111100100111";
        ram[41] = "0b00111101101111100001011111100011";
        ram[42] = "0b00111101101100010011100101000011";
        ram[43] = "0b00111101001111110000111111100000";
        ram[44] = "0b00111100101100100110011111000111";
        ram[45] = "0b10111101000100000100110101010101";
        ram[46] = "0b10111101100101100011101000011001";
        ram[47] = "0b10111101110101110101110100010100";
        ram[48] = "0b10111101100111110101000111110000";
        ram[49] = "0b00111100010111010100110001110111";
        ram[50] = "0b00111110000000000001101111001010";
        ram[51] = "0b00111110000101110001111101111001";
        ram[52] = "0b00111101111011111110000111011010";
        ram[53] = "0b00111101111001011001001110100011";
        ram[54] = "0b00111100111000100101111010011010";
        ram[55] = "0b10111101100100010101111110001001";
        ram[56] = "0b10111101111011111110010110000110";
        ram[57] = "0b10111101110010100001000011100000";
        ram[58] = "0b10111100011001100111100101000110";
        ram[59] = "0b00111101100111110111101111100001";
        ram[60] = "0b00111110000001011100000101000000";
        ram[61] = "0b00111101111000000111000010111001";
        ram[62] = "0b00111100011000110100101110010100";
        ram[63] = "0b10111101101100000000101000111001";
        ram[64] = "0b10111110000001100010110101000001";
        ram[65] = "0b10111101101101111001001010001110";
        ram[66] = "0b00111011011011000000111110001000";
        ram[67] = "0b00111101101100111000101000111011";
        ram[68] = "0b00111101101100110100001001101000";
        ram[69] = "0b00111101001100101001101100101000";
        ram[70] = "0b10111100010011000110100000100011";
        ram[71] = "0b10111101000011001010010011110100";
        ram[72] = "0b10111100100100101100100011000101";
        ram[73] = "0b10111100100010111110001011111000";
        ram[74] = "0b10111100111110101001100111111010";
        ram[75] = "0b10111101001000101001100001000110";
        ram[76] = "0b00111011010011111101000010001101";
        ram[77] = "0b00111101011011011111111110000010";
        ram[78] = "0b00111101100010100110110010100000";
        ram[79] = "0b10111101000111000000000000010001";
        ram[80] = "0b10111101111111010000000001110001";
        ram[81] = "0b10111101111110010110010110110010";
        ram[82] = "0b10111100110001111100010100100110";
        ram[83] = "0b00111101111010000110101001001101";
        ram[84] = "0b00111110001110100001011001100001";
        ram[85] = "0b00111101110010001011110100100011";
        ram[86] = "0b10111101001011000011010000111011";
        ram[87] = "0b10111110001001110011111100110001";
        ram[88] = "0b10111110001000100011001001001101";
        ram[89] = "0b10111101011010111111101010001111";
        ram[90] = "0b00111101100101001010010001001100";
        ram[91] = "0b00111110000010000001000011101001";
        ram[92] = "0b00111101110011001000001001011010";
        ram[93] = "0b00111101000011100001000011001111";
        ram[94] = "0b10111100101111000111000011001010";
        ram[95] = "0b10111101100010001000001001101011";
        ram[96] = "0b10111101100111110000101100101000";
        ram[97] = "0b10111101101000010000000011100111";
        ram[98] = "0b10111101011111110011010010010100";
        ram[99] = "0b00111100011110010001011000000001";
        ram[100] = "0b00111101101111110101010100010101";
        ram[101] = "0b00111110000010110111001110001110";
        ram[102] = "0b00111101101110011000111110100011";
        ram[103] = "0b10111100110001100100110111000010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_15) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_15_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_15) {
meminst = new L3_up_L2_WEIGHTS_15_ram("L3_up_L2_WEIGHTS_15_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_15() {
    delete meminst;
}


};//endmodule
#endif
