// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_17_H__
#define __L3_up_L2_WEIGHTS_17_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_17_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_17_ram) {
        ram[0] = "0b10111011100011110001000010101010";
        ram[1] = "0b10111011011111101001101101111100";
        ram[2] = "0b10111011011000111010110000001100";
        ram[3] = "0b10111011100100110001000000010011";
        ram[4] = "0b00111011000110000011110101111001";
        ram[5] = "0b00111011100000011100101101000111";
        ram[6] = "0b00111011101000100110010111110001";
        ram[7] = "0b00111011101011101110101001100100";
        ram[8] = "0b10111010010111001111110011000110";
        ram[9] = "0b10111011011010110110011111000011";
        ram[10] = "0b10111011011100001110100100001100";
        ram[11] = "0b10111011100001010100010001111000";
        ram[12] = "0b10111011010100001000100100011010";
        ram[13] = "0b00111010100010111101101010010100";
        ram[14] = "0b10111001001000010111101100001111";
        ram[15] = "0b00111001100001010010101101001110";
        ram[16] = "0b00111011101010000101010001000111";
        ram[17] = "0b00111011010001010001000100010111";
        ram[18] = "0b00111011000111110101000101101001";
        ram[19] = "0b10111000100100101100110011110111";
        ram[20] = "0b10111011001101011101110011000110";
        ram[21] = "0b10111010111101011100001010001111";
        ram[22] = "0b10111011001011000000100000110001";
        ram[23] = "0b10111010110110101110001111100111";
        ram[24] = "0b00111010010101000101011000101110";
        ram[25] = "0b00111010110111000111011010001110";
        ram[26] = "0b00111011110001010011101100001000";
        ram[27] = "0b00111011001000110010111101000101";
        ram[28] = "0b10111010111101011110010000011101";
        ram[29] = "0b10111011111011010101011010110000";
        ram[30] = "0b10111011111100101011111011001111";
        ram[31] = "0b10111001101000010111101100001111";
        ram[32] = "0b00111011100110101011101100000010";
        ram[33] = "0b00111100000000000010110000001010";
        ram[34] = "0b00111011001100000101101101111101";
        ram[35] = "0b10111011111011111100101111010101";
        ram[36] = "0b10111011111100011010000110011000";
        ram[37] = "0b10111011101111101111000001101011";
        ram[38] = "0b00111011100101010101001011100011";
        ram[39] = "0b00111100001011010011101001100000";
        ram[40] = "0b00111100000000111101011110010000";
        ram[41] = "0b00111011000001001001010001001111";
        ram[42] = "0b10111011110011010001100001001100";
        ram[43] = "0b10111011110011101111011001110011";
        ram[44] = "0b10111010110101101011001000101001";
        ram[45] = "0b00111011010010011010011101111110";
        ram[46] = "0b00111011000101100011010101100001";
        ram[47] = "0b10111010110011010100001000111110";
        ram[48] = "0b10111011011110101001110000010011";
        ram[49] = "0b10111011000110011001110111001011";
        ram[50] = "0b00111011101000001010000011110101";
        ram[51] = "0b00111100000000100110011001110111";
        ram[52] = "0b10111011000000001001010011100110";
        ram[53] = "0b00111010100110011110000011100111";
        ram[54] = "0b00111011010011010000111111101001";
        ram[55] = "0b00111011001101111010000111000010";
        ram[56] = "0b00111011101001101000111101001011";
        ram[57] = "0b00111011101111011100001001101110";
        ram[58] = "0b10111010100111100111011101001111";
        ram[59] = "0b10111011011111110110010011010000";
        ram[60] = "0b10111011100110101101010000101100";
        ram[61] = "0b10111011101110101010110111100110";
        ram[62] = "0b10111000000001100011011110111101";
        ram[63] = "0b00111011010111101110001101010000";
        ram[64] = "0b00111011000110100101011001011000";
        ram[65] = "0b00111011000001010110111001101001";
        ram[66] = "0b00111011101001001010000001011110";
        ram[67] = "0b00111010110010110010100101011111";
        ram[68] = "0b00111010101010010001010100111000";
        ram[69] = "0b00111001010001110011101010111101";
        ram[70] = "0b10111011101001111010110010000010";
        ram[71] = "0b10111011001111110111111100000110";
        ram[72] = "0b10111010101100111101010010101110";
        ram[73] = "0b10111010000111110110001000110000";
        ram[74] = "0b00111011001011000111110110100010";
        ram[75] = "0b00111010011011101000110100010001";
        ram[76] = "0b00111011100001110111011010000001";
        ram[77] = "0b00111011100000100111001100001100";
        ram[78] = "0b10111001110101001101110001100110";
        ram[79] = "0b10111011111111001000001010011101";
        ram[80] = "0b10111011111011101110100101010111";
        ram[81] = "0b10111010110111001001100000011100";
        ram[82] = "0b00111011001110101111100101100110";
        ram[83] = "0b00111100000010110000010010101011";
        ram[84] = "0b00111011111000101101000111110010";
        ram[85] = "0b10111011100011110011101010011011";
        ram[86] = "0b10111011101000111110011111010001";
        ram[87] = "0b10111011111100100001011100001001";
        ram[88] = "0b00111010010100000110011110001100";
        ram[89] = "0b00111100000101000001110010000010";
        ram[90] = "0b00111100000101110101001010010111";
        ram[91] = "0b00111011100101000101011100111010";
        ram[92] = "0b10111011101101001110100110000001";
        ram[93] = "0b10111100001011011000000110101110";
        ram[94] = "0b10111011110000001100111010010010";
        ram[95] = "0b10111001101011011000101000010001";
        ram[96] = "0b00111011100001110100110010010000";
        ram[97] = "0b00111011000010100101100010110100";
        ram[98] = "0b10111010101110111001000001100100";
        ram[99] = "0b10111011001101111111010110100101";
        ram[100] = "0b00111011000001000101000100110011";
        ram[101] = "0b00111011101101111101010000010111";
        ram[102] = "0b00111011101110101010110111100110";
        ram[103] = "0b00111001101011100001000001001001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_17) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_17_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_17) {
meminst = new L3_up_L2_WEIGHTS_17_ram("L3_up_L2_WEIGHTS_17_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_17() {
    delete meminst;
}


};//endmodule
#endif
