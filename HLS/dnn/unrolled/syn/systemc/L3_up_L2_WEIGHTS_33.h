// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_33_H__
#define __L3_up_L2_WEIGHTS_33_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_33_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_33_ram) {
        ram[0] = "0b00111011000000101100111101010011";
        ram[1] = "0b00111011001111101110100000001000";
        ram[2] = "0b00111010001000000110111010100000";
        ram[3] = "0b10111000000101101111111010110101";
        ram[4] = "0b10111011000001101111000001001010";
        ram[5] = "0b00111011000110000110111111001110";
        ram[6] = "0b00111011011000110010010111010101";
        ram[7] = "0b00111011010001110000100001101000";
        ram[8] = "0b10111011010010110111110101000001";
        ram[9] = "0b10111011100101011101100100011011";
        ram[10] = "0b10111011010000001000101101110110";
        ram[11] = "0b00111001110111111101111011111000";
        ram[12] = "0b00111011010110010111001011001101";
        ram[13] = "0b00111011110110011000101111111000";
        ram[14] = "0b00111010010001010110010011111001";
        ram[15] = "0b10111011001101110110111101101101";
        ram[16] = "0b10111011001110101100011100010001";
        ram[17] = "0b10111011001100111010001001011001";
        ram[18] = "0b00111010111111001001001101100100";
        ram[19] = "0b00111011001110010101010111111000";
        ram[20] = "0b10111010100111000011110011100010";
        ram[21] = "0b10111010001000101000011101111111";
        ram[22] = "0b10111010000010011110001101000011";
        ram[23] = "0b00111000100100101100110011110111";
        ram[24] = "0b00111001000111000011110011100010";
        ram[25] = "0b00111011001100011100110010010110";
        ram[26] = "0b10111001111111100100011110011001";
        ram[27] = "0b00111001110001110011101010111101";
        ram[28] = "0b10111001001100000010100100101000";
        ram[29] = "0b10111001101000001111010011011000";
        ram[30] = "0b10111011010001010000000001010000";
        ram[31] = "0b10111010111100111000100000100010";
        ram[32] = "0b10111011010010010101001110011100";
        ram[33] = "0b00111001011000000110010100110000";
        ram[34] = "0b00111011010110101001000000000100";
        ram[35] = "0b00111010111000000110010100110000";
        ram[36] = "0b10111010011110100101100011110111";
        ram[37] = "0b10111011001011000111110110100010";
        ram[38] = "0b10111010100001100001011000101111";
        ram[39] = "0b00111011000111011010110111111011";
        ram[40] = "0b00111011001110110100110101001001";
        ram[41] = "0b00111010010000011111110010001111";
        ram[42] = "0b10111010011111010011101100101010";
        ram[43] = "0b10111011100111010000111010011001";
        ram[44] = "0b10111010101000100010001011010101";
        ram[45] = "0b00111001010011000111100011101010";
        ram[46] = "0b00111011001100010011010110011000";
        ram[47] = "0b00111000011000100111111000001111";
        ram[48] = "0b10111010101110110100110101001001";
        ram[49] = "0b10111010001010011001101101101111";
        ram[50] = "0b00111011001100010001010000001010";
        ram[51] = "0b00111011011100110101010111001110";
        ram[52] = "0b00111011101000000011110001001011";
        ram[53] = "0b10111011001111101010010011101100";
        ram[54] = "0b10111011010100000001001110101001";
        ram[55] = "0b00111010011010101110000110001011";
        ram[56] = "0b00111010101110011101110000101111";
        ram[57] = "0b00111011000010100000010011010001";
        ram[58] = "0b10110111100001100011011110111101";
        ram[59] = "0b10111011000111001111010101101111";
        ram[60] = "0b10111011100101010011100110111001";
        ram[61] = "0b10111011000101011011111111110000";
        ram[62] = "0b00111011011011001110100110100011";
        ram[63] = "0b00111010111111100000010001111101";
        ram[64] = "0b00111010111101111011100111100000";
        ram[65] = "0b10111010111111100110100100100111";
        ram[66] = "0b10111011010000111101001001010010";
        ram[67] = "0b10111011001011010100011011110110";
        ram[68] = "0b00111010101101011100101111111111";
        ram[69] = "0b00111011001100011001101001000001";
        ram[70] = "0b10111010111000110110100011110001";
        ram[71] = "0b10111010001001100111011000100001";
        ram[72] = "0b10111011001101110010110001010010";
        ram[73] = "0b10111010111001010001110100100110";
        ram[74] = "0b00111010100001000100000001101100";
        ram[75] = "0b00111011001101101101100001101111";
        ram[76] = "0b00111010001001001010000001011110";
        ram[77] = "0b10111010000000100000010111111111";
        ram[78] = "0b10111010011010100001100000110111";
        ram[79] = "0b00111010011110010100110010001000";
        ram[80] = "0b10111001100110011001110111001011";
        ram[81] = "0b10111010110011101111011001110011";
        ram[82] = "0b10111011010101101001000010011011";
        ram[83] = "0b00111010110011010100001000111110";
        ram[84] = "0b00111011010000001010110100000100";
        ram[85] = "0b00111011011010111000100101010000";
        ram[86] = "0b10111010100000111111110101010000";
        ram[87] = "0b10111010011101101010110101110001";
        ram[88] = "0b10111011001001000000100101011111";
        ram[89] = "0b10111001101001011010110011001101";
        ram[90] = "0b00111011001001111010010000011110";
        ram[91] = "0b00111010100111110001111100010101";
        ram[92] = "0b10111010000110001001000101011100";
        ram[93] = "0b00111001111111110101010000001001";
        ram[94] = "0b10111010001101000101101011100110";
        ram[95] = "0b00111010000011000011111100111110";
        ram[96] = "0b00111011001000111001001111101110";
        ram[97] = "0b00111010110010000110100010111010";
        ram[98] = "0b10111010110000110000100011111111";
        ram[99] = "0b10111010110100010101001001101110";
        ram[100] = "0b10111010111000001110101101101000";
        ram[101] = "0b10111001100011111010011110101000";
        ram[102] = "0b00111011100000100101000101111110";
        ram[103] = "0b00111010110010011101100111010011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_33) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_33_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_33) {
meminst = new L3_up_L2_WEIGHTS_33_ram("L3_up_L2_WEIGHTS_33_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_33() {
    delete meminst;
}


};//endmodule
#endif
