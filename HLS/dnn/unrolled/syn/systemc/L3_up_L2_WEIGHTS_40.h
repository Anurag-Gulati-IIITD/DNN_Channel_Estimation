// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_40_H__
#define __L3_up_L2_WEIGHTS_40_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_40_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_40_ram) {
        ram[0] = "0b10111011110100100110011101000001";
        ram[1] = "0b10111011111011001000010011111001";
        ram[2] = "0b00111011011011011010001000101111";
        ram[3] = "0b00111100000100000000110001010010";
        ram[4] = "0b00111011100110100011010011001010";
        ram[5] = "0b10111010100110111111100111000110";
        ram[6] = "0b10111011110011010101001100000101";
        ram[7] = "0b10111011101001110101000000111100";
        ram[8] = "0b10111011000100011111001011011100";
        ram[9] = "0b00111011011110010101110101001111";
        ram[10] = "0b00111011000000010110111100000000";
        ram[11] = "0b00111001001100010011010110011000";
        ram[12] = "0b00111001100101100111100001111101";
        ram[13] = "0b10111010100000111011101000110100";
        ram[14] = "0b10111010100010001111100001100010";
        ram[15] = "0b00111011010001111111001101001001";
        ram[16] = "0b00111011100000110101110111101110";
        ram[17] = "0b10111000110011111001111000111000";
        ram[18] = "0b10111010110110100001101010010011";
        ram[19] = "0b10111011011001110010010100111110";
        ram[20] = "0b10111011110101011100111110101011";
        ram[21] = "0b10111011001010110011111011011110";
        ram[22] = "0b00111010101100011111111011101011";
        ram[23] = "0b00111011100010111100000101101010";
        ram[24] = "0b00111010101001100011001100000101";
        ram[25] = "0b00111010101010001101001000011100";
        ram[26] = "0b10111011101001110010111010101110";
        ram[27] = "0b10111011100001000111101100100100";
        ram[28] = "0b10111011000000010101111000111001";
        ram[29] = "0b00111010111101110111011011000101";
        ram[30] = "0b00111011011000111011110011010011";
        ram[31] = "0b00111010111110001010010011000010";
        ram[32] = "0b00111000100011001000001001011010";
        ram[33] = "0b10111010110010111010111110010110";
        ram[34] = "0b10111010100110010111110000111101";
        ram[35] = "0b00111001010011000111100011101010";
        ram[36] = "0b00111011001100000111110100001011";
        ram[37] = "0b00111011010101000000001001001011";
        ram[38] = "0b00111010001000011011111000101011";
        ram[39] = "0b10111010100110101010101000111011";
        ram[40] = "0b10111011000010011111010000001010";
        ram[41] = "0b10111011000000101100111101010011";
        ram[42] = "0b10111011001000000011110001001011";
        ram[43] = "0b10111010011111000111000111010110";
        ram[44] = "0b00111010101011101101100110011101";
        ram[45] = "0b00111011011100011110010010110100";
        ram[46] = "0b00111011101110110100010011100101";
        ram[47] = "0b00111001100110101010101000111011";
        ram[48] = "0b10111011011100001011011010110111";
        ram[49] = "0b10111011011001010100111101111011";
        ram[50] = "0b10111011100111101001100011011101";
        ram[51] = "0b00111001110100101100001110000111";
        ram[52] = "0b00111010111110000100000000011000";
        ram[53] = "0b00111011011010111110110111111010";
        ram[54] = "0b00111011111110001010110100100101";
        ram[55] = "0b00111010110100110000011010100011";
        ram[56] = "0b10111011101110001110100011101010";
        ram[57] = "0b10111011110000111101001001010010";
        ram[58] = "0b10111011010001110011101010111101";
        ram[59] = "0b00111011001011010111100101001010";
        ram[60] = "0b00111011100100001001101011101101";
        ram[61] = "0b00111011010010100010110110110110";
        ram[62] = "0b00111001100100111101100101100110";
        ram[63] = "0b10111011010011001111111100100010";
        ram[64] = "0b10111000000011101001101100111001";
        ram[65] = "0b00111010110010010011001000001110";
        ram[66] = "0b00111011100100111111001010010001";
        ram[67] = "0b10111001111100001010010111110000";
        ram[68] = "0b10111010100111001010000110001100";
        ram[69] = "0b10111011101001001000011100110011";
        ram[70] = "0b10111011101100110000101101011011";
        ram[71] = "0b10111010110110010101000101000000";
        ram[72] = "0b00111010100010001101011011010100";
        ram[73] = "0b00111010010000000010011011001100";
        ram[74] = "0b00111010111011111001100110000000";
        ram[75] = "0b00111011001111001101111111110000";
        ram[76] = "0b10111011011101001101011110101110";
        ram[77] = "0b10111011100110111100111111010101";
        ram[78] = "0b10111011100001111011100110011101";
        ram[79] = "0b00111011100010000000110110000000";
        ram[80] = "0b00111011100000110010101110011001";
        ram[81] = "0b00111011001111000110101001111111";
        ram[82] = "0b10111001001001101011100100111101";
        ram[83] = "0b10111011000111100000000111011110";
        ram[84] = "0b10111011000101011001111001100010";
        ram[85] = "0b10111001110101010110001010011110";
        ram[86] = "0b00111011000010000001111001000111";
        ram[87] = "0b00111001000001000001111011011110";
        ram[88] = "0b00111010000011110010000101110001";
        ram[89] = "0b00111011000010110111010111101010";
        ram[90] = "0b10111011011100101011111011001111";
        ram[91] = "0b10111010110011011100100001110101";
        ram[92] = "0b10111010111101110001001000011011";
        ram[93] = "0b00111010010000011011100101110011";
        ram[94] = "0b00111001101101111000000000110100";
        ram[95] = "0b00111011001000001110010000010001";
        ram[96] = "0b00111011100001101011110111110101";
        ram[97] = "0b00111011001111010101010101100001";
        ram[98] = "0b00111001110110101010000011001011";
        ram[99] = "0b10111011101011100001100010101101";
        ram[100] = "0b10111011100111011110000001010000";
        ram[101] = "0b00111010111001011000000111001111";
        ram[102] = "0b00111001011001101010111111001101";
        ram[103] = "0b00111011011001100110110010110001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_40) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_40_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_40) {
meminst = new L3_up_L2_WEIGHTS_40_ram("L3_up_L2_WEIGHTS_40_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_40() {
    delete meminst;
}


};//endmodule
#endif
