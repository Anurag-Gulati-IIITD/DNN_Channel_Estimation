// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __L3_up_L2_WEIGHTS_49_H__
#define __L3_up_L2_WEIGHTS_49_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct L3_up_L2_WEIGHTS_49_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 104;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(L3_up_L2_WEIGHTS_49_ram) {
        ram[0] = "0b00111101010010011101100111010011";
        ram[1] = "0b00111100111111010010101001100011";
        ram[2] = "0b10111100010001001101001000101101";
        ram[3] = "0b00111011111111000011111110000001";
        ram[4] = "0b00111101000100110010001111111111";
        ram[5] = "0b00111100110000101011010100011100";
        ram[6] = "0b10111100110010010100001011010101";
        ram[7] = "0b10111101100000011011000000000011";
        ram[8] = "0b10111101100000100000101000110001";
        ram[9] = "0b10111100100111011001100100000011";
        ram[10] = "0b00111101100010111101100100000010";
        ram[11] = "0b00111101111101111011001110010110";
        ram[12] = "0b00111101100101001110111111001100";
        ram[13] = "0b00111100111000011010101000111111";
        ram[14] = "0b10111101100000001011110101000101";
        ram[15] = "0b10111101100100000100011110010001";
        ram[16] = "0b10111100110011001010100100100110";
        ram[17] = "0b00111100101100011000010101001001";
        ram[18] = "0b00111100100110111001100101001110";
        ram[19] = "0b10111101011000111100100001011100";
        ram[20] = "0b10111101000000101101011010101010";
        ram[21] = "0b00111100110111101010010001100110";
        ram[22] = "0b00111101110010011000011011111101";
        ram[23] = "0b00111110000110010100001010010001";
        ram[24] = "0b00111101100011010011110110000110";
        ram[25] = "0b10111101010100100010010100110001";
        ram[26] = "0b10111110000011011000101000010001";
        ram[27] = "0b10111101100110001001000001001111";
        ram[28] = "0b00111101001111010110110101111111";
        ram[29] = "0b00111110000010110110011000110000";
        ram[30] = "0b00111101110001100100110000110000";
        ram[31] = "0b00111101101101111101011111000011";
        ram[32] = "0b00111100101100101001010111101010";
        ram[33] = "0b10111101001110010110101111111101";
        ram[34] = "0b10111101100111101110001001000011";
        ram[35] = "0b10111101110010110111011101111101";
        ram[36] = "0b10111101100011110010110011111001";
        ram[37] = "0b00111100000010101110101110000001";
        ram[38] = "0b00111101101100011111011000000001";
        ram[39] = "0b00111101111110110111010110100111";
        ram[40] = "0b00111101101110001001101101010010";
        ram[41] = "0b10111100001111111100011001010100";
        ram[42] = "0b10111101101101010100111010110001";
        ram[43] = "0b10111110000011100110100101101010";
        ram[44] = "0b10111101011111101011011010111111";
        ram[45] = "0b00111011010100111100111111110110";
        ram[46] = "0b00111101110111110111000011011111";
        ram[47] = "0b00111101111011100111010001101101";
        ram[48] = "0b00111101011001101010110010101000";
        ram[49] = "0b10111100100010110100001110010110";
        ram[50] = "0b10111101011001111111010111101000";
        ram[51] = "0b10111101110001001100011100101010";
        ram[52] = "0b00111011101011011011110001100110";
        ram[53] = "0b10111011111110011001100000000111";
        ram[54] = "0b10111100011100111011101001110111";
        ram[55] = "0b10111100100010000100100000111000";
        ram[56] = "0b10111011110001000101100010001010";
        ram[57] = "0b10111101000001011110001011001110";
        ram[58] = "0b10111101001001011100010111111000";
        ram[59] = "0b10111100101000001110100001000010";
        ram[60] = "0b00111101001100110010111100000001";
        ram[61] = "0b00111101110110001000101110010111";
        ram[62] = "0b00111101101101101111010000111000";
        ram[63] = "0b00111100101010010101001000001001";
        ram[64] = "0b10111101100101001000001111001011";
        ram[65] = "0b10111101110011000001001100110100";
        ram[66] = "0b10111101011100100101100100011001";
        ram[67] = "0b00111100110100100000011011001000";
        ram[68] = "0b00111100111111100110001011011100";
        ram[69] = "0b00111100100100010001011010101001";
        ram[70] = "0b10111100101101001100001111000010";
        ram[71] = "0b10111100000110111011111100001110";
        ram[72] = "0b00111101011100011011100010101010";
        ram[73] = "0b00111101101111010000110010000000";
        ram[74] = "0b00111101011101000001111000010101";
        ram[75] = "0b10111101001111110111100010111100";
        ram[76] = "0b10111101110101100001101110110000";
        ram[77] = "0b10111110000000010101011110101100";
        ram[78] = "0b00111101100100000111111010011110";
        ram[79] = "0b00111110000000101010111000001000";
        ram[80] = "0b00111110000000110110000111011101";
        ram[81] = "0b00111101100011001111101001101010";
        ram[82] = "0b10111100111100101010100111010110";
        ram[83] = "0b10111101101010000001101010011100";
        ram[84] = "0b10111101100001111111001000111101";
        ram[85] = "0b10111101101101110100110001001101";
        ram[86] = "0b10111100111111101101110001111111";
        ram[87] = "0b00111100001111011000011110110101";
        ram[88] = "0b00111101100111100010100110110111";
        ram[89] = "0b00111101110011100110001110100110";
        ram[90] = "0b00111101101101010010011011011001";
        ram[91] = "0b00111011000011001110011100000100";
        ram[92] = "0b10111101110101011001101100111101";
        ram[93] = "0b10111110000010101100111001101000";
        ram[94] = "0b10111101101100111110101100111010";
        ram[95] = "0b10111011010110110001011000111100";
        ram[96] = "0b00111101101111011111010111001111";
        ram[97] = "0b00111101111100100010001000001100";
        ram[98] = "0b00111101000100000011011001000100";
        ram[99] = "0b10111100101010110111010101100100";
        ram[100] = "0b10111101101111110101100101000111";
        ram[101] = "0b10111101101111010101111111011101";
        ram[102] = "0b10111101010001010101001000011010";
        ram[103] = "0b00111100000011101101101000100011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(L3_up_L2_WEIGHTS_49) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 104;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


L3_up_L2_WEIGHTS_49_ram* meminst;


SC_CTOR(L3_up_L2_WEIGHTS_49) {
meminst = new L3_up_L2_WEIGHTS_49_ram("L3_up_L2_WEIGHTS_49_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~L3_up_L2_WEIGHTS_49() {
    delete meminst;
}


};//endmodule
#endif
