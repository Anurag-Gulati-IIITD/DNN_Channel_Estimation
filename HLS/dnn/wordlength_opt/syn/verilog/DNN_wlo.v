// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="DNN_wlo,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.482400,HLS_SYN_LAT=1765,HLS_SYN_TPT=none,HLS_SYN_MEM=60,HLS_SYN_DSP=162,HLS_SYN_FF=33972,HLS_SYN_LUT=26927,HLS_VERSION=2019_1}" *)

module DNN_wlo (
        ap_clk,
        ap_rst_n,
        LS_stream_TDATA,
        LS_stream_TVALID,
        LS_stream_TREADY,
        LS_stream_TLAST,
        DNN_out_TDATA,
        DNN_out_TVALID,
        DNN_out_TREADY,
        DNN_out_TLAST
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_pp0_stage0 = 11'd128;
parameter    ap_ST_fsm_state20 = 11'd256;
parameter    ap_ST_fsm_state21 = 11'd512;
parameter    ap_ST_fsm_state22 = 11'd1024;

input   ap_clk;
input   ap_rst_n;
input  [63:0] LS_stream_TDATA;
input   LS_stream_TVALID;
output   LS_stream_TREADY;
input  [0:0] LS_stream_TLAST;
output  [63:0] DNN_out_TDATA;
output   DNN_out_TVALID;
input   DNN_out_TREADY;
output  [0:0] DNN_out_TLAST;

 reg    ap_rst_n_inv;
reg   [63:0] LS_stream_V_data_0_data_out;
wire    LS_stream_V_data_0_vld_in;
wire    LS_stream_V_data_0_vld_out;
wire    LS_stream_V_data_0_ack_in;
reg    LS_stream_V_data_0_ack_out;
reg   [63:0] LS_stream_V_data_0_payload_A;
reg   [63:0] LS_stream_V_data_0_payload_B;
reg    LS_stream_V_data_0_sel_rd;
reg    LS_stream_V_data_0_sel_wr;
wire    LS_stream_V_data_0_sel;
wire    LS_stream_V_data_0_load_A;
wire    LS_stream_V_data_0_load_B;
reg   [1:0] LS_stream_V_data_0_state;
wire    LS_stream_V_data_0_state_cmp_full;
reg   [0:0] LS_stream_V_last_V_0_data_out;
wire    LS_stream_V_last_V_0_vld_in;
wire    LS_stream_V_last_V_0_vld_out;
wire    LS_stream_V_last_V_0_ack_in;
reg    LS_stream_V_last_V_0_ack_out;
reg   [0:0] LS_stream_V_last_V_0_payload_A;
reg   [0:0] LS_stream_V_last_V_0_payload_B;
reg    LS_stream_V_last_V_0_sel_rd;
reg    LS_stream_V_last_V_0_sel_wr;
wire    LS_stream_V_last_V_0_sel;
wire    LS_stream_V_last_V_0_load_A;
wire    LS_stream_V_last_V_0_load_B;
reg   [1:0] LS_stream_V_last_V_0_state;
wire    LS_stream_V_last_V_0_state_cmp_full;
reg   [63:0] DNN_out_V_data_1_data_out;
wire    DNN_out_V_data_1_vld_in;
wire    DNN_out_V_data_1_vld_out;
wire    DNN_out_V_data_1_ack_in;
wire    DNN_out_V_data_1_ack_out;
reg   [63:0] DNN_out_V_data_1_payload_A;
reg   [63:0] DNN_out_V_data_1_payload_B;
reg    DNN_out_V_data_1_sel_rd;
reg    DNN_out_V_data_1_sel_wr;
wire    DNN_out_V_data_1_sel;
wire    DNN_out_V_data_1_load_A;
wire    DNN_out_V_data_1_load_B;
reg   [1:0] DNN_out_V_data_1_state;
wire    DNN_out_V_data_1_state_cmp_full;
reg   [0:0] DNN_out_V_last_V_1_data_out;
wire    DNN_out_V_last_V_1_vld_in;
wire    DNN_out_V_last_V_1_vld_out;
wire    DNN_out_V_last_V_1_ack_in;
wire    DNN_out_V_last_V_1_ack_out;
reg   [0:0] DNN_out_V_last_V_1_payload_A;
reg   [0:0] DNN_out_V_last_V_1_payload_B;
reg    DNN_out_V_last_V_1_sel_rd;
reg    DNN_out_V_last_V_1_sel_wr;
wire    DNN_out_V_last_V_1_sel;
wire    DNN_out_V_last_V_1_load_A;
wire    DNN_out_V_last_V_1_load_B;
reg   [1:0] DNN_out_V_last_V_1_state;
wire    DNN_out_V_last_V_1_state_cmp_full;
wire   [6:0] std_o_address0;
reg    std_o_ce0;
wire   [15:0] std_o_q0;
wire   [6:0] mean_o_address0;
reg    mean_o_ce0;
wire   [15:0] mean_o_q0;
reg   [6:0] i_0_i_reg_450;
reg   [15:0] norm_LS_data_0_0_reg_1775;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state5;
wire    grp_normalize_wlo_fu_942_ap_ready;
wire    grp_normalize_wlo_fu_942_ap_done;
reg   [15:0] norm_LS_data_0_1_reg_1780;
reg   [15:0] norm_LS_data_1_0_reg_1785;
reg   [15:0] norm_LS_data_1_1_reg_1790;
reg   [15:0] norm_LS_data_2_0_reg_1795;
reg   [15:0] norm_LS_data_2_1_reg_1800;
reg   [15:0] norm_LS_data_3_0_reg_1805;
reg   [15:0] norm_LS_data_3_1_reg_1810;
reg   [15:0] norm_LS_data_4_0_reg_1815;
reg   [15:0] norm_LS_data_4_1_reg_1820;
reg   [15:0] norm_LS_data_5_0_reg_1825;
reg   [15:0] norm_LS_data_5_1_reg_1830;
reg   [15:0] norm_LS_data_6_0_reg_1835;
reg   [15:0] norm_LS_data_6_1_reg_1840;
reg   [15:0] norm_LS_data_7_0_reg_1845;
reg   [15:0] norm_LS_data_7_1_reg_1850;
reg   [15:0] norm_LS_data_8_0_reg_1855;
reg   [15:0] norm_LS_data_8_1_reg_1860;
reg   [15:0] norm_LS_data_9_0_reg_1865;
reg   [15:0] norm_LS_data_9_1_reg_1870;
reg   [15:0] norm_LS_data_10_0_reg_1875;
reg   [15:0] norm_LS_data_10_1_reg_1880;
reg   [15:0] norm_LS_data_11_0_reg_1885;
reg   [15:0] norm_LS_data_11_1_reg_1890;
reg   [15:0] norm_LS_data_12_0_reg_1895;
reg   [15:0] norm_LS_data_12_1_reg_1900;
reg   [15:0] norm_LS_data_13_0_reg_1905;
reg   [15:0] norm_LS_data_13_1_reg_1910;
reg   [15:0] norm_LS_data_14_0_reg_1915;
reg   [15:0] norm_LS_data_14_1_reg_1920;
reg   [15:0] norm_LS_data_15_0_reg_1925;
reg   [15:0] norm_LS_data_15_1_reg_1930;
reg   [15:0] norm_LS_data_16_0_reg_1935;
reg   [15:0] norm_LS_data_16_1_reg_1940;
reg   [15:0] norm_LS_data_17_0_reg_1945;
reg   [15:0] norm_LS_data_17_1_reg_1950;
reg   [15:0] norm_LS_data_18_0_reg_1955;
reg   [15:0] norm_LS_data_18_1_reg_1960;
reg   [15:0] norm_LS_data_19_0_reg_1965;
reg   [15:0] norm_LS_data_19_1_reg_1970;
reg   [15:0] norm_LS_data_20_0_reg_1975;
reg   [15:0] norm_LS_data_20_1_reg_1980;
reg   [15:0] norm_LS_data_21_0_reg_1985;
reg   [15:0] norm_LS_data_21_1_reg_1990;
reg   [15:0] norm_LS_data_22_0_reg_1995;
reg   [15:0] norm_LS_data_22_1_reg_2000;
reg   [15:0] norm_LS_data_23_0_reg_2005;
reg   [15:0] norm_LS_data_23_1_reg_2010;
reg   [15:0] norm_LS_data_24_0_reg_2015;
reg   [15:0] norm_LS_data_24_1_reg_2020;
reg   [15:0] norm_LS_data_25_0_reg_2025;
reg   [15:0] norm_LS_data_25_1_reg_2030;
reg   [15:0] norm_LS_data_26_0_reg_2035;
reg   [15:0] norm_LS_data_26_1_reg_2040;
reg   [15:0] norm_LS_data_27_0_reg_2045;
reg   [15:0] norm_LS_data_27_1_reg_2050;
reg   [15:0] norm_LS_data_28_0_reg_2055;
reg   [15:0] norm_LS_data_28_1_reg_2060;
reg   [15:0] norm_LS_data_29_0_reg_2065;
reg   [15:0] norm_LS_data_29_1_reg_2070;
reg   [15:0] norm_LS_data_30_0_reg_2075;
reg   [15:0] norm_LS_data_30_1_reg_2080;
reg   [15:0] norm_LS_data_31_0_reg_2085;
reg   [15:0] norm_LS_data_31_1_reg_2090;
reg   [15:0] norm_LS_data_32_0_reg_2095;
reg   [15:0] norm_LS_data_32_1_reg_2100;
reg   [15:0] norm_LS_data_33_0_reg_2105;
reg   [15:0] norm_LS_data_33_1_reg_2110;
reg   [15:0] norm_LS_data_34_0_reg_2115;
reg   [15:0] norm_LS_data_34_1_reg_2120;
reg   [15:0] norm_LS_data_35_0_reg_2125;
reg   [15:0] norm_LS_data_35_1_reg_2130;
reg   [15:0] norm_LS_data_36_0_reg_2135;
reg   [15:0] norm_LS_data_36_1_reg_2140;
reg   [15:0] norm_LS_data_37_0_reg_2145;
reg   [15:0] norm_LS_data_37_1_reg_2150;
reg   [15:0] norm_LS_data_38_0_reg_2155;
reg   [15:0] norm_LS_data_38_1_reg_2160;
reg   [15:0] norm_LS_data_39_0_reg_2165;
reg   [15:0] norm_LS_data_39_1_reg_2170;
reg   [15:0] norm_LS_data_40_0_reg_2175;
reg   [15:0] norm_LS_data_40_1_reg_2180;
reg   [15:0] norm_LS_data_41_0_reg_2185;
reg   [15:0] norm_LS_data_41_1_reg_2190;
reg   [15:0] norm_LS_data_42_0_reg_2195;
reg   [15:0] norm_LS_data_42_1_reg_2200;
reg   [15:0] norm_LS_data_43_0_reg_2205;
reg   [15:0] norm_LS_data_43_1_reg_2210;
reg   [15:0] norm_LS_data_44_0_reg_2215;
reg   [15:0] norm_LS_data_44_1_reg_2220;
reg   [15:0] norm_LS_data_45_0_reg_2225;
reg   [15:0] norm_LS_data_45_1_reg_2230;
reg   [15:0] norm_LS_data_46_0_reg_2235;
reg   [15:0] norm_LS_data_46_1_reg_2240;
reg   [15:0] norm_LS_data_47_0_reg_2245;
reg   [15:0] norm_LS_data_47_1_reg_2250;
reg   [15:0] norm_LS_data_48_0_reg_2255;
reg   [15:0] norm_LS_data_48_1_reg_2260;
reg   [15:0] norm_LS_data_49_0_reg_2265;
reg   [15:0] norm_LS_data_49_1_reg_2270;
reg   [15:0] norm_LS_data_50_0_reg_2275;
reg   [15:0] norm_LS_data_50_1_reg_2280;
reg   [15:0] norm_LS_data_51_0_reg_2285;
reg   [15:0] norm_LS_data_51_1_reg_2290;
reg   [15:0] y_L2_0_0_reg_2295;
wire    ap_CS_fsm_state6;
wire    grp_L2_wlo_fu_461_ap_ready;
wire    grp_L2_wlo_fu_461_ap_done;
reg   [15:0] y_L2_0_1_reg_2300;
reg   [15:0] y_L2_1_0_reg_2305;
reg   [15:0] y_L2_1_1_reg_2310;
reg   [15:0] y_L2_2_0_reg_2315;
reg   [15:0] y_L2_2_1_reg_2320;
reg   [15:0] y_L2_3_0_reg_2325;
reg   [15:0] y_L2_3_1_reg_2330;
reg   [15:0] y_L2_4_0_reg_2335;
reg   [15:0] y_L2_4_1_reg_2340;
reg   [15:0] y_L2_5_0_reg_2345;
reg   [15:0] y_L2_5_1_reg_2350;
reg   [15:0] y_L2_6_0_reg_2355;
reg   [15:0] y_L2_6_1_reg_2360;
reg   [15:0] y_L2_7_0_reg_2365;
reg   [15:0] y_L2_7_1_reg_2370;
reg   [15:0] y_L2_8_0_reg_2375;
reg   [15:0] y_L2_8_1_reg_2380;
reg   [15:0] y_L2_9_0_reg_2385;
reg   [15:0] y_L2_9_1_reg_2390;
reg   [15:0] y_L2_10_0_reg_2395;
reg   [15:0] y_L2_10_1_reg_2400;
reg   [15:0] y_L2_11_0_reg_2405;
reg   [15:0] y_L2_11_1_reg_2410;
reg   [15:0] y_L2_12_0_reg_2415;
reg   [15:0] y_L2_12_1_reg_2420;
reg   [15:0] y_L2_13_0_reg_2425;
reg   [15:0] y_L2_13_1_reg_2430;
reg   [15:0] y_L2_14_0_reg_2435;
reg   [15:0] y_L2_14_1_reg_2440;
reg   [15:0] y_L2_15_0_reg_2445;
reg   [15:0] y_L2_15_1_reg_2450;
reg   [15:0] y_L2_16_0_reg_2455;
reg   [15:0] y_L2_16_1_reg_2460;
reg   [15:0] y_L2_17_0_reg_2465;
reg   [15:0] y_L2_17_1_reg_2470;
reg   [15:0] y_L2_18_0_reg_2475;
reg   [15:0] y_L2_18_1_reg_2480;
reg   [15:0] y_L2_19_0_reg_2485;
reg   [15:0] y_L2_19_1_reg_2490;
reg   [15:0] y_L2_20_0_reg_2495;
reg   [15:0] y_L2_20_1_reg_2500;
reg   [15:0] y_L2_21_0_reg_2505;
reg   [15:0] y_L2_21_1_reg_2510;
reg   [15:0] y_L2_22_0_reg_2515;
reg   [15:0] y_L2_22_1_reg_2520;
reg   [15:0] y_L2_23_0_reg_2525;
reg   [15:0] y_L2_23_1_reg_2530;
reg   [15:0] y_L2_24_0_reg_2535;
reg   [15:0] y_L2_24_1_reg_2540;
reg   [15:0] y_L2_25_0_reg_2545;
reg   [15:0] y_L2_25_1_reg_2550;
wire   [0:0] icmp_ln529_fu_1757_p2;
reg   [0:0] icmp_ln529_reg_2555;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state8_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_state10_pp0_stage0_iter2;
wire    ap_block_state11_pp0_stage0_iter3;
wire    ap_block_state12_pp0_stage0_iter4;
wire    ap_block_state13_pp0_stage0_iter5;
wire    ap_block_state14_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state16_pp0_stage0_iter8;
wire    ap_block_state17_pp0_stage0_iter9;
wire    ap_block_state18_pp0_stage0_iter10;
wire    ap_block_state19_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln529_reg_2555_pp0_iter1_reg;
reg   [0:0] icmp_ln529_reg_2555_pp0_iter2_reg;
reg   [0:0] icmp_ln529_reg_2555_pp0_iter3_reg;
reg   [0:0] icmp_ln529_reg_2555_pp0_iter4_reg;
reg   [0:0] icmp_ln529_reg_2555_pp0_iter5_reg;
reg   [0:0] icmp_ln529_reg_2555_pp0_iter6_reg;
reg   [0:0] icmp_ln529_reg_2555_pp0_iter7_reg;
reg   [0:0] icmp_ln529_reg_2555_pp0_iter8_reg;
reg   [0:0] icmp_ln529_reg_2555_pp0_iter9_reg;
reg   [0:0] icmp_ln529_reg_2555_pp0_iter10_reg;
wire   [6:0] i_fu_1763_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln531_fu_1769_p1;
reg   [63:0] zext_ln531_reg_2564;
reg   [63:0] zext_ln531_reg_2564_pp0_iter1_reg;
reg   [63:0] zext_ln531_reg_2564_pp0_iter2_reg;
reg   [63:0] zext_ln531_reg_2564_pp0_iter3_reg;
reg   [63:0] zext_ln531_reg_2564_pp0_iter4_reg;
reg   [63:0] zext_ln531_reg_2564_pp0_iter5_reg;
reg   [63:0] zext_ln531_reg_2564_pp0_iter6_reg;
reg   [63:0] zext_ln531_reg_2564_pp0_iter7_reg;
reg   [63:0] zext_ln531_reg_2564_pp0_iter8_reg;
reg   [63:0] zext_ln531_reg_2564_pp0_iter9_reg;
reg   [63:0] zext_ln531_reg_2564_pp0_iter10_reg;
wire   [15:0] y_L3_q0;
reg   [15:0] y_L3_load_reg_2580;
reg   [15:0] std_o_load_reg_2585;
wire   [15:0] grp_fu_973_p2;
reg   [15:0] tmp_i_reg_2595;
reg   [15:0] mean_o_load_reg_2600;
wire   [15:0] grp_fu_969_p2;
reg   [15:0] tmp_5_i_reg_2605;
wire    ap_CS_fsm_state7;
wire    grp_L3_wlo_fu_779_ap_ready;
wire    grp_L3_wlo_fu_779_ap_done;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state8;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg   [6:0] LS_data_address0;
reg    LS_data_ce0;
reg    LS_data_we0;
wire   [15:0] LS_data_q0;
reg    LS_data_ce1;
reg    LS_data_we1;
reg   [6:0] y_L3_address0;
reg    y_L3_ce0;
reg    y_L3_we0;
reg   [6:0] denorm_DNN_address0;
reg    denorm_DNN_ce0;
reg    denorm_DNN_we0;
wire   [15:0] denorm_DNN_q0;
reg    denorm_DNN_ce1;
wire   [15:0] denorm_DNN_q1;
wire    grp_L2_wlo_fu_461_ap_start;
wire    grp_L2_wlo_fu_461_ap_idle;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_0;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_1;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_2;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_3;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_4;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_5;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_6;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_7;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_8;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_9;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_10;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_11;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_12;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_13;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_14;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_15;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_16;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_17;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_18;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_19;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_20;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_21;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_22;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_23;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_24;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_25;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_26;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_27;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_28;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_29;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_30;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_31;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_32;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_33;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_34;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_35;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_36;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_37;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_38;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_39;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_40;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_41;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_42;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_43;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_44;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_45;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_46;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_47;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_48;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_49;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_50;
wire   [15:0] grp_L2_wlo_fu_461_ap_return_51;
wire    grp_L3_wlo_fu_779_ap_start;
wire    grp_L3_wlo_fu_779_ap_idle;
wire   [6:0] grp_L3_wlo_fu_779_y_L3_address0;
wire    grp_L3_wlo_fu_779_y_L3_ce0;
wire    grp_L3_wlo_fu_779_y_L3_we0;
wire   [15:0] grp_L3_wlo_fu_779_y_L3_d0;
wire    grp_normalize_wlo_fu_942_ap_start;
wire    grp_normalize_wlo_fu_942_ap_idle;
wire   [6:0] grp_normalize_wlo_fu_942_LS_data_address0;
wire    grp_normalize_wlo_fu_942_LS_data_ce0;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_0;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_1;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_2;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_3;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_4;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_5;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_6;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_7;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_8;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_9;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_10;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_11;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_12;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_13;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_14;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_15;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_16;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_17;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_18;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_19;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_20;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_21;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_22;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_23;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_24;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_25;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_26;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_27;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_28;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_29;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_30;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_31;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_32;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_33;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_34;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_35;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_36;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_37;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_38;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_39;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_40;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_41;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_42;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_43;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_44;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_45;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_46;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_47;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_48;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_49;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_50;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_51;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_52;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_53;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_54;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_55;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_56;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_57;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_58;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_59;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_60;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_61;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_62;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_63;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_64;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_65;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_66;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_67;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_68;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_69;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_70;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_71;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_72;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_73;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_74;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_75;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_76;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_77;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_78;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_79;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_80;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_81;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_82;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_83;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_84;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_85;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_86;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_87;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_88;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_89;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_90;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_91;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_92;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_93;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_94;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_95;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_96;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_97;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_98;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_99;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_100;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_101;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_102;
wire   [15:0] grp_normalize_wlo_fu_942_ap_return_103;
wire    grp_separate_complex_wlo_fu_951_ap_start;
wire    grp_separate_complex_wlo_fu_951_ap_done;
wire    grp_separate_complex_wlo_fu_951_ap_idle;
wire    grp_separate_complex_wlo_fu_951_ap_ready;
wire    grp_separate_complex_wlo_fu_951_LS_stream_TVALID;
wire    grp_separate_complex_wlo_fu_951_LS_stream_TREADY;
wire   [6:0] grp_separate_complex_wlo_fu_951_sep_address0;
wire    grp_separate_complex_wlo_fu_951_sep_ce0;
wire    grp_separate_complex_wlo_fu_951_sep_we0;
wire   [15:0] grp_separate_complex_wlo_fu_951_sep_d0;
wire   [6:0] grp_separate_complex_wlo_fu_951_sep_address1;
wire    grp_separate_complex_wlo_fu_951_sep_ce1;
wire    grp_separate_complex_wlo_fu_951_sep_we1;
wire   [15:0] grp_separate_complex_wlo_fu_951_sep_d1;
wire    grp_reconstruct_complex_s_fu_960_ap_start;
wire    grp_reconstruct_complex_s_fu_960_ap_done;
wire    grp_reconstruct_complex_s_fu_960_ap_idle;
wire    grp_reconstruct_complex_s_fu_960_ap_ready;
wire   [6:0] grp_reconstruct_complex_s_fu_960_y_L3_address0;
wire    grp_reconstruct_complex_s_fu_960_y_L3_ce0;
wire   [6:0] grp_reconstruct_complex_s_fu_960_y_L3_address1;
wire    grp_reconstruct_complex_s_fu_960_y_L3_ce1;
wire   [63:0] grp_reconstruct_complex_s_fu_960_DNN_out_TDATA;
wire    grp_reconstruct_complex_s_fu_960_DNN_out_TVALID;
wire    grp_reconstruct_complex_s_fu_960_DNN_out_TREADY;
wire   [0:0] grp_reconstruct_complex_s_fu_960_DNN_out_TLAST;
reg    grp_L2_wlo_fu_461_ap_start_reg;
reg    grp_L3_wlo_fu_779_ap_start_reg;
reg    grp_normalize_wlo_fu_942_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    grp_separate_complex_wlo_fu_951_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    grp_reconstruct_complex_s_fu_960_ap_start_reg;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_block_pp0_stage0;
reg   [10:0] ap_NS_fsm;
wire    ap_CS_fsm_state22;
reg    ap_block_state22;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 LS_stream_V_data_0_sel_rd = 1'b0;
#0 LS_stream_V_data_0_sel_wr = 1'b0;
#0 LS_stream_V_data_0_state = 2'd0;
#0 LS_stream_V_last_V_0_sel_rd = 1'b0;
#0 LS_stream_V_last_V_0_sel_wr = 1'b0;
#0 LS_stream_V_last_V_0_state = 2'd0;
#0 DNN_out_V_data_1_sel_rd = 1'b0;
#0 DNN_out_V_data_1_sel_wr = 1'b0;
#0 DNN_out_V_data_1_state = 2'd0;
#0 DNN_out_V_last_V_1_sel_rd = 1'b0;
#0 DNN_out_V_last_V_1_sel_wr = 1'b0;
#0 DNN_out_V_last_V_1_state = 2'd0;
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 grp_L2_wlo_fu_461_ap_start_reg = 1'b0;
#0 grp_L3_wlo_fu_779_ap_start_reg = 1'b0;
#0 grp_normalize_wlo_fu_942_ap_start_reg = 1'b0;
#0 grp_separate_complex_wlo_fu_951_ap_start_reg = 1'b0;
#0 grp_reconstruct_complex_s_fu_960_ap_start_reg = 1'b0;
end

DNN_wlo_std_o #(
    .DataWidth( 16 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
std_o_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(std_o_address0),
    .ce0(std_o_ce0),
    .q0(std_o_q0)
);

DNN_wlo_mean_o #(
    .DataWidth( 16 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
mean_o_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mean_o_address0),
    .ce0(mean_o_ce0),
    .q0(mean_o_q0)
);

DNN_wlo_LS_data #(
    .DataWidth( 16 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
LS_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LS_data_address0),
    .ce0(LS_data_ce0),
    .we0(LS_data_we0),
    .d0(grp_separate_complex_wlo_fu_951_sep_d0),
    .q0(LS_data_q0),
    .address1(grp_separate_complex_wlo_fu_951_sep_address1),
    .ce1(LS_data_ce1),
    .we1(LS_data_we1),
    .d1(grp_separate_complex_wlo_fu_951_sep_d1)
);

DNN_wlo_y_L3 #(
    .DataWidth( 16 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
y_L3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(y_L3_address0),
    .ce0(y_L3_ce0),
    .we0(y_L3_we0),
    .d0(grp_L3_wlo_fu_779_y_L3_d0),
    .q0(y_L3_q0)
);

DNN_wlo_denorm_DNN #(
    .DataWidth( 16 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
denorm_DNN_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(denorm_DNN_address0),
    .ce0(denorm_DNN_ce0),
    .we0(denorm_DNN_we0),
    .d0(tmp_5_i_reg_2605),
    .q0(denorm_DNN_q0),
    .address1(grp_reconstruct_complex_s_fu_960_y_L3_address1),
    .ce1(denorm_DNN_ce1),
    .q1(denorm_DNN_q1)
);

L2_wlo grp_L2_wlo_fu_461(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_L2_wlo_fu_461_ap_start),
    .ap_done(grp_L2_wlo_fu_461_ap_done),
    .ap_idle(grp_L2_wlo_fu_461_ap_idle),
    .ap_ready(grp_L2_wlo_fu_461_ap_ready),
    .p_read(norm_LS_data_0_0_reg_1775),
    .p_read1(norm_LS_data_0_1_reg_1780),
    .p_read2(norm_LS_data_1_0_reg_1785),
    .p_read3(norm_LS_data_1_1_reg_1790),
    .p_read4(norm_LS_data_2_0_reg_1795),
    .p_read5(norm_LS_data_2_1_reg_1800),
    .p_read6(norm_LS_data_3_0_reg_1805),
    .p_read7(norm_LS_data_3_1_reg_1810),
    .p_read8(norm_LS_data_4_0_reg_1815),
    .p_read9(norm_LS_data_4_1_reg_1820),
    .p_read10(norm_LS_data_5_0_reg_1825),
    .p_read11(norm_LS_data_5_1_reg_1830),
    .p_read12(norm_LS_data_6_0_reg_1835),
    .p_read13(norm_LS_data_6_1_reg_1840),
    .p_read14(norm_LS_data_7_0_reg_1845),
    .p_read15(norm_LS_data_7_1_reg_1850),
    .p_read16(norm_LS_data_8_0_reg_1855),
    .p_read17(norm_LS_data_8_1_reg_1860),
    .p_read18(norm_LS_data_9_0_reg_1865),
    .p_read19(norm_LS_data_9_1_reg_1870),
    .p_read20(norm_LS_data_10_0_reg_1875),
    .p_read21(norm_LS_data_10_1_reg_1880),
    .p_read22(norm_LS_data_11_0_reg_1885),
    .p_read23(norm_LS_data_11_1_reg_1890),
    .p_read24(norm_LS_data_12_0_reg_1895),
    .p_read25(norm_LS_data_12_1_reg_1900),
    .p_read26(norm_LS_data_13_0_reg_1905),
    .p_read27(norm_LS_data_13_1_reg_1910),
    .p_read28(norm_LS_data_14_0_reg_1915),
    .p_read29(norm_LS_data_14_1_reg_1920),
    .p_read30(norm_LS_data_15_0_reg_1925),
    .p_read31(norm_LS_data_15_1_reg_1930),
    .p_read32(norm_LS_data_16_0_reg_1935),
    .p_read33(norm_LS_data_16_1_reg_1940),
    .p_read34(norm_LS_data_17_0_reg_1945),
    .p_read35(norm_LS_data_17_1_reg_1950),
    .p_read36(norm_LS_data_18_0_reg_1955),
    .p_read37(norm_LS_data_18_1_reg_1960),
    .p_read38(norm_LS_data_19_0_reg_1965),
    .p_read39(norm_LS_data_19_1_reg_1970),
    .p_read40(norm_LS_data_20_0_reg_1975),
    .p_read41(norm_LS_data_20_1_reg_1980),
    .p_read42(norm_LS_data_21_0_reg_1985),
    .p_read43(norm_LS_data_21_1_reg_1990),
    .p_read44(norm_LS_data_22_0_reg_1995),
    .p_read45(norm_LS_data_22_1_reg_2000),
    .p_read46(norm_LS_data_23_0_reg_2005),
    .p_read47(norm_LS_data_23_1_reg_2010),
    .p_read48(norm_LS_data_24_0_reg_2015),
    .p_read49(norm_LS_data_24_1_reg_2020),
    .p_read50(norm_LS_data_25_0_reg_2025),
    .p_read51(norm_LS_data_25_1_reg_2030),
    .p_read52(norm_LS_data_26_0_reg_2035),
    .p_read53(norm_LS_data_26_1_reg_2040),
    .p_read54(norm_LS_data_27_0_reg_2045),
    .p_read55(norm_LS_data_27_1_reg_2050),
    .p_read56(norm_LS_data_28_0_reg_2055),
    .p_read57(norm_LS_data_28_1_reg_2060),
    .p_read58(norm_LS_data_29_0_reg_2065),
    .p_read59(norm_LS_data_29_1_reg_2070),
    .p_read60(norm_LS_data_30_0_reg_2075),
    .p_read61(norm_LS_data_30_1_reg_2080),
    .p_read62(norm_LS_data_31_0_reg_2085),
    .p_read63(norm_LS_data_31_1_reg_2090),
    .p_read64(norm_LS_data_32_0_reg_2095),
    .p_read65(norm_LS_data_32_1_reg_2100),
    .p_read66(norm_LS_data_33_0_reg_2105),
    .p_read67(norm_LS_data_33_1_reg_2110),
    .p_read68(norm_LS_data_34_0_reg_2115),
    .p_read69(norm_LS_data_34_1_reg_2120),
    .p_read70(norm_LS_data_35_0_reg_2125),
    .p_read71(norm_LS_data_35_1_reg_2130),
    .p_read72(norm_LS_data_36_0_reg_2135),
    .p_read73(norm_LS_data_36_1_reg_2140),
    .p_read74(norm_LS_data_37_0_reg_2145),
    .p_read75(norm_LS_data_37_1_reg_2150),
    .p_read76(norm_LS_data_38_0_reg_2155),
    .p_read77(norm_LS_data_38_1_reg_2160),
    .p_read78(norm_LS_data_39_0_reg_2165),
    .p_read79(norm_LS_data_39_1_reg_2170),
    .p_read80(norm_LS_data_40_0_reg_2175),
    .p_read81(norm_LS_data_40_1_reg_2180),
    .p_read82(norm_LS_data_41_0_reg_2185),
    .p_read83(norm_LS_data_41_1_reg_2190),
    .p_read84(norm_LS_data_42_0_reg_2195),
    .p_read85(norm_LS_data_42_1_reg_2200),
    .p_read86(norm_LS_data_43_0_reg_2205),
    .p_read87(norm_LS_data_43_1_reg_2210),
    .p_read88(norm_LS_data_44_0_reg_2215),
    .p_read89(norm_LS_data_44_1_reg_2220),
    .p_read90(norm_LS_data_45_0_reg_2225),
    .p_read91(norm_LS_data_45_1_reg_2230),
    .p_read92(norm_LS_data_46_0_reg_2235),
    .p_read93(norm_LS_data_46_1_reg_2240),
    .p_read94(norm_LS_data_47_0_reg_2245),
    .p_read95(norm_LS_data_47_1_reg_2250),
    .p_read96(norm_LS_data_48_0_reg_2255),
    .p_read97(norm_LS_data_48_1_reg_2260),
    .p_read98(norm_LS_data_49_0_reg_2265),
    .p_read99(norm_LS_data_49_1_reg_2270),
    .p_read100(norm_LS_data_50_0_reg_2275),
    .p_read101(norm_LS_data_50_1_reg_2280),
    .p_read102(norm_LS_data_51_0_reg_2285),
    .p_read103(norm_LS_data_51_1_reg_2290),
    .ap_return_0(grp_L2_wlo_fu_461_ap_return_0),
    .ap_return_1(grp_L2_wlo_fu_461_ap_return_1),
    .ap_return_2(grp_L2_wlo_fu_461_ap_return_2),
    .ap_return_3(grp_L2_wlo_fu_461_ap_return_3),
    .ap_return_4(grp_L2_wlo_fu_461_ap_return_4),
    .ap_return_5(grp_L2_wlo_fu_461_ap_return_5),
    .ap_return_6(grp_L2_wlo_fu_461_ap_return_6),
    .ap_return_7(grp_L2_wlo_fu_461_ap_return_7),
    .ap_return_8(grp_L2_wlo_fu_461_ap_return_8),
    .ap_return_9(grp_L2_wlo_fu_461_ap_return_9),
    .ap_return_10(grp_L2_wlo_fu_461_ap_return_10),
    .ap_return_11(grp_L2_wlo_fu_461_ap_return_11),
    .ap_return_12(grp_L2_wlo_fu_461_ap_return_12),
    .ap_return_13(grp_L2_wlo_fu_461_ap_return_13),
    .ap_return_14(grp_L2_wlo_fu_461_ap_return_14),
    .ap_return_15(grp_L2_wlo_fu_461_ap_return_15),
    .ap_return_16(grp_L2_wlo_fu_461_ap_return_16),
    .ap_return_17(grp_L2_wlo_fu_461_ap_return_17),
    .ap_return_18(grp_L2_wlo_fu_461_ap_return_18),
    .ap_return_19(grp_L2_wlo_fu_461_ap_return_19),
    .ap_return_20(grp_L2_wlo_fu_461_ap_return_20),
    .ap_return_21(grp_L2_wlo_fu_461_ap_return_21),
    .ap_return_22(grp_L2_wlo_fu_461_ap_return_22),
    .ap_return_23(grp_L2_wlo_fu_461_ap_return_23),
    .ap_return_24(grp_L2_wlo_fu_461_ap_return_24),
    .ap_return_25(grp_L2_wlo_fu_461_ap_return_25),
    .ap_return_26(grp_L2_wlo_fu_461_ap_return_26),
    .ap_return_27(grp_L2_wlo_fu_461_ap_return_27),
    .ap_return_28(grp_L2_wlo_fu_461_ap_return_28),
    .ap_return_29(grp_L2_wlo_fu_461_ap_return_29),
    .ap_return_30(grp_L2_wlo_fu_461_ap_return_30),
    .ap_return_31(grp_L2_wlo_fu_461_ap_return_31),
    .ap_return_32(grp_L2_wlo_fu_461_ap_return_32),
    .ap_return_33(grp_L2_wlo_fu_461_ap_return_33),
    .ap_return_34(grp_L2_wlo_fu_461_ap_return_34),
    .ap_return_35(grp_L2_wlo_fu_461_ap_return_35),
    .ap_return_36(grp_L2_wlo_fu_461_ap_return_36),
    .ap_return_37(grp_L2_wlo_fu_461_ap_return_37),
    .ap_return_38(grp_L2_wlo_fu_461_ap_return_38),
    .ap_return_39(grp_L2_wlo_fu_461_ap_return_39),
    .ap_return_40(grp_L2_wlo_fu_461_ap_return_40),
    .ap_return_41(grp_L2_wlo_fu_461_ap_return_41),
    .ap_return_42(grp_L2_wlo_fu_461_ap_return_42),
    .ap_return_43(grp_L2_wlo_fu_461_ap_return_43),
    .ap_return_44(grp_L2_wlo_fu_461_ap_return_44),
    .ap_return_45(grp_L2_wlo_fu_461_ap_return_45),
    .ap_return_46(grp_L2_wlo_fu_461_ap_return_46),
    .ap_return_47(grp_L2_wlo_fu_461_ap_return_47),
    .ap_return_48(grp_L2_wlo_fu_461_ap_return_48),
    .ap_return_49(grp_L2_wlo_fu_461_ap_return_49),
    .ap_return_50(grp_L2_wlo_fu_461_ap_return_50),
    .ap_return_51(grp_L2_wlo_fu_461_ap_return_51)
);

L3_wlo grp_L3_wlo_fu_779(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_L3_wlo_fu_779_ap_start),
    .ap_done(grp_L3_wlo_fu_779_ap_done),
    .ap_idle(grp_L3_wlo_fu_779_ap_idle),
    .ap_ready(grp_L3_wlo_fu_779_ap_ready),
    .p_read(y_L2_0_0_reg_2295),
    .p_read1(y_L2_0_1_reg_2300),
    .p_read2(y_L2_1_0_reg_2305),
    .p_read3(y_L2_1_1_reg_2310),
    .p_read4(y_L2_2_0_reg_2315),
    .p_read5(y_L2_2_1_reg_2320),
    .p_read6(y_L2_3_0_reg_2325),
    .p_read7(y_L2_3_1_reg_2330),
    .p_read8(y_L2_4_0_reg_2335),
    .p_read9(y_L2_4_1_reg_2340),
    .p_read10(y_L2_5_0_reg_2345),
    .p_read11(y_L2_5_1_reg_2350),
    .p_read12(y_L2_6_0_reg_2355),
    .p_read13(y_L2_6_1_reg_2360),
    .p_read14(y_L2_7_0_reg_2365),
    .p_read15(y_L2_7_1_reg_2370),
    .p_read16(y_L2_8_0_reg_2375),
    .p_read17(y_L2_8_1_reg_2380),
    .p_read18(y_L2_9_0_reg_2385),
    .p_read19(y_L2_9_1_reg_2390),
    .p_read20(y_L2_10_0_reg_2395),
    .p_read21(y_L2_10_1_reg_2400),
    .p_read22(y_L2_11_0_reg_2405),
    .p_read23(y_L2_11_1_reg_2410),
    .p_read24(y_L2_12_0_reg_2415),
    .p_read25(y_L2_12_1_reg_2420),
    .p_read26(y_L2_13_0_reg_2425),
    .p_read27(y_L2_13_1_reg_2430),
    .p_read28(y_L2_14_0_reg_2435),
    .p_read29(y_L2_14_1_reg_2440),
    .p_read30(y_L2_15_0_reg_2445),
    .p_read31(y_L2_15_1_reg_2450),
    .p_read32(y_L2_16_0_reg_2455),
    .p_read33(y_L2_16_1_reg_2460),
    .p_read34(y_L2_17_0_reg_2465),
    .p_read35(y_L2_17_1_reg_2470),
    .p_read36(y_L2_18_0_reg_2475),
    .p_read37(y_L2_18_1_reg_2480),
    .p_read38(y_L2_19_0_reg_2485),
    .p_read39(y_L2_19_1_reg_2490),
    .p_read40(y_L2_20_0_reg_2495),
    .p_read41(y_L2_20_1_reg_2500),
    .p_read42(y_L2_21_0_reg_2505),
    .p_read43(y_L2_21_1_reg_2510),
    .p_read44(y_L2_22_0_reg_2515),
    .p_read45(y_L2_22_1_reg_2520),
    .p_read46(y_L2_23_0_reg_2525),
    .p_read47(y_L2_23_1_reg_2530),
    .p_read48(y_L2_24_0_reg_2535),
    .p_read49(y_L2_24_1_reg_2540),
    .p_read50(y_L2_25_0_reg_2545),
    .p_read51(y_L2_25_1_reg_2550),
    .y_L3_address0(grp_L3_wlo_fu_779_y_L3_address0),
    .y_L3_ce0(grp_L3_wlo_fu_779_y_L3_ce0),
    .y_L3_we0(grp_L3_wlo_fu_779_y_L3_we0),
    .y_L3_d0(grp_L3_wlo_fu_779_y_L3_d0)
);

normalize_wlo grp_normalize_wlo_fu_942(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_normalize_wlo_fu_942_ap_start),
    .ap_done(grp_normalize_wlo_fu_942_ap_done),
    .ap_idle(grp_normalize_wlo_fu_942_ap_idle),
    .ap_ready(grp_normalize_wlo_fu_942_ap_ready),
    .LS_data_address0(grp_normalize_wlo_fu_942_LS_data_address0),
    .LS_data_ce0(grp_normalize_wlo_fu_942_LS_data_ce0),
    .LS_data_q0(LS_data_q0),
    .ap_return_0(grp_normalize_wlo_fu_942_ap_return_0),
    .ap_return_1(grp_normalize_wlo_fu_942_ap_return_1),
    .ap_return_2(grp_normalize_wlo_fu_942_ap_return_2),
    .ap_return_3(grp_normalize_wlo_fu_942_ap_return_3),
    .ap_return_4(grp_normalize_wlo_fu_942_ap_return_4),
    .ap_return_5(grp_normalize_wlo_fu_942_ap_return_5),
    .ap_return_6(grp_normalize_wlo_fu_942_ap_return_6),
    .ap_return_7(grp_normalize_wlo_fu_942_ap_return_7),
    .ap_return_8(grp_normalize_wlo_fu_942_ap_return_8),
    .ap_return_9(grp_normalize_wlo_fu_942_ap_return_9),
    .ap_return_10(grp_normalize_wlo_fu_942_ap_return_10),
    .ap_return_11(grp_normalize_wlo_fu_942_ap_return_11),
    .ap_return_12(grp_normalize_wlo_fu_942_ap_return_12),
    .ap_return_13(grp_normalize_wlo_fu_942_ap_return_13),
    .ap_return_14(grp_normalize_wlo_fu_942_ap_return_14),
    .ap_return_15(grp_normalize_wlo_fu_942_ap_return_15),
    .ap_return_16(grp_normalize_wlo_fu_942_ap_return_16),
    .ap_return_17(grp_normalize_wlo_fu_942_ap_return_17),
    .ap_return_18(grp_normalize_wlo_fu_942_ap_return_18),
    .ap_return_19(grp_normalize_wlo_fu_942_ap_return_19),
    .ap_return_20(grp_normalize_wlo_fu_942_ap_return_20),
    .ap_return_21(grp_normalize_wlo_fu_942_ap_return_21),
    .ap_return_22(grp_normalize_wlo_fu_942_ap_return_22),
    .ap_return_23(grp_normalize_wlo_fu_942_ap_return_23),
    .ap_return_24(grp_normalize_wlo_fu_942_ap_return_24),
    .ap_return_25(grp_normalize_wlo_fu_942_ap_return_25),
    .ap_return_26(grp_normalize_wlo_fu_942_ap_return_26),
    .ap_return_27(grp_normalize_wlo_fu_942_ap_return_27),
    .ap_return_28(grp_normalize_wlo_fu_942_ap_return_28),
    .ap_return_29(grp_normalize_wlo_fu_942_ap_return_29),
    .ap_return_30(grp_normalize_wlo_fu_942_ap_return_30),
    .ap_return_31(grp_normalize_wlo_fu_942_ap_return_31),
    .ap_return_32(grp_normalize_wlo_fu_942_ap_return_32),
    .ap_return_33(grp_normalize_wlo_fu_942_ap_return_33),
    .ap_return_34(grp_normalize_wlo_fu_942_ap_return_34),
    .ap_return_35(grp_normalize_wlo_fu_942_ap_return_35),
    .ap_return_36(grp_normalize_wlo_fu_942_ap_return_36),
    .ap_return_37(grp_normalize_wlo_fu_942_ap_return_37),
    .ap_return_38(grp_normalize_wlo_fu_942_ap_return_38),
    .ap_return_39(grp_normalize_wlo_fu_942_ap_return_39),
    .ap_return_40(grp_normalize_wlo_fu_942_ap_return_40),
    .ap_return_41(grp_normalize_wlo_fu_942_ap_return_41),
    .ap_return_42(grp_normalize_wlo_fu_942_ap_return_42),
    .ap_return_43(grp_normalize_wlo_fu_942_ap_return_43),
    .ap_return_44(grp_normalize_wlo_fu_942_ap_return_44),
    .ap_return_45(grp_normalize_wlo_fu_942_ap_return_45),
    .ap_return_46(grp_normalize_wlo_fu_942_ap_return_46),
    .ap_return_47(grp_normalize_wlo_fu_942_ap_return_47),
    .ap_return_48(grp_normalize_wlo_fu_942_ap_return_48),
    .ap_return_49(grp_normalize_wlo_fu_942_ap_return_49),
    .ap_return_50(grp_normalize_wlo_fu_942_ap_return_50),
    .ap_return_51(grp_normalize_wlo_fu_942_ap_return_51),
    .ap_return_52(grp_normalize_wlo_fu_942_ap_return_52),
    .ap_return_53(grp_normalize_wlo_fu_942_ap_return_53),
    .ap_return_54(grp_normalize_wlo_fu_942_ap_return_54),
    .ap_return_55(grp_normalize_wlo_fu_942_ap_return_55),
    .ap_return_56(grp_normalize_wlo_fu_942_ap_return_56),
    .ap_return_57(grp_normalize_wlo_fu_942_ap_return_57),
    .ap_return_58(grp_normalize_wlo_fu_942_ap_return_58),
    .ap_return_59(grp_normalize_wlo_fu_942_ap_return_59),
    .ap_return_60(grp_normalize_wlo_fu_942_ap_return_60),
    .ap_return_61(grp_normalize_wlo_fu_942_ap_return_61),
    .ap_return_62(grp_normalize_wlo_fu_942_ap_return_62),
    .ap_return_63(grp_normalize_wlo_fu_942_ap_return_63),
    .ap_return_64(grp_normalize_wlo_fu_942_ap_return_64),
    .ap_return_65(grp_normalize_wlo_fu_942_ap_return_65),
    .ap_return_66(grp_normalize_wlo_fu_942_ap_return_66),
    .ap_return_67(grp_normalize_wlo_fu_942_ap_return_67),
    .ap_return_68(grp_normalize_wlo_fu_942_ap_return_68),
    .ap_return_69(grp_normalize_wlo_fu_942_ap_return_69),
    .ap_return_70(grp_normalize_wlo_fu_942_ap_return_70),
    .ap_return_71(grp_normalize_wlo_fu_942_ap_return_71),
    .ap_return_72(grp_normalize_wlo_fu_942_ap_return_72),
    .ap_return_73(grp_normalize_wlo_fu_942_ap_return_73),
    .ap_return_74(grp_normalize_wlo_fu_942_ap_return_74),
    .ap_return_75(grp_normalize_wlo_fu_942_ap_return_75),
    .ap_return_76(grp_normalize_wlo_fu_942_ap_return_76),
    .ap_return_77(grp_normalize_wlo_fu_942_ap_return_77),
    .ap_return_78(grp_normalize_wlo_fu_942_ap_return_78),
    .ap_return_79(grp_normalize_wlo_fu_942_ap_return_79),
    .ap_return_80(grp_normalize_wlo_fu_942_ap_return_80),
    .ap_return_81(grp_normalize_wlo_fu_942_ap_return_81),
    .ap_return_82(grp_normalize_wlo_fu_942_ap_return_82),
    .ap_return_83(grp_normalize_wlo_fu_942_ap_return_83),
    .ap_return_84(grp_normalize_wlo_fu_942_ap_return_84),
    .ap_return_85(grp_normalize_wlo_fu_942_ap_return_85),
    .ap_return_86(grp_normalize_wlo_fu_942_ap_return_86),
    .ap_return_87(grp_normalize_wlo_fu_942_ap_return_87),
    .ap_return_88(grp_normalize_wlo_fu_942_ap_return_88),
    .ap_return_89(grp_normalize_wlo_fu_942_ap_return_89),
    .ap_return_90(grp_normalize_wlo_fu_942_ap_return_90),
    .ap_return_91(grp_normalize_wlo_fu_942_ap_return_91),
    .ap_return_92(grp_normalize_wlo_fu_942_ap_return_92),
    .ap_return_93(grp_normalize_wlo_fu_942_ap_return_93),
    .ap_return_94(grp_normalize_wlo_fu_942_ap_return_94),
    .ap_return_95(grp_normalize_wlo_fu_942_ap_return_95),
    .ap_return_96(grp_normalize_wlo_fu_942_ap_return_96),
    .ap_return_97(grp_normalize_wlo_fu_942_ap_return_97),
    .ap_return_98(grp_normalize_wlo_fu_942_ap_return_98),
    .ap_return_99(grp_normalize_wlo_fu_942_ap_return_99),
    .ap_return_100(grp_normalize_wlo_fu_942_ap_return_100),
    .ap_return_101(grp_normalize_wlo_fu_942_ap_return_101),
    .ap_return_102(grp_normalize_wlo_fu_942_ap_return_102),
    .ap_return_103(grp_normalize_wlo_fu_942_ap_return_103)
);

separate_complex_wlo grp_separate_complex_wlo_fu_951(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_separate_complex_wlo_fu_951_ap_start),
    .ap_done(grp_separate_complex_wlo_fu_951_ap_done),
    .ap_idle(grp_separate_complex_wlo_fu_951_ap_idle),
    .ap_ready(grp_separate_complex_wlo_fu_951_ap_ready),
    .LS_stream_TDATA(LS_stream_V_data_0_data_out),
    .LS_stream_TVALID(grp_separate_complex_wlo_fu_951_LS_stream_TVALID),
    .LS_stream_TREADY(grp_separate_complex_wlo_fu_951_LS_stream_TREADY),
    .LS_stream_TLAST(LS_stream_V_last_V_0_data_out),
    .sep_address0(grp_separate_complex_wlo_fu_951_sep_address0),
    .sep_ce0(grp_separate_complex_wlo_fu_951_sep_ce0),
    .sep_we0(grp_separate_complex_wlo_fu_951_sep_we0),
    .sep_d0(grp_separate_complex_wlo_fu_951_sep_d0),
    .sep_address1(grp_separate_complex_wlo_fu_951_sep_address1),
    .sep_ce1(grp_separate_complex_wlo_fu_951_sep_ce1),
    .sep_we1(grp_separate_complex_wlo_fu_951_sep_we1),
    .sep_d1(grp_separate_complex_wlo_fu_951_sep_d1)
);

reconstruct_complex_s grp_reconstruct_complex_s_fu_960(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_reconstruct_complex_s_fu_960_ap_start),
    .ap_done(grp_reconstruct_complex_s_fu_960_ap_done),
    .ap_idle(grp_reconstruct_complex_s_fu_960_ap_idle),
    .ap_ready(grp_reconstruct_complex_s_fu_960_ap_ready),
    .y_L3_address0(grp_reconstruct_complex_s_fu_960_y_L3_address0),
    .y_L3_ce0(grp_reconstruct_complex_s_fu_960_y_L3_ce0),
    .y_L3_q0(denorm_DNN_q0),
    .y_L3_address1(grp_reconstruct_complex_s_fu_960_y_L3_address1),
    .y_L3_ce1(grp_reconstruct_complex_s_fu_960_y_L3_ce1),
    .y_L3_q1(denorm_DNN_q1),
    .DNN_out_TDATA(grp_reconstruct_complex_s_fu_960_DNN_out_TDATA),
    .DNN_out_TVALID(grp_reconstruct_complex_s_fu_960_DNN_out_TVALID),
    .DNN_out_TREADY(grp_reconstruct_complex_s_fu_960_DNN_out_TREADY),
    .DNN_out_TLAST(grp_reconstruct_complex_s_fu_960_DNN_out_TLAST)
);

DNN_wlo_hadd_16nsbLp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
DNN_wlo_hadd_16nsbLp_U417(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_i_reg_2595),
    .din1(mean_o_load_reg_2600),
    .ce(1'b1),
    .dout(grp_fu_969_p2)
);

DNN_wlo_hmul_16nsbMq #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
DNN_wlo_hmul_16nsbMq_U418(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(y_L3_load_reg_2580),
    .din1(std_o_load_reg_2585),
    .ce(1'b1),
    .dout(grp_fu_973_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        DNN_out_V_data_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == DNN_out_V_data_1_ack_out) & (1'b1 == DNN_out_V_data_1_vld_out))) begin
            DNN_out_V_data_1_sel_rd <= ~DNN_out_V_data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        DNN_out_V_data_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == DNN_out_V_data_1_ack_in) & (1'b1 == DNN_out_V_data_1_vld_in))) begin
            DNN_out_V_data_1_sel_wr <= ~DNN_out_V_data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        DNN_out_V_data_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == DNN_out_V_data_1_state) & (1'b0 == DNN_out_V_data_1_vld_in)) | ((2'd3 == DNN_out_V_data_1_state) & (1'b0 == DNN_out_V_data_1_vld_in) & (1'b1 == DNN_out_V_data_1_ack_out)))) begin
            DNN_out_V_data_1_state <= 2'd2;
        end else if ((((2'd1 == DNN_out_V_data_1_state) & (1'b0 == DNN_out_TREADY)) | ((2'd3 == DNN_out_V_data_1_state) & (1'b0 == DNN_out_TREADY) & (1'b1 == DNN_out_V_data_1_vld_in)))) begin
            DNN_out_V_data_1_state <= 2'd1;
        end else if (((~((1'b0 == DNN_out_V_data_1_vld_in) & (1'b1 == DNN_out_V_data_1_ack_out)) & ~((1'b0 == DNN_out_TREADY) & (1'b1 == DNN_out_V_data_1_vld_in)) & (2'd3 == DNN_out_V_data_1_state)) | ((2'd1 == DNN_out_V_data_1_state) & (1'b1 == DNN_out_V_data_1_ack_out)) | ((2'd2 == DNN_out_V_data_1_state) & (1'b1 == DNN_out_V_data_1_vld_in)))) begin
            DNN_out_V_data_1_state <= 2'd3;
        end else begin
            DNN_out_V_data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        DNN_out_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == DNN_out_V_last_V_1_ack_out) & (1'b1 == DNN_out_V_last_V_1_vld_out))) begin
            DNN_out_V_last_V_1_sel_rd <= ~DNN_out_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        DNN_out_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == DNN_out_V_last_V_1_ack_in) & (1'b1 == DNN_out_V_last_V_1_vld_in))) begin
            DNN_out_V_last_V_1_sel_wr <= ~DNN_out_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        DNN_out_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == DNN_out_V_last_V_1_state) & (1'b0 == DNN_out_V_last_V_1_vld_in)) | ((2'd3 == DNN_out_V_last_V_1_state) & (1'b0 == DNN_out_V_last_V_1_vld_in) & (1'b1 == DNN_out_V_last_V_1_ack_out)))) begin
            DNN_out_V_last_V_1_state <= 2'd2;
        end else if ((((2'd1 == DNN_out_V_last_V_1_state) & (1'b0 == DNN_out_TREADY)) | ((2'd3 == DNN_out_V_last_V_1_state) & (1'b0 == DNN_out_TREADY) & (1'b1 == DNN_out_V_last_V_1_vld_in)))) begin
            DNN_out_V_last_V_1_state <= 2'd1;
        end else if (((~((1'b0 == DNN_out_V_last_V_1_vld_in) & (1'b1 == DNN_out_V_last_V_1_ack_out)) & ~((1'b0 == DNN_out_TREADY) & (1'b1 == DNN_out_V_last_V_1_vld_in)) & (2'd3 == DNN_out_V_last_V_1_state)) | ((2'd1 == DNN_out_V_last_V_1_state) & (1'b1 == DNN_out_V_last_V_1_ack_out)) | ((2'd2 == DNN_out_V_last_V_1_state) & (1'b1 == DNN_out_V_last_V_1_vld_in)))) begin
            DNN_out_V_last_V_1_state <= 2'd3;
        end else begin
            DNN_out_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        LS_stream_V_data_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == LS_stream_V_data_0_ack_out) & (1'b1 == LS_stream_V_data_0_vld_out))) begin
            LS_stream_V_data_0_sel_rd <= ~LS_stream_V_data_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        LS_stream_V_data_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == LS_stream_V_data_0_ack_in) & (1'b1 == LS_stream_V_data_0_vld_in))) begin
            LS_stream_V_data_0_sel_wr <= ~LS_stream_V_data_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        LS_stream_V_data_0_state <= 2'd0;
    end else begin
        if ((((2'd2 == LS_stream_V_data_0_state) & (1'b0 == LS_stream_V_data_0_vld_in)) | ((2'd3 == LS_stream_V_data_0_state) & (1'b0 == LS_stream_V_data_0_vld_in) & (1'b1 == LS_stream_V_data_0_ack_out)))) begin
            LS_stream_V_data_0_state <= 2'd2;
        end else if ((((2'd1 == LS_stream_V_data_0_state) & (1'b0 == LS_stream_V_data_0_ack_out)) | ((2'd3 == LS_stream_V_data_0_state) & (1'b0 == LS_stream_V_data_0_ack_out) & (1'b1 == LS_stream_V_data_0_vld_in)))) begin
            LS_stream_V_data_0_state <= 2'd1;
        end else if (((~((1'b0 == LS_stream_V_data_0_vld_in) & (1'b1 == LS_stream_V_data_0_ack_out)) & ~((1'b0 == LS_stream_V_data_0_ack_out) & (1'b1 == LS_stream_V_data_0_vld_in)) & (2'd3 == LS_stream_V_data_0_state)) | ((2'd1 == LS_stream_V_data_0_state) & (1'b1 == LS_stream_V_data_0_ack_out)) | ((2'd2 == LS_stream_V_data_0_state) & (1'b1 == LS_stream_V_data_0_vld_in)))) begin
            LS_stream_V_data_0_state <= 2'd3;
        end else begin
            LS_stream_V_data_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        LS_stream_V_last_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == LS_stream_V_last_V_0_ack_out) & (1'b1 == LS_stream_V_last_V_0_vld_out))) begin
            LS_stream_V_last_V_0_sel_rd <= ~LS_stream_V_last_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        LS_stream_V_last_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == LS_stream_V_last_V_0_ack_in) & (1'b1 == LS_stream_V_last_V_0_vld_in))) begin
            LS_stream_V_last_V_0_sel_wr <= ~LS_stream_V_last_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        LS_stream_V_last_V_0_state <= 2'd0;
    end else begin
        if ((((2'd2 == LS_stream_V_last_V_0_state) & (1'b0 == LS_stream_V_last_V_0_vld_in)) | ((2'd3 == LS_stream_V_last_V_0_state) & (1'b0 == LS_stream_V_last_V_0_vld_in) & (1'b1 == LS_stream_V_last_V_0_ack_out)))) begin
            LS_stream_V_last_V_0_state <= 2'd2;
        end else if ((((2'd1 == LS_stream_V_last_V_0_state) & (1'b0 == LS_stream_V_last_V_0_ack_out)) | ((2'd3 == LS_stream_V_last_V_0_state) & (1'b0 == LS_stream_V_last_V_0_ack_out) & (1'b1 == LS_stream_V_last_V_0_vld_in)))) begin
            LS_stream_V_last_V_0_state <= 2'd1;
        end else if (((~((1'b0 == LS_stream_V_last_V_0_vld_in) & (1'b1 == LS_stream_V_last_V_0_ack_out)) & ~((1'b0 == LS_stream_V_last_V_0_ack_out) & (1'b1 == LS_stream_V_last_V_0_vld_in)) & (2'd3 == LS_stream_V_last_V_0_state)) | ((2'd1 == LS_stream_V_last_V_0_state) & (1'b1 == LS_stream_V_last_V_0_ack_out)) | ((2'd2 == LS_stream_V_last_V_0_state) & (1'b1 == LS_stream_V_last_V_0_vld_in)))) begin
            LS_stream_V_last_V_0_state <= 2'd3;
        end else begin
            LS_stream_V_last_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_L3_wlo_fu_779_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state8)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state8);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end else if (((grp_L3_wlo_fu_779_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp0_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_L2_wlo_fu_461_ap_start_reg <= 1'b0;
    end else begin
        if (((grp_normalize_wlo_fu_942_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            grp_L2_wlo_fu_461_ap_start_reg <= 1'b1;
        end else if ((grp_L2_wlo_fu_461_ap_ready == 1'b1)) begin
            grp_L2_wlo_fu_461_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_L3_wlo_fu_779_ap_start_reg <= 1'b0;
    end else begin
        if (((grp_L2_wlo_fu_461_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
            grp_L3_wlo_fu_779_ap_start_reg <= 1'b1;
        end else if ((grp_L3_wlo_fu_779_ap_ready == 1'b1)) begin
            grp_L3_wlo_fu_779_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_normalize_wlo_fu_942_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_normalize_wlo_fu_942_ap_start_reg <= 1'b1;
        end else if ((grp_normalize_wlo_fu_942_ap_ready == 1'b1)) begin
            grp_normalize_wlo_fu_942_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_reconstruct_complex_s_fu_960_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state20)) begin
            grp_reconstruct_complex_s_fu_960_ap_start_reg <= 1'b1;
        end else if ((grp_reconstruct_complex_s_fu_960_ap_ready == 1'b1)) begin
            grp_reconstruct_complex_s_fu_960_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_separate_complex_wlo_fu_951_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_separate_complex_wlo_fu_951_ap_start_reg <= 1'b1;
        end else if ((grp_separate_complex_wlo_fu_951_ap_ready == 1'b1)) begin
            grp_separate_complex_wlo_fu_951_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln529_fu_1757_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_i_reg_450 <= i_fu_1763_p2;
    end else if (((grp_L3_wlo_fu_779_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        i_0_i_reg_450 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == DNN_out_V_data_1_load_A)) begin
        DNN_out_V_data_1_payload_A <= grp_reconstruct_complex_s_fu_960_DNN_out_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == DNN_out_V_data_1_load_B)) begin
        DNN_out_V_data_1_payload_B <= grp_reconstruct_complex_s_fu_960_DNN_out_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == DNN_out_V_last_V_1_load_A)) begin
        DNN_out_V_last_V_1_payload_A <= grp_reconstruct_complex_s_fu_960_DNN_out_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == DNN_out_V_last_V_1_load_B)) begin
        DNN_out_V_last_V_1_payload_B <= grp_reconstruct_complex_s_fu_960_DNN_out_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == LS_stream_V_data_0_load_A)) begin
        LS_stream_V_data_0_payload_A <= LS_stream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == LS_stream_V_data_0_load_B)) begin
        LS_stream_V_data_0_payload_B <= LS_stream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == LS_stream_V_last_V_0_load_A)) begin
        LS_stream_V_last_V_0_payload_A <= LS_stream_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == LS_stream_V_last_V_0_load_B)) begin
        LS_stream_V_last_V_0_payload_B <= LS_stream_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln529_reg_2555 <= icmp_ln529_fu_1757_p2;
        icmp_ln529_reg_2555_pp0_iter1_reg <= icmp_ln529_reg_2555;
        zext_ln531_reg_2564_pp0_iter1_reg[6 : 0] <= zext_ln531_reg_2564[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln529_reg_2555_pp0_iter10_reg <= icmp_ln529_reg_2555_pp0_iter9_reg;
        icmp_ln529_reg_2555_pp0_iter2_reg <= icmp_ln529_reg_2555_pp0_iter1_reg;
        icmp_ln529_reg_2555_pp0_iter3_reg <= icmp_ln529_reg_2555_pp0_iter2_reg;
        icmp_ln529_reg_2555_pp0_iter4_reg <= icmp_ln529_reg_2555_pp0_iter3_reg;
        icmp_ln529_reg_2555_pp0_iter5_reg <= icmp_ln529_reg_2555_pp0_iter4_reg;
        icmp_ln529_reg_2555_pp0_iter6_reg <= icmp_ln529_reg_2555_pp0_iter5_reg;
        icmp_ln529_reg_2555_pp0_iter7_reg <= icmp_ln529_reg_2555_pp0_iter6_reg;
        icmp_ln529_reg_2555_pp0_iter8_reg <= icmp_ln529_reg_2555_pp0_iter7_reg;
        icmp_ln529_reg_2555_pp0_iter9_reg <= icmp_ln529_reg_2555_pp0_iter8_reg;
        zext_ln531_reg_2564_pp0_iter10_reg[6 : 0] <= zext_ln531_reg_2564_pp0_iter9_reg[6 : 0];
        zext_ln531_reg_2564_pp0_iter2_reg[6 : 0] <= zext_ln531_reg_2564_pp0_iter1_reg[6 : 0];
        zext_ln531_reg_2564_pp0_iter3_reg[6 : 0] <= zext_ln531_reg_2564_pp0_iter2_reg[6 : 0];
        zext_ln531_reg_2564_pp0_iter4_reg[6 : 0] <= zext_ln531_reg_2564_pp0_iter3_reg[6 : 0];
        zext_ln531_reg_2564_pp0_iter5_reg[6 : 0] <= zext_ln531_reg_2564_pp0_iter4_reg[6 : 0];
        zext_ln531_reg_2564_pp0_iter6_reg[6 : 0] <= zext_ln531_reg_2564_pp0_iter5_reg[6 : 0];
        zext_ln531_reg_2564_pp0_iter7_reg[6 : 0] <= zext_ln531_reg_2564_pp0_iter6_reg[6 : 0];
        zext_ln531_reg_2564_pp0_iter8_reg[6 : 0] <= zext_ln531_reg_2564_pp0_iter7_reg[6 : 0];
        zext_ln531_reg_2564_pp0_iter9_reg[6 : 0] <= zext_ln531_reg_2564_pp0_iter8_reg[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln529_reg_2555_pp0_iter4_reg == 1'd0))) begin
        mean_o_load_reg_2600 <= mean_o_q0;
        tmp_i_reg_2595 <= grp_fu_973_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_normalize_wlo_fu_942_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        norm_LS_data_0_0_reg_1775 <= grp_normalize_wlo_fu_942_ap_return_0;
        norm_LS_data_0_1_reg_1780 <= grp_normalize_wlo_fu_942_ap_return_1;
        norm_LS_data_10_0_reg_1875 <= grp_normalize_wlo_fu_942_ap_return_20;
        norm_LS_data_10_1_reg_1880 <= grp_normalize_wlo_fu_942_ap_return_21;
        norm_LS_data_11_0_reg_1885 <= grp_normalize_wlo_fu_942_ap_return_22;
        norm_LS_data_11_1_reg_1890 <= grp_normalize_wlo_fu_942_ap_return_23;
        norm_LS_data_12_0_reg_1895 <= grp_normalize_wlo_fu_942_ap_return_24;
        norm_LS_data_12_1_reg_1900 <= grp_normalize_wlo_fu_942_ap_return_25;
        norm_LS_data_13_0_reg_1905 <= grp_normalize_wlo_fu_942_ap_return_26;
        norm_LS_data_13_1_reg_1910 <= grp_normalize_wlo_fu_942_ap_return_27;
        norm_LS_data_14_0_reg_1915 <= grp_normalize_wlo_fu_942_ap_return_28;
        norm_LS_data_14_1_reg_1920 <= grp_normalize_wlo_fu_942_ap_return_29;
        norm_LS_data_15_0_reg_1925 <= grp_normalize_wlo_fu_942_ap_return_30;
        norm_LS_data_15_1_reg_1930 <= grp_normalize_wlo_fu_942_ap_return_31;
        norm_LS_data_16_0_reg_1935 <= grp_normalize_wlo_fu_942_ap_return_32;
        norm_LS_data_16_1_reg_1940 <= grp_normalize_wlo_fu_942_ap_return_33;
        norm_LS_data_17_0_reg_1945 <= grp_normalize_wlo_fu_942_ap_return_34;
        norm_LS_data_17_1_reg_1950 <= grp_normalize_wlo_fu_942_ap_return_35;
        norm_LS_data_18_0_reg_1955 <= grp_normalize_wlo_fu_942_ap_return_36;
        norm_LS_data_18_1_reg_1960 <= grp_normalize_wlo_fu_942_ap_return_37;
        norm_LS_data_19_0_reg_1965 <= grp_normalize_wlo_fu_942_ap_return_38;
        norm_LS_data_19_1_reg_1970 <= grp_normalize_wlo_fu_942_ap_return_39;
        norm_LS_data_1_0_reg_1785 <= grp_normalize_wlo_fu_942_ap_return_2;
        norm_LS_data_1_1_reg_1790 <= grp_normalize_wlo_fu_942_ap_return_3;
        norm_LS_data_20_0_reg_1975 <= grp_normalize_wlo_fu_942_ap_return_40;
        norm_LS_data_20_1_reg_1980 <= grp_normalize_wlo_fu_942_ap_return_41;
        norm_LS_data_21_0_reg_1985 <= grp_normalize_wlo_fu_942_ap_return_42;
        norm_LS_data_21_1_reg_1990 <= grp_normalize_wlo_fu_942_ap_return_43;
        norm_LS_data_22_0_reg_1995 <= grp_normalize_wlo_fu_942_ap_return_44;
        norm_LS_data_22_1_reg_2000 <= grp_normalize_wlo_fu_942_ap_return_45;
        norm_LS_data_23_0_reg_2005 <= grp_normalize_wlo_fu_942_ap_return_46;
        norm_LS_data_23_1_reg_2010 <= grp_normalize_wlo_fu_942_ap_return_47;
        norm_LS_data_24_0_reg_2015 <= grp_normalize_wlo_fu_942_ap_return_48;
        norm_LS_data_24_1_reg_2020 <= grp_normalize_wlo_fu_942_ap_return_49;
        norm_LS_data_25_0_reg_2025 <= grp_normalize_wlo_fu_942_ap_return_50;
        norm_LS_data_25_1_reg_2030 <= grp_normalize_wlo_fu_942_ap_return_51;
        norm_LS_data_26_0_reg_2035 <= grp_normalize_wlo_fu_942_ap_return_52;
        norm_LS_data_26_1_reg_2040 <= grp_normalize_wlo_fu_942_ap_return_53;
        norm_LS_data_27_0_reg_2045 <= grp_normalize_wlo_fu_942_ap_return_54;
        norm_LS_data_27_1_reg_2050 <= grp_normalize_wlo_fu_942_ap_return_55;
        norm_LS_data_28_0_reg_2055 <= grp_normalize_wlo_fu_942_ap_return_56;
        norm_LS_data_28_1_reg_2060 <= grp_normalize_wlo_fu_942_ap_return_57;
        norm_LS_data_29_0_reg_2065 <= grp_normalize_wlo_fu_942_ap_return_58;
        norm_LS_data_29_1_reg_2070 <= grp_normalize_wlo_fu_942_ap_return_59;
        norm_LS_data_2_0_reg_1795 <= grp_normalize_wlo_fu_942_ap_return_4;
        norm_LS_data_2_1_reg_1800 <= grp_normalize_wlo_fu_942_ap_return_5;
        norm_LS_data_30_0_reg_2075 <= grp_normalize_wlo_fu_942_ap_return_60;
        norm_LS_data_30_1_reg_2080 <= grp_normalize_wlo_fu_942_ap_return_61;
        norm_LS_data_31_0_reg_2085 <= grp_normalize_wlo_fu_942_ap_return_62;
        norm_LS_data_31_1_reg_2090 <= grp_normalize_wlo_fu_942_ap_return_63;
        norm_LS_data_32_0_reg_2095 <= grp_normalize_wlo_fu_942_ap_return_64;
        norm_LS_data_32_1_reg_2100 <= grp_normalize_wlo_fu_942_ap_return_65;
        norm_LS_data_33_0_reg_2105 <= grp_normalize_wlo_fu_942_ap_return_66;
        norm_LS_data_33_1_reg_2110 <= grp_normalize_wlo_fu_942_ap_return_67;
        norm_LS_data_34_0_reg_2115 <= grp_normalize_wlo_fu_942_ap_return_68;
        norm_LS_data_34_1_reg_2120 <= grp_normalize_wlo_fu_942_ap_return_69;
        norm_LS_data_35_0_reg_2125 <= grp_normalize_wlo_fu_942_ap_return_70;
        norm_LS_data_35_1_reg_2130 <= grp_normalize_wlo_fu_942_ap_return_71;
        norm_LS_data_36_0_reg_2135 <= grp_normalize_wlo_fu_942_ap_return_72;
        norm_LS_data_36_1_reg_2140 <= grp_normalize_wlo_fu_942_ap_return_73;
        norm_LS_data_37_0_reg_2145 <= grp_normalize_wlo_fu_942_ap_return_74;
        norm_LS_data_37_1_reg_2150 <= grp_normalize_wlo_fu_942_ap_return_75;
        norm_LS_data_38_0_reg_2155 <= grp_normalize_wlo_fu_942_ap_return_76;
        norm_LS_data_38_1_reg_2160 <= grp_normalize_wlo_fu_942_ap_return_77;
        norm_LS_data_39_0_reg_2165 <= grp_normalize_wlo_fu_942_ap_return_78;
        norm_LS_data_39_1_reg_2170 <= grp_normalize_wlo_fu_942_ap_return_79;
        norm_LS_data_3_0_reg_1805 <= grp_normalize_wlo_fu_942_ap_return_6;
        norm_LS_data_3_1_reg_1810 <= grp_normalize_wlo_fu_942_ap_return_7;
        norm_LS_data_40_0_reg_2175 <= grp_normalize_wlo_fu_942_ap_return_80;
        norm_LS_data_40_1_reg_2180 <= grp_normalize_wlo_fu_942_ap_return_81;
        norm_LS_data_41_0_reg_2185 <= grp_normalize_wlo_fu_942_ap_return_82;
        norm_LS_data_41_1_reg_2190 <= grp_normalize_wlo_fu_942_ap_return_83;
        norm_LS_data_42_0_reg_2195 <= grp_normalize_wlo_fu_942_ap_return_84;
        norm_LS_data_42_1_reg_2200 <= grp_normalize_wlo_fu_942_ap_return_85;
        norm_LS_data_43_0_reg_2205 <= grp_normalize_wlo_fu_942_ap_return_86;
        norm_LS_data_43_1_reg_2210 <= grp_normalize_wlo_fu_942_ap_return_87;
        norm_LS_data_44_0_reg_2215 <= grp_normalize_wlo_fu_942_ap_return_88;
        norm_LS_data_44_1_reg_2220 <= grp_normalize_wlo_fu_942_ap_return_89;
        norm_LS_data_45_0_reg_2225 <= grp_normalize_wlo_fu_942_ap_return_90;
        norm_LS_data_45_1_reg_2230 <= grp_normalize_wlo_fu_942_ap_return_91;
        norm_LS_data_46_0_reg_2235 <= grp_normalize_wlo_fu_942_ap_return_92;
        norm_LS_data_46_1_reg_2240 <= grp_normalize_wlo_fu_942_ap_return_93;
        norm_LS_data_47_0_reg_2245 <= grp_normalize_wlo_fu_942_ap_return_94;
        norm_LS_data_47_1_reg_2250 <= grp_normalize_wlo_fu_942_ap_return_95;
        norm_LS_data_48_0_reg_2255 <= grp_normalize_wlo_fu_942_ap_return_96;
        norm_LS_data_48_1_reg_2260 <= grp_normalize_wlo_fu_942_ap_return_97;
        norm_LS_data_49_0_reg_2265 <= grp_normalize_wlo_fu_942_ap_return_98;
        norm_LS_data_49_1_reg_2270 <= grp_normalize_wlo_fu_942_ap_return_99;
        norm_LS_data_4_0_reg_1815 <= grp_normalize_wlo_fu_942_ap_return_8;
        norm_LS_data_4_1_reg_1820 <= grp_normalize_wlo_fu_942_ap_return_9;
        norm_LS_data_50_0_reg_2275 <= grp_normalize_wlo_fu_942_ap_return_100;
        norm_LS_data_50_1_reg_2280 <= grp_normalize_wlo_fu_942_ap_return_101;
        norm_LS_data_51_0_reg_2285 <= grp_normalize_wlo_fu_942_ap_return_102;
        norm_LS_data_51_1_reg_2290 <= grp_normalize_wlo_fu_942_ap_return_103;
        norm_LS_data_5_0_reg_1825 <= grp_normalize_wlo_fu_942_ap_return_10;
        norm_LS_data_5_1_reg_1830 <= grp_normalize_wlo_fu_942_ap_return_11;
        norm_LS_data_6_0_reg_1835 <= grp_normalize_wlo_fu_942_ap_return_12;
        norm_LS_data_6_1_reg_1840 <= grp_normalize_wlo_fu_942_ap_return_13;
        norm_LS_data_7_0_reg_1845 <= grp_normalize_wlo_fu_942_ap_return_14;
        norm_LS_data_7_1_reg_1850 <= grp_normalize_wlo_fu_942_ap_return_15;
        norm_LS_data_8_0_reg_1855 <= grp_normalize_wlo_fu_942_ap_return_16;
        norm_LS_data_8_1_reg_1860 <= grp_normalize_wlo_fu_942_ap_return_17;
        norm_LS_data_9_0_reg_1865 <= grp_normalize_wlo_fu_942_ap_return_18;
        norm_LS_data_9_1_reg_1870 <= grp_normalize_wlo_fu_942_ap_return_19;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln529_reg_2555 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        std_o_load_reg_2585 <= std_o_q0;
        y_L3_load_reg_2580 <= y_L3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln529_reg_2555_pp0_iter9_reg == 1'd0))) begin
        tmp_5_i_reg_2605 <= grp_fu_969_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_L2_wlo_fu_461_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        y_L2_0_0_reg_2295 <= grp_L2_wlo_fu_461_ap_return_0;
        y_L2_0_1_reg_2300 <= grp_L2_wlo_fu_461_ap_return_1;
        y_L2_10_0_reg_2395 <= grp_L2_wlo_fu_461_ap_return_20;
        y_L2_10_1_reg_2400 <= grp_L2_wlo_fu_461_ap_return_21;
        y_L2_11_0_reg_2405 <= grp_L2_wlo_fu_461_ap_return_22;
        y_L2_11_1_reg_2410 <= grp_L2_wlo_fu_461_ap_return_23;
        y_L2_12_0_reg_2415 <= grp_L2_wlo_fu_461_ap_return_24;
        y_L2_12_1_reg_2420 <= grp_L2_wlo_fu_461_ap_return_25;
        y_L2_13_0_reg_2425 <= grp_L2_wlo_fu_461_ap_return_26;
        y_L2_13_1_reg_2430 <= grp_L2_wlo_fu_461_ap_return_27;
        y_L2_14_0_reg_2435 <= grp_L2_wlo_fu_461_ap_return_28;
        y_L2_14_1_reg_2440 <= grp_L2_wlo_fu_461_ap_return_29;
        y_L2_15_0_reg_2445 <= grp_L2_wlo_fu_461_ap_return_30;
        y_L2_15_1_reg_2450 <= grp_L2_wlo_fu_461_ap_return_31;
        y_L2_16_0_reg_2455 <= grp_L2_wlo_fu_461_ap_return_32;
        y_L2_16_1_reg_2460 <= grp_L2_wlo_fu_461_ap_return_33;
        y_L2_17_0_reg_2465 <= grp_L2_wlo_fu_461_ap_return_34;
        y_L2_17_1_reg_2470 <= grp_L2_wlo_fu_461_ap_return_35;
        y_L2_18_0_reg_2475 <= grp_L2_wlo_fu_461_ap_return_36;
        y_L2_18_1_reg_2480 <= grp_L2_wlo_fu_461_ap_return_37;
        y_L2_19_0_reg_2485 <= grp_L2_wlo_fu_461_ap_return_38;
        y_L2_19_1_reg_2490 <= grp_L2_wlo_fu_461_ap_return_39;
        y_L2_1_0_reg_2305 <= grp_L2_wlo_fu_461_ap_return_2;
        y_L2_1_1_reg_2310 <= grp_L2_wlo_fu_461_ap_return_3;
        y_L2_20_0_reg_2495 <= grp_L2_wlo_fu_461_ap_return_40;
        y_L2_20_1_reg_2500 <= grp_L2_wlo_fu_461_ap_return_41;
        y_L2_21_0_reg_2505 <= grp_L2_wlo_fu_461_ap_return_42;
        y_L2_21_1_reg_2510 <= grp_L2_wlo_fu_461_ap_return_43;
        y_L2_22_0_reg_2515 <= grp_L2_wlo_fu_461_ap_return_44;
        y_L2_22_1_reg_2520 <= grp_L2_wlo_fu_461_ap_return_45;
        y_L2_23_0_reg_2525 <= grp_L2_wlo_fu_461_ap_return_46;
        y_L2_23_1_reg_2530 <= grp_L2_wlo_fu_461_ap_return_47;
        y_L2_24_0_reg_2535 <= grp_L2_wlo_fu_461_ap_return_48;
        y_L2_24_1_reg_2540 <= grp_L2_wlo_fu_461_ap_return_49;
        y_L2_25_0_reg_2545 <= grp_L2_wlo_fu_461_ap_return_50;
        y_L2_25_1_reg_2550 <= grp_L2_wlo_fu_461_ap_return_51;
        y_L2_2_0_reg_2315 <= grp_L2_wlo_fu_461_ap_return_4;
        y_L2_2_1_reg_2320 <= grp_L2_wlo_fu_461_ap_return_5;
        y_L2_3_0_reg_2325 <= grp_L2_wlo_fu_461_ap_return_6;
        y_L2_3_1_reg_2330 <= grp_L2_wlo_fu_461_ap_return_7;
        y_L2_4_0_reg_2335 <= grp_L2_wlo_fu_461_ap_return_8;
        y_L2_4_1_reg_2340 <= grp_L2_wlo_fu_461_ap_return_9;
        y_L2_5_0_reg_2345 <= grp_L2_wlo_fu_461_ap_return_10;
        y_L2_5_1_reg_2350 <= grp_L2_wlo_fu_461_ap_return_11;
        y_L2_6_0_reg_2355 <= grp_L2_wlo_fu_461_ap_return_12;
        y_L2_6_1_reg_2360 <= grp_L2_wlo_fu_461_ap_return_13;
        y_L2_7_0_reg_2365 <= grp_L2_wlo_fu_461_ap_return_14;
        y_L2_7_1_reg_2370 <= grp_L2_wlo_fu_461_ap_return_15;
        y_L2_8_0_reg_2375 <= grp_L2_wlo_fu_461_ap_return_16;
        y_L2_8_1_reg_2380 <= grp_L2_wlo_fu_461_ap_return_17;
        y_L2_9_0_reg_2385 <= grp_L2_wlo_fu_461_ap_return_18;
        y_L2_9_1_reg_2390 <= grp_L2_wlo_fu_461_ap_return_19;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln529_fu_1757_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln531_reg_2564[6 : 0] <= zext_ln531_fu_1769_p1[6 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == DNN_out_V_data_1_sel)) begin
        DNN_out_V_data_1_data_out = DNN_out_V_data_1_payload_B;
    end else begin
        DNN_out_V_data_1_data_out = DNN_out_V_data_1_payload_A;
    end
end

always @ (*) begin
    if ((1'b1 == DNN_out_V_last_V_1_sel)) begin
        DNN_out_V_last_V_1_data_out = DNN_out_V_last_V_1_payload_B;
    end else begin
        DNN_out_V_last_V_1_data_out = DNN_out_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        LS_data_address0 = grp_separate_complex_wlo_fu_951_sep_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        LS_data_address0 = grp_normalize_wlo_fu_942_LS_data_address0;
    end else begin
        LS_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        LS_data_ce0 = grp_separate_complex_wlo_fu_951_sep_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        LS_data_ce0 = grp_normalize_wlo_fu_942_LS_data_ce0;
    end else begin
        LS_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        LS_data_ce1 = grp_separate_complex_wlo_fu_951_sep_ce1;
    end else begin
        LS_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        LS_data_we0 = grp_separate_complex_wlo_fu_951_sep_we0;
    end else begin
        LS_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        LS_data_we1 = grp_separate_complex_wlo_fu_951_sep_we1;
    end else begin
        LS_data_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        LS_stream_V_data_0_ack_out = grp_separate_complex_wlo_fu_951_LS_stream_TREADY;
    end else begin
        LS_stream_V_data_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == LS_stream_V_data_0_sel)) begin
        LS_stream_V_data_0_data_out = LS_stream_V_data_0_payload_B;
    end else begin
        LS_stream_V_data_0_data_out = LS_stream_V_data_0_payload_A;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        LS_stream_V_last_V_0_ack_out = grp_separate_complex_wlo_fu_951_LS_stream_TREADY;
    end else begin
        LS_stream_V_last_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == LS_stream_V_last_V_0_sel)) begin
        LS_stream_V_last_V_0_data_out = LS_stream_V_last_V_0_payload_B;
    end else begin
        LS_stream_V_last_V_0_data_out = LS_stream_V_last_V_0_payload_A;
    end
end

always @ (*) begin
    if ((icmp_ln529_fu_1757_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        denorm_DNN_address0 = zext_ln531_reg_2564_pp0_iter10_reg;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        denorm_DNN_address0 = grp_reconstruct_complex_s_fu_960_y_L3_address0;
    end else begin
        denorm_DNN_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        denorm_DNN_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        denorm_DNN_ce0 = grp_reconstruct_complex_s_fu_960_y_L3_ce0;
    end else begin
        denorm_DNN_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        denorm_DNN_ce1 = grp_reconstruct_complex_s_fu_960_y_L3_ce1;
    end else begin
        denorm_DNN_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln529_reg_2555_pp0_iter10_reg == 1'd0) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        denorm_DNN_we0 = 1'b1;
    end else begin
        denorm_DNN_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        mean_o_ce0 = 1'b1;
    end else begin
        mean_o_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        std_o_ce0 = 1'b1;
    end else begin
        std_o_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_L3_address0 = zext_ln531_fu_1769_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        y_L3_address0 = grp_L3_wlo_fu_779_y_L3_address0;
    end else begin
        y_L3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_L3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        y_L3_ce0 = grp_L3_wlo_fu_779_y_L3_ce0;
    end else begin
        y_L3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        y_L3_we0 = grp_L3_wlo_fu_779_y_L3_we0;
    end else begin
        y_L3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_separate_complex_wlo_fu_951_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_normalize_wlo_fu_942_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((grp_L2_wlo_fu_461_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((grp_L3_wlo_fu_779_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln529_fu_1757_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter10 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter10 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln529_fu_1757_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (grp_reconstruct_complex_s_fu_960_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if ((~((2'd1 == DNN_out_V_last_V_1_state) | (2'd1 == DNN_out_V_data_1_state) | ((2'd3 == DNN_out_V_last_V_1_state) & (1'b0 == DNN_out_TREADY)) | ((2'd3 == DNN_out_V_data_1_state) & (1'b0 == DNN_out_TREADY))) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DNN_out_TDATA = DNN_out_V_data_1_data_out;

assign DNN_out_TLAST = DNN_out_V_last_V_1_data_out;

assign DNN_out_TVALID = DNN_out_V_last_V_1_state[1'd0];

assign DNN_out_V_data_1_ack_in = DNN_out_V_data_1_state[1'd1];

assign DNN_out_V_data_1_ack_out = DNN_out_TREADY;

assign DNN_out_V_data_1_load_A = (~DNN_out_V_data_1_sel_wr & DNN_out_V_data_1_state_cmp_full);

assign DNN_out_V_data_1_load_B = (DNN_out_V_data_1_state_cmp_full & DNN_out_V_data_1_sel_wr);

assign DNN_out_V_data_1_sel = DNN_out_V_data_1_sel_rd;

assign DNN_out_V_data_1_state_cmp_full = ((DNN_out_V_data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign DNN_out_V_data_1_vld_in = grp_reconstruct_complex_s_fu_960_DNN_out_TVALID;

assign DNN_out_V_data_1_vld_out = DNN_out_V_data_1_state[1'd0];

assign DNN_out_V_last_V_1_ack_in = DNN_out_V_last_V_1_state[1'd1];

assign DNN_out_V_last_V_1_ack_out = DNN_out_TREADY;

assign DNN_out_V_last_V_1_load_A = (~DNN_out_V_last_V_1_sel_wr & DNN_out_V_last_V_1_state_cmp_full);

assign DNN_out_V_last_V_1_load_B = (DNN_out_V_last_V_1_state_cmp_full & DNN_out_V_last_V_1_sel_wr);

assign DNN_out_V_last_V_1_sel = DNN_out_V_last_V_1_sel_rd;

assign DNN_out_V_last_V_1_state_cmp_full = ((DNN_out_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign DNN_out_V_last_V_1_vld_in = grp_reconstruct_complex_s_fu_960_DNN_out_TVALID;

assign DNN_out_V_last_V_1_vld_out = DNN_out_V_last_V_1_state[1'd0];

assign LS_stream_TREADY = LS_stream_V_last_V_0_state[1'd1];

assign LS_stream_V_data_0_ack_in = LS_stream_V_data_0_state[1'd1];

assign LS_stream_V_data_0_load_A = (~LS_stream_V_data_0_sel_wr & LS_stream_V_data_0_state_cmp_full);

assign LS_stream_V_data_0_load_B = (LS_stream_V_data_0_state_cmp_full & LS_stream_V_data_0_sel_wr);

assign LS_stream_V_data_0_sel = LS_stream_V_data_0_sel_rd;

assign LS_stream_V_data_0_state_cmp_full = ((LS_stream_V_data_0_state != 2'd1) ? 1'b1 : 1'b0);

assign LS_stream_V_data_0_vld_in = LS_stream_TVALID;

assign LS_stream_V_data_0_vld_out = LS_stream_V_data_0_state[1'd0];

assign LS_stream_V_last_V_0_ack_in = LS_stream_V_last_V_0_state[1'd1];

assign LS_stream_V_last_V_0_load_A = (~LS_stream_V_last_V_0_sel_wr & LS_stream_V_last_V_0_state_cmp_full);

assign LS_stream_V_last_V_0_load_B = (LS_stream_V_last_V_0_state_cmp_full & LS_stream_V_last_V_0_sel_wr);

assign LS_stream_V_last_V_0_sel = LS_stream_V_last_V_0_sel_rd;

assign LS_stream_V_last_V_0_state_cmp_full = ((LS_stream_V_last_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign LS_stream_V_last_V_0_vld_in = LS_stream_TVALID;

assign LS_stream_V_last_V_0_vld_out = LS_stream_V_last_V_0_state[1'd0];

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22 = ((2'd1 == DNN_out_V_last_V_1_state) | (2'd1 == DNN_out_V_data_1_state) | ((2'd3 == DNN_out_V_last_V_1_state) & (1'b0 == DNN_out_TREADY)) | ((2'd3 == DNN_out_V_data_1_state) & (1'b0 == DNN_out_TREADY)));
end

assign ap_block_state8_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_L2_wlo_fu_461_ap_start = grp_L2_wlo_fu_461_ap_start_reg;

assign grp_L3_wlo_fu_779_ap_start = grp_L3_wlo_fu_779_ap_start_reg;

assign grp_normalize_wlo_fu_942_ap_start = grp_normalize_wlo_fu_942_ap_start_reg;

assign grp_reconstruct_complex_s_fu_960_DNN_out_TREADY = ((ap_CS_fsm_state21 & DNN_out_V_last_V_1_ack_in) | (ap_CS_fsm_state21 & DNN_out_V_data_1_ack_in));

assign grp_reconstruct_complex_s_fu_960_ap_start = grp_reconstruct_complex_s_fu_960_ap_start_reg;

assign grp_separate_complex_wlo_fu_951_LS_stream_TVALID = LS_stream_V_last_V_0_state[1'd0];

assign grp_separate_complex_wlo_fu_951_ap_start = grp_separate_complex_wlo_fu_951_ap_start_reg;

assign i_fu_1763_p2 = (i_0_i_reg_450 + 7'd1);

assign icmp_ln529_fu_1757_p2 = ((i_0_i_reg_450 == 7'd104) ? 1'b1 : 1'b0);

assign mean_o_address0 = zext_ln531_reg_2564_pp0_iter3_reg;

assign std_o_address0 = zext_ln531_fu_1769_p1;

assign zext_ln531_fu_1769_p1 = i_0_i_reg_450;

always @ (posedge ap_clk) begin
    zext_ln531_reg_2564[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln531_reg_2564_pp0_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln531_reg_2564_pp0_iter2_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln531_reg_2564_pp0_iter3_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln531_reg_2564_pp0_iter4_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln531_reg_2564_pp0_iter5_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln531_reg_2564_pp0_iter6_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln531_reg_2564_pp0_iter7_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln531_reg_2564_pp0_iter8_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln531_reg_2564_pp0_iter9_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln531_reg_2564_pp0_iter10_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //DNN_wlo
