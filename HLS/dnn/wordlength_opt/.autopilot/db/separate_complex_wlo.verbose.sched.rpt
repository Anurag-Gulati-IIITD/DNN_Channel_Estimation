

================================================================
== Vivado HLS Report for 'separate_complex_wlo'
================================================================
* Date:           Sun Jul 31 13:35:11 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        dnn
* Solution:       wordlength_opt
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.482|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   54|   54|   54|   54|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------+-----+-----+----------+-----------+-----------+------+----------+
        |              |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------+-----+-----+----------+-----------+-----------+------+----------+
        |- separation  |   52|   52|         2|          1|          1|    52|    yes   |
        +--------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %LS_stream_V_data, i1* %LS_stream_V_last_V, [5 x i8]* @p_str10, i32 0, i32 0, [5 x i8]* @p_str11, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"   --->   Operation 5 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (1.76ns)   --->   "br label %1" [dnn/dnn.cpp:480]   --->   Operation 6 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 5.22>
ST_2 : Operation 7 [1/1] (0.00ns)   --->   "%i_0 = phi i6 [ 0, %0 ], [ %i, %separation ]"   --->   Operation 7 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 8 [1/1] (1.42ns)   --->   "%icmp_ln480 = icmp eq i6 %i_0, -12" [dnn/dnn.cpp:480]   --->   Operation 8 'icmp' 'icmp_ln480' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 52, i64 52, i64 52)"   --->   Operation 9 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (1.82ns)   --->   "%i = add i6 %i_0, 1" [dnn/dnn.cpp:480]   --->   Operation 10 'add' 'i' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "br i1 %icmp_ln480, label %2, label %separation" [dnn/dnn.cpp:480]   --->   Operation 11 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%empty_9 = call { i64, i1 } @_ssdm_op_Read.axis.volatile.i64P.i1P(i64* %LS_stream_V_data, i1* %LS_stream_V_last_V)" [dnn/dnn.cpp:482]   --->   Operation 12 'read' 'empty_9' <Predicate = (!icmp_ln480)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%LS_stream_V_data_val = extractvalue { i64, i1 } %empty_9, 0" [dnn/dnn.cpp:482]   --->   Operation 13 'extractvalue' 'LS_stream_V_data_val' <Predicate = (!icmp_ln480)> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%trunc_ln16 = trunc i64 %LS_stream_V_data_val to i32" [dnn/dnn.h:16->dnn/dnn.cpp:482]   --->   Operation 14 'trunc' 'trunc_ln16' <Predicate = (!icmp_ln480)> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%bitcast_ln16 = bitcast i32 %trunc_ln16 to float" [dnn/dnn.h:16->dnn/dnn.cpp:482]   --->   Operation 15 'bitcast' 'bitcast_ln16' <Predicate = (!icmp_ln480)> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_data_M_imag_loa = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %LS_stream_V_data_val, i32 32, i32 63)" [dnn/dnn.h:16->dnn/dnn.cpp:482]   --->   Operation 16 'partselect' 'tmp_data_M_imag_loa' <Predicate = (!icmp_ln480)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%bitcast_ln16_1 = bitcast i32 %tmp_data_M_imag_loa to float" [dnn/dnn.h:16->dnn/dnn.cpp:482]   --->   Operation 17 'bitcast' 'bitcast_ln16_1' <Predicate = (!icmp_ln480)> <Delay = 0.00>
ST_2 : Operation 18 [2/2] (5.22ns)   --->   "%tmp = fptrunc float %bitcast_ln16 to half" [dnn/dnn.cpp:483]   --->   Operation 18 'sptohp' 'tmp' <Predicate = (!icmp_ln480)> <Delay = 5.22> <Core = "Float2Half">   --->   Core 94 'Float2Half' <Latency = 1> <II = 1> <Delay = 5.22> <FuncUnit> <Opcode : 'sptohp'> <InPorts = 1> <OutPorts = 1>
ST_2 : Operation 19 [2/2] (5.22ns)   --->   "%tmp_1 = fptrunc float %bitcast_ln16_1 to half" [dnn/dnn.cpp:483]   --->   Operation 19 'sptohp' 'tmp_1' <Predicate = (!icmp_ln480)> <Delay = 5.22> <Core = "Float2Half">   --->   Core 94 'Float2Half' <Latency = 1> <II = 1> <Delay = 5.22> <FuncUnit> <Opcode : 'sptohp'> <InPorts = 1> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.48>
ST_3 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln480 = zext i6 %i_0 to i7" [dnn/dnn.cpp:480]   --->   Operation 20 'zext' 'zext_ln480' <Predicate = (!icmp_ln480)> <Delay = 0.00>
ST_3 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str) nounwind" [dnn/dnn.cpp:480]   --->   Operation 21 'specloopname' <Predicate = (!icmp_ln480)> <Delay = 0.00>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str)" [dnn/dnn.cpp:480]   --->   Operation 22 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln480)> <Delay = 0.00>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [dnn/dnn.cpp:481]   --->   Operation 23 'specpipeline' <Predicate = (!icmp_ln480)> <Delay = 0.00>
ST_3 : Operation 24 [1/2] (5.22ns)   --->   "%tmp = fptrunc float %bitcast_ln16 to half" [dnn/dnn.cpp:483]   --->   Operation 24 'sptohp' 'tmp' <Predicate = (!icmp_ln480)> <Delay = 5.22> <Core = "Float2Half">   --->   Core 94 'Float2Half' <Latency = 1> <II = 1> <Delay = 5.22> <FuncUnit> <Opcode : 'sptohp'> <InPorts = 1> <OutPorts = 1>
ST_3 : Operation 25 [1/2] (5.22ns)   --->   "%tmp_1 = fptrunc float %bitcast_ln16_1 to half" [dnn/dnn.cpp:483]   --->   Operation 25 'sptohp' 'tmp_1' <Predicate = (!icmp_ln480)> <Delay = 5.22> <Core = "Float2Half">   --->   Core 94 'Float2Half' <Latency = 1> <II = 1> <Delay = 5.22> <FuncUnit> <Opcode : 'sptohp'> <InPorts = 1> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln483 = zext i6 %i_0 to i64" [dnn/dnn.cpp:483]   --->   Operation 26 'zext' 'zext_ln483' <Predicate = (!icmp_ln480)> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%sep_addr = getelementptr [104 x half]* %sep, i64 0, i64 %zext_ln483" [dnn/dnn.cpp:483]   --->   Operation 27 'getelementptr' 'sep_addr' <Predicate = (!icmp_ln480)> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (3.25ns)   --->   "store half %tmp, half* %sep_addr, align 2" [dnn/dnn.cpp:483]   --->   Operation 28 'store' <Predicate = (!icmp_ln480)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 104> <RAM>
ST_3 : Operation 29 [1/1] (1.87ns)   --->   "%add_ln484 = add i7 52, %zext_ln480" [dnn/dnn.cpp:484]   --->   Operation 29 'add' 'add_ln484' <Predicate = (!icmp_ln480)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln484 = zext i7 %add_ln484 to i64" [dnn/dnn.cpp:484]   --->   Operation 30 'zext' 'zext_ln484' <Predicate = (!icmp_ln480)> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%sep_addr_1 = getelementptr [104 x half]* %sep, i64 0, i64 %zext_ln484" [dnn/dnn.cpp:484]   --->   Operation 31 'getelementptr' 'sep_addr_1' <Predicate = (!icmp_ln480)> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (3.25ns)   --->   "store half %tmp_1, half* %sep_addr_1, align 2" [dnn/dnn.cpp:484]   --->   Operation 32 'store' <Predicate = (!icmp_ln480)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 104> <RAM>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str, i32 %tmp_2)" [dnn/dnn.cpp:485]   --->   Operation 33 'specregionend' 'empty_10' <Predicate = (!icmp_ln480)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "br label %1" [dnn/dnn.cpp:480]   --->   Operation 34 'br' <Predicate = (!icmp_ln480)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.00>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "ret void" [dnn/dnn.cpp:487]   --->   Operation 35 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', dnn/dnn.cpp:480) [7]  (1.77 ns)

 <State 2>: 5.23ns
The critical path consists of the following:
	axis read on port 'LS_stream_V_data' (dnn/dnn.cpp:482) [17]  (0 ns)
	'sptohp' operation ('tmp', dnn/dnn.cpp:483) [23]  (5.23 ns)

 <State 3>: 8.48ns
The critical path consists of the following:
	'sptohp' operation ('tmp', dnn/dnn.cpp:483) [23]  (5.23 ns)
	'store' operation ('store_ln483', dnn/dnn.cpp:483) of variable 'tmp', dnn/dnn.cpp:483 on array 'sep' [27]  (3.25 ns)

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
