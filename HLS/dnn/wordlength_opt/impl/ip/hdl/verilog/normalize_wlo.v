// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module normalize_wlo (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        LS_data_address0,
        LS_data_ce0,
        LS_data_q0,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31,
        ap_return_32,
        ap_return_33,
        ap_return_34,
        ap_return_35,
        ap_return_36,
        ap_return_37,
        ap_return_38,
        ap_return_39,
        ap_return_40,
        ap_return_41,
        ap_return_42,
        ap_return_43,
        ap_return_44,
        ap_return_45,
        ap_return_46,
        ap_return_47,
        ap_return_48,
        ap_return_49,
        ap_return_50,
        ap_return_51,
        ap_return_52,
        ap_return_53,
        ap_return_54,
        ap_return_55,
        ap_return_56,
        ap_return_57,
        ap_return_58,
        ap_return_59,
        ap_return_60,
        ap_return_61,
        ap_return_62,
        ap_return_63,
        ap_return_64,
        ap_return_65,
        ap_return_66,
        ap_return_67,
        ap_return_68,
        ap_return_69,
        ap_return_70,
        ap_return_71,
        ap_return_72,
        ap_return_73,
        ap_return_74,
        ap_return_75,
        ap_return_76,
        ap_return_77,
        ap_return_78,
        ap_return_79,
        ap_return_80,
        ap_return_81,
        ap_return_82,
        ap_return_83,
        ap_return_84,
        ap_return_85,
        ap_return_86,
        ap_return_87,
        ap_return_88,
        ap_return_89,
        ap_return_90,
        ap_return_91,
        ap_return_92,
        ap_return_93,
        ap_return_94,
        ap_return_95,
        ap_return_96,
        ap_return_97,
        ap_return_98,
        ap_return_99,
        ap_return_100,
        ap_return_101,
        ap_return_102,
        ap_return_103
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state17 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] LS_data_address0;
output   LS_data_ce0;
input  [15:0] LS_data_q0;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;
output  [15:0] ap_return_10;
output  [15:0] ap_return_11;
output  [15:0] ap_return_12;
output  [15:0] ap_return_13;
output  [15:0] ap_return_14;
output  [15:0] ap_return_15;
output  [15:0] ap_return_16;
output  [15:0] ap_return_17;
output  [15:0] ap_return_18;
output  [15:0] ap_return_19;
output  [15:0] ap_return_20;
output  [15:0] ap_return_21;
output  [15:0] ap_return_22;
output  [15:0] ap_return_23;
output  [15:0] ap_return_24;
output  [15:0] ap_return_25;
output  [15:0] ap_return_26;
output  [15:0] ap_return_27;
output  [15:0] ap_return_28;
output  [15:0] ap_return_29;
output  [15:0] ap_return_30;
output  [15:0] ap_return_31;
output  [15:0] ap_return_32;
output  [15:0] ap_return_33;
output  [15:0] ap_return_34;
output  [15:0] ap_return_35;
output  [15:0] ap_return_36;
output  [15:0] ap_return_37;
output  [15:0] ap_return_38;
output  [15:0] ap_return_39;
output  [15:0] ap_return_40;
output  [15:0] ap_return_41;
output  [15:0] ap_return_42;
output  [15:0] ap_return_43;
output  [15:0] ap_return_44;
output  [15:0] ap_return_45;
output  [15:0] ap_return_46;
output  [15:0] ap_return_47;
output  [15:0] ap_return_48;
output  [15:0] ap_return_49;
output  [15:0] ap_return_50;
output  [15:0] ap_return_51;
output  [15:0] ap_return_52;
output  [15:0] ap_return_53;
output  [15:0] ap_return_54;
output  [15:0] ap_return_55;
output  [15:0] ap_return_56;
output  [15:0] ap_return_57;
output  [15:0] ap_return_58;
output  [15:0] ap_return_59;
output  [15:0] ap_return_60;
output  [15:0] ap_return_61;
output  [15:0] ap_return_62;
output  [15:0] ap_return_63;
output  [15:0] ap_return_64;
output  [15:0] ap_return_65;
output  [15:0] ap_return_66;
output  [15:0] ap_return_67;
output  [15:0] ap_return_68;
output  [15:0] ap_return_69;
output  [15:0] ap_return_70;
output  [15:0] ap_return_71;
output  [15:0] ap_return_72;
output  [15:0] ap_return_73;
output  [15:0] ap_return_74;
output  [15:0] ap_return_75;
output  [15:0] ap_return_76;
output  [15:0] ap_return_77;
output  [15:0] ap_return_78;
output  [15:0] ap_return_79;
output  [15:0] ap_return_80;
output  [15:0] ap_return_81;
output  [15:0] ap_return_82;
output  [15:0] ap_return_83;
output  [15:0] ap_return_84;
output  [15:0] ap_return_85;
output  [15:0] ap_return_86;
output  [15:0] ap_return_87;
output  [15:0] ap_return_88;
output  [15:0] ap_return_89;
output  [15:0] ap_return_90;
output  [15:0] ap_return_91;
output  [15:0] ap_return_92;
output  [15:0] ap_return_93;
output  [15:0] ap_return_94;
output  [15:0] ap_return_95;
output  [15:0] ap_return_96;
output  [15:0] ap_return_97;
output  [15:0] ap_return_98;
output  [15:0] ap_return_99;
output  [15:0] ap_return_100;
output  [15:0] ap_return_101;
output  [15:0] ap_return_102;
output  [15:0] ap_return_103;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg LS_data_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [6:0] mean_in_address0;
reg    mean_in_ce0;
wire   [15:0] mean_in_q0;
wire   [6:0] std_in_address0;
reg    std_in_ce0;
wire   [15:0] std_in_q0;
reg   [6:0] i_0_reg_599;
wire   [0:0] icmp_ln490_fu_930_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_pp0_stage0_11001;
wire   [6:0] i_fu_936_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [5:0] lshr_ln_reg_3379;
reg   [5:0] lshr_ln_reg_3379_pp0_iter1_reg;
reg   [5:0] lshr_ln_reg_3379_pp0_iter2_reg;
reg   [5:0] lshr_ln_reg_3379_pp0_iter3_reg;
reg   [5:0] lshr_ln_reg_3379_pp0_iter4_reg;
reg   [5:0] lshr_ln_reg_3379_pp0_iter5_reg;
reg   [5:0] lshr_ln_reg_3379_pp0_iter6_reg;
reg   [5:0] lshr_ln_reg_3379_pp0_iter7_reg;
reg   [5:0] lshr_ln_reg_3379_pp0_iter8_reg;
reg   [5:0] lshr_ln_reg_3379_pp0_iter9_reg;
reg   [5:0] lshr_ln_reg_3379_pp0_iter10_reg;
reg   [5:0] lshr_ln_reg_3379_pp0_iter11_reg;
reg   [5:0] lshr_ln_reg_3379_pp0_iter12_reg;
reg   [5:0] lshr_ln_reg_3379_pp0_iter13_reg;
wire   [0:0] trunc_ln492_fu_959_p1;
reg   [0:0] trunc_ln492_reg_3383;
reg   [0:0] trunc_ln492_reg_3383_pp0_iter1_reg;
reg   [0:0] trunc_ln492_reg_3383_pp0_iter2_reg;
reg   [0:0] trunc_ln492_reg_3383_pp0_iter3_reg;
reg   [0:0] trunc_ln492_reg_3383_pp0_iter4_reg;
reg   [0:0] trunc_ln492_reg_3383_pp0_iter5_reg;
reg   [0:0] trunc_ln492_reg_3383_pp0_iter6_reg;
reg   [0:0] trunc_ln492_reg_3383_pp0_iter7_reg;
reg   [0:0] trunc_ln492_reg_3383_pp0_iter8_reg;
reg   [0:0] trunc_ln492_reg_3383_pp0_iter9_reg;
reg   [0:0] trunc_ln492_reg_3383_pp0_iter10_reg;
reg   [0:0] trunc_ln492_reg_3383_pp0_iter11_reg;
reg   [0:0] trunc_ln492_reg_3383_pp0_iter12_reg;
reg   [0:0] trunc_ln492_reg_3383_pp0_iter13_reg;
reg   [15:0] LS_data_load_reg_3491;
reg   [15:0] mean_in_load_reg_3496;
reg   [15:0] std_in_load_reg_3501;
reg   [15:0] std_in_load_reg_3501_pp0_iter2_reg;
reg   [15:0] std_in_load_reg_3501_pp0_iter3_reg;
reg   [15:0] std_in_load_reg_3501_pp0_iter4_reg;
reg   [15:0] std_in_load_reg_3501_pp0_iter5_reg;
reg   [15:0] std_in_load_reg_3501_pp0_iter6_reg;
wire   [15:0] grp_fu_610_p2;
reg   [15:0] tmp_reg_3506;
wire   [15:0] grp_fu_614_p2;
reg   [15:0] norm_data_reg_3511;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
wire   [63:0] zext_ln492_fu_942_p1;
wire    ap_block_pp0_stage0;
reg   [15:0] norm_data5158_0104_fu_144;
wire   [15:0] select_ln492_1_fu_2091_p3;
wire    ap_CS_fsm_state17;
reg   [15:0] norm_data3540_0105_fu_148;
wire   [15:0] select_ln492_73_fu_1299_p3;
reg   [15:0] norm_data51_0106_fu_152;
wire   [15:0] select_ln492_fu_2085_p3;
reg   [15:0] norm_data5057_0107_fu_156;
wire   [15:0] select_ln492_103_fu_969_p3;
reg   [15:0] norm_data3541_0108_fu_160;
wire   [15:0] select_ln492_72_fu_1293_p3;
reg   [15:0] norm_data50_0109_fu_164;
wire   [15:0] select_ln492_102_fu_963_p3;
reg   [15:0] norm_data4956_0110_fu_168;
wire   [15:0] select_ln492_101_fu_991_p3;
reg   [15:0] norm_data36_0111_fu_172;
wire   [15:0] select_ln492_75_fu_1277_p3;
reg   [15:0] norm_data49_0112_fu_176;
wire   [15:0] select_ln492_100_fu_985_p3;
reg   [15:0] norm_data4855_0113_fu_180;
wire   [15:0] select_ln492_99_fu_1013_p3;
reg   [15:0] norm_data3642_0114_fu_184;
wire   [15:0] select_ln492_74_fu_1271_p3;
reg   [15:0] norm_data48_0115_fu_188;
wire   [15:0] select_ln492_98_fu_1007_p3;
reg   [15:0] norm_data4754_0116_fu_192;
wire   [15:0] select_ln492_97_fu_1035_p3;
reg   [15:0] norm_data37_0117_fu_196;
wire   [15:0] select_ln492_77_fu_1255_p3;
reg   [15:0] norm_data47_0118_fu_200;
wire   [15:0] select_ln492_96_fu_1029_p3;
reg   [15:0] norm_data4653_0119_fu_204;
wire   [15:0] select_ln492_95_fu_1057_p3;
reg   [15:0] norm_data3743_0120_fu_208;
wire   [15:0] select_ln492_76_fu_1249_p3;
reg   [15:0] norm_data4652_0121_fu_212;
wire   [15:0] select_ln492_94_fu_1051_p3;
reg   [15:0] norm_data4551_0122_fu_216;
wire   [15:0] select_ln492_93_fu_1079_p3;
reg   [15:0] norm_data38_0123_fu_220;
wire   [15:0] select_ln492_79_fu_1233_p3;
reg   [15:0] norm_data45_0124_fu_224;
wire   [15:0] select_ln492_92_fu_1073_p3;
reg   [15:0] norm_data4450_0125_fu_228;
wire   [15:0] select_ln492_91_fu_1101_p3;
reg   [15:0] norm_data3844_0126_fu_232;
wire   [15:0] select_ln492_78_fu_1227_p3;
reg   [15:0] norm_data44_0127_fu_236;
wire   [15:0] select_ln492_90_fu_1095_p3;
reg   [15:0] norm_data4349_0128_fu_240;
wire   [15:0] select_ln492_89_fu_1123_p3;
reg   [15:0] norm_data39_0129_fu_244;
wire   [15:0] select_ln492_81_fu_1211_p3;
reg   [15:0] norm_data43_0130_fu_248;
wire   [15:0] select_ln492_88_fu_1117_p3;
reg   [15:0] norm_data4248_0131_fu_252;
wire   [15:0] select_ln492_87_fu_1145_p3;
reg   [15:0] norm_data3945_0132_fu_256;
wire   [15:0] select_ln492_80_fu_1205_p3;
reg   [15:0] norm_data42_0133_fu_260;
wire   [15:0] select_ln492_86_fu_1139_p3;
reg   [15:0] norm_data4147_0134_fu_264;
wire   [15:0] select_ln492_85_fu_1167_p3;
reg   [15:0] norm_data40_0135_fu_268;
wire   [15:0] select_ln492_83_fu_1189_p3;
reg   [15:0] norm_data41_0136_fu_272;
wire   [15:0] select_ln492_84_fu_1161_p3;
reg   [15:0] norm_data4046_0137_fu_276;
wire   [15:0] select_ln492_82_fu_1183_p3;
reg   [15:0] norm_data3439_0138_fu_280;
wire   [15:0] select_ln492_71_fu_1321_p3;
reg   [15:0] norm_data18_0139_fu_284;
wire   [15:0] select_ln492_39_fu_1673_p3;
reg   [15:0] norm_data34_0140_fu_288;
wire   [15:0] select_ln492_70_fu_1315_p3;
reg   [15:0] norm_data3338_0141_fu_292;
wire   [15:0] select_ln492_69_fu_1343_p3;
reg   [15:0] norm_data1822_0142_fu_296;
wire   [15:0] select_ln492_38_fu_1667_p3;
reg   [15:0] norm_data33_0143_fu_300;
wire   [15:0] select_ln492_68_fu_1337_p3;
reg   [15:0] norm_data3237_0144_fu_304;
wire   [15:0] select_ln492_67_fu_1365_p3;
reg   [15:0] norm_data19_0145_fu_308;
wire   [15:0] select_ln492_41_fu_1651_p3;
reg   [15:0] norm_data32_0146_fu_312;
wire   [15:0] select_ln492_66_fu_1359_p3;
reg   [15:0] norm_data3136_0147_fu_316;
wire   [15:0] select_ln492_65_fu_1387_p3;
reg   [15:0] norm_data1923_0148_fu_320;
wire   [15:0] select_ln492_40_fu_1645_p3;
reg   [15:0] norm_data31_0149_fu_324;
wire   [15:0] select_ln492_64_fu_1381_p3;
reg   [15:0] norm_data3035_0150_fu_328;
wire   [15:0] select_ln492_63_fu_1409_p3;
reg   [15:0] norm_data20_0151_fu_332;
wire   [15:0] select_ln492_43_fu_1629_p3;
reg   [15:0] norm_data30_0152_fu_336;
wire   [15:0] select_ln492_62_fu_1403_p3;
reg   [15:0] norm_data2934_0153_fu_340;
wire   [15:0] select_ln492_61_fu_1431_p3;
reg   [15:0] norm_data2024_0154_fu_344;
wire   [15:0] select_ln492_42_fu_1623_p3;
reg   [15:0] norm_data29_0155_fu_348;
wire   [15:0] select_ln492_60_fu_1425_p3;
reg   [15:0] norm_data2833_0156_fu_352;
wire   [15:0] select_ln492_59_fu_1453_p3;
reg   [15:0] norm_data21_0157_fu_356;
wire   [15:0] select_ln492_45_fu_1607_p3;
reg   [15:0] norm_data28_0158_fu_360;
wire   [15:0] select_ln492_58_fu_1447_p3;
reg   [15:0] norm_data2732_0159_fu_364;
wire   [15:0] select_ln492_57_fu_1475_p3;
reg   [15:0] norm_data2125_0160_fu_368;
wire   [15:0] select_ln492_44_fu_1601_p3;
reg   [15:0] norm_data27_0161_fu_372;
wire   [15:0] select_ln492_56_fu_1469_p3;
reg   [15:0] norm_data2631_0162_fu_376;
wire   [15:0] select_ln492_55_fu_1497_p3;
reg   [15:0] norm_data22_0163_fu_380;
wire   [15:0] select_ln492_47_fu_1585_p3;
reg   [15:0] norm_data26_0164_fu_384;
wire   [15:0] select_ln492_54_fu_1491_p3;
reg   [15:0] norm_data2530_0165_fu_388;
wire   [15:0] select_ln492_53_fu_1519_p3;
reg   [15:0] norm_data2226_0166_fu_392;
wire   [15:0] select_ln492_46_fu_1579_p3;
reg   [15:0] norm_data25_0167_fu_396;
wire   [15:0] select_ln492_52_fu_1513_p3;
reg   [15:0] norm_data2429_0168_fu_400;
wire   [15:0] select_ln492_51_fu_1541_p3;
reg   [15:0] norm_data23_0169_fu_404;
wire   [15:0] select_ln492_49_fu_1563_p3;
reg   [15:0] norm_data2428_0170_fu_408;
wire   [15:0] select_ln492_50_fu_1535_p3;
reg   [15:0] norm_data2327_0171_fu_412;
wire   [15:0] select_ln492_48_fu_1557_p3;
reg   [15:0] norm_data1721_0172_fu_416;
wire   [15:0] select_ln492_37_fu_1695_p3;
reg   [15:0] norm_data13_0173_fu_420;
wire   [15:0] select_ln492_5_fu_2047_p3;
reg   [15:0] norm_data17_0174_fu_424;
wire   [15:0] select_ln492_36_fu_1689_p3;
reg   [15:0] norm_data1620_0175_fu_428;
wire   [15:0] select_ln492_35_fu_1717_p3;
reg   [15:0] norm_data2_0176_fu_432;
wire   [15:0] select_ln492_7_fu_2025_p3;
reg   [15:0] norm_data16103_0177_fu_436;
wire   [15:0] select_ln492_34_fu_1711_p3;
reg   [15:0] norm_data1519_0178_fu_440;
wire   [15:0] select_ln492_33_fu_1739_p3;
reg   [15:0] norm_data24_0179_fu_444;
wire   [15:0] select_ln492_6_fu_2019_p3;
reg   [15:0] norm_data1595_0180_fu_448;
wire   [15:0] select_ln492_32_fu_1733_p3;
reg   [15:0] norm_data1418_0181_fu_452;
wire   [15:0] select_ln492_31_fu_1761_p3;
reg   [15:0] norm_data3_0182_fu_456;
wire   [15:0] select_ln492_9_fu_2003_p3;
reg   [15:0] norm_data14_0183_fu_460;
wire   [15:0] select_ln492_30_fu_1755_p3;
reg   [15:0] norm_data1317_0184_fu_464;
wire   [15:0] select_ln492_29_fu_1783_p3;
reg   [15:0] norm_data35_0185_fu_468;
wire   [15:0] select_ln492_8_fu_1997_p3;
reg   [15:0] norm_data1316_0186_fu_472;
wire   [15:0] select_ln492_28_fu_1777_p3;
reg   [15:0] norm_data1215_0187_fu_476;
wire   [15:0] select_ln492_27_fu_1805_p3;
reg   [15:0] norm_data4_0188_fu_480;
wire   [15:0] select_ln492_11_fu_1981_p3;
reg   [15:0] norm_data1214_0189_fu_484;
wire   [15:0] select_ln492_26_fu_1799_p3;
reg   [15:0] norm_data1113_0190_fu_488;
wire   [15:0] select_ln492_25_fu_1827_p3;
reg   [15:0] norm_data46_0191_fu_492;
wire   [15:0] select_ln492_10_fu_1975_p3;
reg   [15:0] norm_data11_0192_fu_496;
wire   [15:0] select_ln492_24_fu_1821_p3;
reg   [15:0] norm_data1012_0193_fu_500;
wire   [15:0] select_ln492_23_fu_1849_p3;
reg   [15:0] norm_data5_0194_fu_504;
wire   [15:0] select_ln492_13_fu_1959_p3;
reg   [15:0] norm_data10_0195_fu_508;
wire   [15:0] select_ln492_22_fu_1843_p3;
reg   [15:0] norm_data911_0196_fu_512;
wire   [15:0] select_ln492_21_fu_1871_p3;
reg   [15:0] norm_data57_0197_fu_516;
wire   [15:0] select_ln492_12_fu_1953_p3;
reg   [15:0] norm_data9_0198_fu_520;
wire   [15:0] select_ln492_20_fu_1865_p3;
reg   [15:0] norm_data810_0199_fu_524;
wire   [15:0] select_ln492_19_fu_1893_p3;
reg   [15:0] norm_data6_0200_fu_528;
wire   [15:0] select_ln492_15_fu_1937_p3;
reg   [15:0] norm_data8_0201_fu_532;
wire   [15:0] select_ln492_18_fu_1887_p3;
reg   [15:0] norm_data79_0202_fu_536;
wire   [15:0] select_ln492_17_fu_1915_p3;
reg   [15:0] norm_data68_0203_fu_540;
wire   [15:0] select_ln492_14_fu_1931_p3;
reg   [15:0] norm_data7_0204_fu_544;
wire   [15:0] select_ln492_16_fu_1909_p3;
reg   [15:0] norm_data12_0205_fu_548;
wire   [15:0] select_ln492_4_fu_2041_p3;
reg   [15:0] norm_data16_0206_fu_552;
wire   [15:0] select_ln492_3_fu_2069_p3;
reg   [15:0] norm_data_0207_fu_556;
wire   [15:0] select_ln492_2_fu_2063_p3;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
end

normalize_wlo_meacud #(
    .DataWidth( 16 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
mean_in_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mean_in_address0),
    .ce0(mean_in_ce0),
    .q0(mean_in_q0)
);

normalize_wlo_stddEe #(
    .DataWidth( 16 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
std_in_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(std_in_address0),
    .ce0(std_in_ce0),
    .q0(std_in_q0)
);

DNN_wlo_hsub_16nseOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
DNN_wlo_hsub_16nseOg_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(LS_data_load_reg_3491),
    .din1(mean_in_load_reg_3496),
    .ce(1'b1),
    .dout(grp_fu_610_p2)
);

DNN_wlo_hdiv_16nsfYi #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
DNN_wlo_hdiv_16nsfYi_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_3506),
    .din1(std_in_load_reg_3501_pp0_iter6_reg),
    .ce(1'b1),
    .dout(grp_fu_614_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter14 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln490_fu_930_p2 == 1'd0))) begin
        i_0_reg_599 <= i_fu_936_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_599 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LS_data_load_reg_3491 <= LS_data_q0;
        lshr_ln_reg_3379_pp0_iter1_reg <= lshr_ln_reg_3379;
        mean_in_load_reg_3496 <= mean_in_q0;
        std_in_load_reg_3501 <= std_in_q0;
        trunc_ln492_reg_3383_pp0_iter1_reg <= trunc_ln492_reg_3383;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln490_fu_930_p2 == 1'd0))) begin
        lshr_ln_reg_3379 <= {{i_0_reg_599[6:1]}};
        trunc_ln492_reg_3383 <= trunc_ln492_fu_959_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        lshr_ln_reg_3379_pp0_iter10_reg <= lshr_ln_reg_3379_pp0_iter9_reg;
        lshr_ln_reg_3379_pp0_iter11_reg <= lshr_ln_reg_3379_pp0_iter10_reg;
        lshr_ln_reg_3379_pp0_iter12_reg <= lshr_ln_reg_3379_pp0_iter11_reg;
        lshr_ln_reg_3379_pp0_iter13_reg <= lshr_ln_reg_3379_pp0_iter12_reg;
        lshr_ln_reg_3379_pp0_iter2_reg <= lshr_ln_reg_3379_pp0_iter1_reg;
        lshr_ln_reg_3379_pp0_iter3_reg <= lshr_ln_reg_3379_pp0_iter2_reg;
        lshr_ln_reg_3379_pp0_iter4_reg <= lshr_ln_reg_3379_pp0_iter3_reg;
        lshr_ln_reg_3379_pp0_iter5_reg <= lshr_ln_reg_3379_pp0_iter4_reg;
        lshr_ln_reg_3379_pp0_iter6_reg <= lshr_ln_reg_3379_pp0_iter5_reg;
        lshr_ln_reg_3379_pp0_iter7_reg <= lshr_ln_reg_3379_pp0_iter6_reg;
        lshr_ln_reg_3379_pp0_iter8_reg <= lshr_ln_reg_3379_pp0_iter7_reg;
        lshr_ln_reg_3379_pp0_iter9_reg <= lshr_ln_reg_3379_pp0_iter8_reg;
        norm_data_reg_3511 <= grp_fu_614_p2;
        std_in_load_reg_3501_pp0_iter2_reg <= std_in_load_reg_3501;
        std_in_load_reg_3501_pp0_iter3_reg <= std_in_load_reg_3501_pp0_iter2_reg;
        std_in_load_reg_3501_pp0_iter4_reg <= std_in_load_reg_3501_pp0_iter3_reg;
        std_in_load_reg_3501_pp0_iter5_reg <= std_in_load_reg_3501_pp0_iter4_reg;
        std_in_load_reg_3501_pp0_iter6_reg <= std_in_load_reg_3501_pp0_iter5_reg;
        tmp_reg_3506 <= grp_fu_610_p2;
        trunc_ln492_reg_3383_pp0_iter10_reg <= trunc_ln492_reg_3383_pp0_iter9_reg;
        trunc_ln492_reg_3383_pp0_iter11_reg <= trunc_ln492_reg_3383_pp0_iter10_reg;
        trunc_ln492_reg_3383_pp0_iter12_reg <= trunc_ln492_reg_3383_pp0_iter11_reg;
        trunc_ln492_reg_3383_pp0_iter13_reg <= trunc_ln492_reg_3383_pp0_iter12_reg;
        trunc_ln492_reg_3383_pp0_iter2_reg <= trunc_ln492_reg_3383_pp0_iter1_reg;
        trunc_ln492_reg_3383_pp0_iter3_reg <= trunc_ln492_reg_3383_pp0_iter2_reg;
        trunc_ln492_reg_3383_pp0_iter4_reg <= trunc_ln492_reg_3383_pp0_iter3_reg;
        trunc_ln492_reg_3383_pp0_iter5_reg <= trunc_ln492_reg_3383_pp0_iter4_reg;
        trunc_ln492_reg_3383_pp0_iter6_reg <= trunc_ln492_reg_3383_pp0_iter5_reg;
        trunc_ln492_reg_3383_pp0_iter7_reg <= trunc_ln492_reg_3383_pp0_iter6_reg;
        trunc_ln492_reg_3383_pp0_iter8_reg <= trunc_ln492_reg_3383_pp0_iter7_reg;
        trunc_ln492_reg_3383_pp0_iter9_reg <= trunc_ln492_reg_3383_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd10) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data1012_0193_fu_500 <= select_ln492_23_fu_1849_p3;
        norm_data10_0195_fu_508 <= select_ln492_22_fu_1843_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd11) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data1113_0190_fu_488 <= select_ln492_25_fu_1827_p3;
        norm_data11_0192_fu_496 <= select_ln492_24_fu_1821_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd12) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data1214_0189_fu_484 <= select_ln492_26_fu_1799_p3;
        norm_data1215_0187_fu_476 <= select_ln492_27_fu_1805_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd1) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data12_0205_fu_548 <= select_ln492_4_fu_2041_p3;
        norm_data13_0173_fu_420 <= select_ln492_5_fu_2047_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd13) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data1316_0186_fu_472 <= select_ln492_28_fu_1777_p3;
        norm_data1317_0184_fu_464 <= select_ln492_29_fu_1783_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd14) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data1418_0181_fu_452 <= select_ln492_31_fu_1761_p3;
        norm_data14_0183_fu_460 <= select_ln492_30_fu_1755_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd15) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data1519_0178_fu_440 <= select_ln492_33_fu_1739_p3;
        norm_data1595_0180_fu_448 <= select_ln492_32_fu_1733_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd16) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data16103_0177_fu_436 <= select_ln492_34_fu_1711_p3;
        norm_data1620_0175_fu_428 <= select_ln492_35_fu_1717_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data16_0206_fu_552 <= select_ln492_3_fu_2069_p3;
        norm_data_0207_fu_556 <= select_ln492_2_fu_2063_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd17) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data1721_0172_fu_416 <= select_ln492_37_fu_1695_p3;
        norm_data17_0174_fu_424 <= select_ln492_36_fu_1689_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd18) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data1822_0142_fu_296 <= select_ln492_38_fu_1667_p3;
        norm_data18_0139_fu_284 <= select_ln492_39_fu_1673_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd19) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data1923_0148_fu_320 <= select_ln492_40_fu_1645_p3;
        norm_data19_0145_fu_308 <= select_ln492_41_fu_1651_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd20) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data2024_0154_fu_344 <= select_ln492_42_fu_1623_p3;
        norm_data20_0151_fu_332 <= select_ln492_43_fu_1629_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd21) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data2125_0160_fu_368 <= select_ln492_44_fu_1601_p3;
        norm_data21_0157_fu_356 <= select_ln492_45_fu_1607_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd22) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data2226_0166_fu_392 <= select_ln492_46_fu_1579_p3;
        norm_data22_0163_fu_380 <= select_ln492_47_fu_1585_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd23) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data2327_0171_fu_412 <= select_ln492_48_fu_1557_p3;
        norm_data23_0169_fu_404 <= select_ln492_49_fu_1563_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd24) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data2428_0170_fu_408 <= select_ln492_50_fu_1535_p3;
        norm_data2429_0168_fu_400 <= select_ln492_51_fu_1541_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd2) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data24_0179_fu_444 <= select_ln492_6_fu_2019_p3;
        norm_data2_0176_fu_432 <= select_ln492_7_fu_2025_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd25) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data2530_0165_fu_388 <= select_ln492_53_fu_1519_p3;
        norm_data25_0167_fu_396 <= select_ln492_52_fu_1513_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd26) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data2631_0162_fu_376 <= select_ln492_55_fu_1497_p3;
        norm_data26_0164_fu_384 <= select_ln492_54_fu_1491_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd27) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data2732_0159_fu_364 <= select_ln492_57_fu_1475_p3;
        norm_data27_0161_fu_372 <= select_ln492_56_fu_1469_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd28) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data2833_0156_fu_352 <= select_ln492_59_fu_1453_p3;
        norm_data28_0158_fu_360 <= select_ln492_58_fu_1447_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd29) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data2934_0153_fu_340 <= select_ln492_61_fu_1431_p3;
        norm_data29_0155_fu_348 <= select_ln492_60_fu_1425_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd30) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data3035_0150_fu_328 <= select_ln492_63_fu_1409_p3;
        norm_data30_0152_fu_336 <= select_ln492_62_fu_1403_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd31) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data3136_0147_fu_316 <= select_ln492_65_fu_1387_p3;
        norm_data31_0149_fu_324 <= select_ln492_64_fu_1381_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd32) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data3237_0144_fu_304 <= select_ln492_67_fu_1365_p3;
        norm_data32_0146_fu_312 <= select_ln492_66_fu_1359_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd33) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data3338_0141_fu_292 <= select_ln492_69_fu_1343_p3;
        norm_data33_0143_fu_300 <= select_ln492_68_fu_1337_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd34) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data3439_0138_fu_280 <= select_ln492_71_fu_1321_p3;
        norm_data34_0140_fu_288 <= select_ln492_70_fu_1315_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd35) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data3540_0105_fu_148 <= select_ln492_73_fu_1299_p3;
        norm_data3541_0108_fu_160 <= select_ln492_72_fu_1293_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd3) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data35_0185_fu_468 <= select_ln492_8_fu_1997_p3;
        norm_data3_0182_fu_456 <= select_ln492_9_fu_2003_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd36) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data3642_0114_fu_184 <= select_ln492_74_fu_1271_p3;
        norm_data36_0111_fu_172 <= select_ln492_75_fu_1277_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd37) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data3743_0120_fu_208 <= select_ln492_76_fu_1249_p3;
        norm_data37_0117_fu_196 <= select_ln492_77_fu_1255_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd38) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data3844_0126_fu_232 <= select_ln492_78_fu_1227_p3;
        norm_data38_0123_fu_220 <= select_ln492_79_fu_1233_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd39) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data3945_0132_fu_256 <= select_ln492_80_fu_1205_p3;
        norm_data39_0129_fu_244 <= select_ln492_81_fu_1211_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd40) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data4046_0137_fu_276 <= select_ln492_82_fu_1183_p3;
        norm_data40_0135_fu_268 <= select_ln492_83_fu_1189_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd41) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data4147_0134_fu_264 <= select_ln492_85_fu_1167_p3;
        norm_data41_0136_fu_272 <= select_ln492_84_fu_1161_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd42) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data4248_0131_fu_252 <= select_ln492_87_fu_1145_p3;
        norm_data42_0133_fu_260 <= select_ln492_86_fu_1139_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd43) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data4349_0128_fu_240 <= select_ln492_89_fu_1123_p3;
        norm_data43_0130_fu_248 <= select_ln492_88_fu_1117_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd44) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data4450_0125_fu_228 <= select_ln492_91_fu_1101_p3;
        norm_data44_0127_fu_236 <= select_ln492_90_fu_1095_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd45) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data4551_0122_fu_216 <= select_ln492_93_fu_1079_p3;
        norm_data45_0124_fu_224 <= select_ln492_92_fu_1073_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd46) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data4652_0121_fu_212 <= select_ln492_94_fu_1051_p3;
        norm_data4653_0119_fu_204 <= select_ln492_95_fu_1057_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd4) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data46_0191_fu_492 <= select_ln492_10_fu_1975_p3;
        norm_data4_0188_fu_480 <= select_ln492_11_fu_1981_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd47) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data4754_0116_fu_192 <= select_ln492_97_fu_1035_p3;
        norm_data47_0118_fu_200 <= select_ln492_96_fu_1029_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd48) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data4855_0113_fu_180 <= select_ln492_99_fu_1013_p3;
        norm_data48_0115_fu_188 <= select_ln492_98_fu_1007_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd49) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data4956_0110_fu_168 <= select_ln492_101_fu_991_p3;
        norm_data49_0112_fu_176 <= select_ln492_100_fu_985_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd50) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data5057_0107_fu_156 <= select_ln492_103_fu_969_p3;
        norm_data50_0109_fu_164 <= select_ln492_102_fu_963_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & ((lshr_ln_reg_3379_pp0_iter13_reg == 6'd51) | ((lshr_ln_reg_3379_pp0_iter13_reg == 6'd52) | ((lshr_ln_reg_3379_pp0_iter13_reg == 6'd53) | ((lshr_ln_reg_3379_pp0_iter13_reg == 6'd54) | ((lshr_ln_reg_3379_pp0_iter13_reg == 6'd55) | ((lshr_ln_reg_3379_pp0_iter13_reg == 6'd56) | ((lshr_ln_reg_3379_pp0_iter13_reg == 6'd57) | ((lshr_ln_reg_3379_pp0_iter13_reg == 6'd58) | ((lshr_ln_reg_3379_pp0_iter13_reg == 6'd59) | ((lshr_ln_reg_3379_pp0_iter13_reg == 6'd60) | ((lshr_ln_reg_3379_pp0_iter13_reg == 6'd61) | ((lshr_ln_reg_3379_pp0_iter13_reg == 6'd62) | (lshr_ln_reg_3379_pp0_iter13_reg == 6'd63))))))))))))))) begin
        norm_data5158_0104_fu_144 <= select_ln492_1_fu_2091_p3;
        norm_data51_0106_fu_152 <= select_ln492_fu_2085_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd5) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data57_0197_fu_516 <= select_ln492_12_fu_1953_p3;
        norm_data5_0194_fu_504 <= select_ln492_13_fu_1959_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd6) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data68_0203_fu_540 <= select_ln492_14_fu_1931_p3;
        norm_data6_0200_fu_528 <= select_ln492_15_fu_1937_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd7) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data79_0202_fu_536 <= select_ln492_17_fu_1915_p3;
        norm_data7_0204_fu_544 <= select_ln492_16_fu_1909_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd8) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data810_0199_fu_524 <= select_ln492_19_fu_1893_p3;
        norm_data8_0201_fu_532 <= select_ln492_18_fu_1887_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((lshr_ln_reg_3379_pp0_iter13_reg == 6'd9) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        norm_data911_0196_fu_512 <= select_ln492_21_fu_1871_p3;
        norm_data9_0198_fu_520 <= select_ln492_20_fu_1865_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LS_data_ce0 = 1'b1;
    end else begin
        LS_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln490_fu_930_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mean_in_ce0 = 1'b1;
    end else begin
        mean_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        std_in_ce0 = 1'b1;
    end else begin
        std_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln490_fu_930_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter13 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter14 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter13 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter14 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln490_fu_930_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LS_data_address0 = zext_ln492_fu_942_p1;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = norm_data_0207_fu_556;

assign ap_return_1 = norm_data16_0206_fu_552;

assign ap_return_10 = norm_data5_0194_fu_504;

assign ap_return_100 = norm_data50_0109_fu_164;

assign ap_return_101 = norm_data5057_0107_fu_156;

assign ap_return_102 = norm_data51_0106_fu_152;

assign ap_return_103 = norm_data5158_0104_fu_144;

assign ap_return_11 = norm_data57_0197_fu_516;

assign ap_return_12 = norm_data6_0200_fu_528;

assign ap_return_13 = norm_data68_0203_fu_540;

assign ap_return_14 = norm_data7_0204_fu_544;

assign ap_return_15 = norm_data79_0202_fu_536;

assign ap_return_16 = norm_data8_0201_fu_532;

assign ap_return_17 = norm_data810_0199_fu_524;

assign ap_return_18 = norm_data9_0198_fu_520;

assign ap_return_19 = norm_data911_0196_fu_512;

assign ap_return_2 = norm_data12_0205_fu_548;

assign ap_return_20 = norm_data10_0195_fu_508;

assign ap_return_21 = norm_data1012_0193_fu_500;

assign ap_return_22 = norm_data11_0192_fu_496;

assign ap_return_23 = norm_data1113_0190_fu_488;

assign ap_return_24 = norm_data1214_0189_fu_484;

assign ap_return_25 = norm_data1215_0187_fu_476;

assign ap_return_26 = norm_data1316_0186_fu_472;

assign ap_return_27 = norm_data1317_0184_fu_464;

assign ap_return_28 = norm_data14_0183_fu_460;

assign ap_return_29 = norm_data1418_0181_fu_452;

assign ap_return_3 = norm_data13_0173_fu_420;

assign ap_return_30 = norm_data1595_0180_fu_448;

assign ap_return_31 = norm_data1519_0178_fu_440;

assign ap_return_32 = norm_data16103_0177_fu_436;

assign ap_return_33 = norm_data1620_0175_fu_428;

assign ap_return_34 = norm_data17_0174_fu_424;

assign ap_return_35 = norm_data1721_0172_fu_416;

assign ap_return_36 = norm_data18_0139_fu_284;

assign ap_return_37 = norm_data1822_0142_fu_296;

assign ap_return_38 = norm_data19_0145_fu_308;

assign ap_return_39 = norm_data1923_0148_fu_320;

assign ap_return_4 = norm_data2_0176_fu_432;

assign ap_return_40 = norm_data20_0151_fu_332;

assign ap_return_41 = norm_data2024_0154_fu_344;

assign ap_return_42 = norm_data21_0157_fu_356;

assign ap_return_43 = norm_data2125_0160_fu_368;

assign ap_return_44 = norm_data22_0163_fu_380;

assign ap_return_45 = norm_data2226_0166_fu_392;

assign ap_return_46 = norm_data23_0169_fu_404;

assign ap_return_47 = norm_data2327_0171_fu_412;

assign ap_return_48 = norm_data2428_0170_fu_408;

assign ap_return_49 = norm_data2429_0168_fu_400;

assign ap_return_5 = norm_data24_0179_fu_444;

assign ap_return_50 = norm_data25_0167_fu_396;

assign ap_return_51 = norm_data2530_0165_fu_388;

assign ap_return_52 = norm_data26_0164_fu_384;

assign ap_return_53 = norm_data2631_0162_fu_376;

assign ap_return_54 = norm_data27_0161_fu_372;

assign ap_return_55 = norm_data2732_0159_fu_364;

assign ap_return_56 = norm_data28_0158_fu_360;

assign ap_return_57 = norm_data2833_0156_fu_352;

assign ap_return_58 = norm_data29_0155_fu_348;

assign ap_return_59 = norm_data2934_0153_fu_340;

assign ap_return_6 = norm_data3_0182_fu_456;

assign ap_return_60 = norm_data30_0152_fu_336;

assign ap_return_61 = norm_data3035_0150_fu_328;

assign ap_return_62 = norm_data31_0149_fu_324;

assign ap_return_63 = norm_data3136_0147_fu_316;

assign ap_return_64 = norm_data32_0146_fu_312;

assign ap_return_65 = norm_data3237_0144_fu_304;

assign ap_return_66 = norm_data33_0143_fu_300;

assign ap_return_67 = norm_data3338_0141_fu_292;

assign ap_return_68 = norm_data34_0140_fu_288;

assign ap_return_69 = norm_data3439_0138_fu_280;

assign ap_return_7 = norm_data35_0185_fu_468;

assign ap_return_70 = norm_data3540_0105_fu_148;

assign ap_return_71 = norm_data3541_0108_fu_160;

assign ap_return_72 = norm_data36_0111_fu_172;

assign ap_return_73 = norm_data3642_0114_fu_184;

assign ap_return_74 = norm_data37_0117_fu_196;

assign ap_return_75 = norm_data3743_0120_fu_208;

assign ap_return_76 = norm_data38_0123_fu_220;

assign ap_return_77 = norm_data3844_0126_fu_232;

assign ap_return_78 = norm_data39_0129_fu_244;

assign ap_return_79 = norm_data3945_0132_fu_256;

assign ap_return_8 = norm_data4_0188_fu_480;

assign ap_return_80 = norm_data40_0135_fu_268;

assign ap_return_81 = norm_data4046_0137_fu_276;

assign ap_return_82 = norm_data41_0136_fu_272;

assign ap_return_83 = norm_data4147_0134_fu_264;

assign ap_return_84 = norm_data42_0133_fu_260;

assign ap_return_85 = norm_data4248_0131_fu_252;

assign ap_return_86 = norm_data43_0130_fu_248;

assign ap_return_87 = norm_data4349_0128_fu_240;

assign ap_return_88 = norm_data44_0127_fu_236;

assign ap_return_89 = norm_data4450_0125_fu_228;

assign ap_return_9 = norm_data46_0191_fu_492;

assign ap_return_90 = norm_data45_0124_fu_224;

assign ap_return_91 = norm_data4551_0122_fu_216;

assign ap_return_92 = norm_data4652_0121_fu_212;

assign ap_return_93 = norm_data4653_0119_fu_204;

assign ap_return_94 = norm_data47_0118_fu_200;

assign ap_return_95 = norm_data4754_0116_fu_192;

assign ap_return_96 = norm_data48_0115_fu_188;

assign ap_return_97 = norm_data4855_0113_fu_180;

assign ap_return_98 = norm_data49_0112_fu_176;

assign ap_return_99 = norm_data4956_0110_fu_168;

assign i_fu_936_p2 = (i_0_reg_599 + 7'd1);

assign icmp_ln490_fu_930_p2 = ((i_0_reg_599 == 7'd104) ? 1'b1 : 1'b0);

assign mean_in_address0 = zext_ln492_fu_942_p1;

assign select_ln492_100_fu_985_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data49_0112_fu_176 : norm_data_reg_3511);

assign select_ln492_101_fu_991_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data4956_0110_fu_168);

assign select_ln492_102_fu_963_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data50_0109_fu_164 : norm_data_reg_3511);

assign select_ln492_103_fu_969_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data5057_0107_fu_156);

assign select_ln492_10_fu_1975_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data46_0191_fu_492);

assign select_ln492_11_fu_1981_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data4_0188_fu_480 : norm_data_reg_3511);

assign select_ln492_12_fu_1953_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data57_0197_fu_516);

assign select_ln492_13_fu_1959_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data5_0194_fu_504 : norm_data_reg_3511);

assign select_ln492_14_fu_1931_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data68_0203_fu_540);

assign select_ln492_15_fu_1937_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data6_0200_fu_528 : norm_data_reg_3511);

assign select_ln492_16_fu_1909_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data7_0204_fu_544 : norm_data_reg_3511);

assign select_ln492_17_fu_1915_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data79_0202_fu_536);

assign select_ln492_18_fu_1887_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data8_0201_fu_532 : norm_data_reg_3511);

assign select_ln492_19_fu_1893_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data810_0199_fu_524);

assign select_ln492_1_fu_2091_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data5158_0104_fu_144);

assign select_ln492_20_fu_1865_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data9_0198_fu_520 : norm_data_reg_3511);

assign select_ln492_21_fu_1871_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data911_0196_fu_512);

assign select_ln492_22_fu_1843_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data10_0195_fu_508 : norm_data_reg_3511);

assign select_ln492_23_fu_1849_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data1012_0193_fu_500);

assign select_ln492_24_fu_1821_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data11_0192_fu_496 : norm_data_reg_3511);

assign select_ln492_25_fu_1827_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data1113_0190_fu_488);

assign select_ln492_26_fu_1799_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data1214_0189_fu_484 : norm_data_reg_3511);

assign select_ln492_27_fu_1805_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data1215_0187_fu_476);

assign select_ln492_28_fu_1777_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data1316_0186_fu_472 : norm_data_reg_3511);

assign select_ln492_29_fu_1783_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data1317_0184_fu_464);

assign select_ln492_2_fu_2063_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_0207_fu_556 : norm_data_reg_3511);

assign select_ln492_30_fu_1755_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data14_0183_fu_460 : norm_data_reg_3511);

assign select_ln492_31_fu_1761_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data1418_0181_fu_452);

assign select_ln492_32_fu_1733_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data1595_0180_fu_448 : norm_data_reg_3511);

assign select_ln492_33_fu_1739_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data1519_0178_fu_440);

assign select_ln492_34_fu_1711_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data16103_0177_fu_436 : norm_data_reg_3511);

assign select_ln492_35_fu_1717_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data1620_0175_fu_428);

assign select_ln492_36_fu_1689_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data17_0174_fu_424 : norm_data_reg_3511);

assign select_ln492_37_fu_1695_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data1721_0172_fu_416);

assign select_ln492_38_fu_1667_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data1822_0142_fu_296);

assign select_ln492_39_fu_1673_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data18_0139_fu_284 : norm_data_reg_3511);

assign select_ln492_3_fu_2069_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data16_0206_fu_552);

assign select_ln492_40_fu_1645_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data1923_0148_fu_320);

assign select_ln492_41_fu_1651_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data19_0145_fu_308 : norm_data_reg_3511);

assign select_ln492_42_fu_1623_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data2024_0154_fu_344);

assign select_ln492_43_fu_1629_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data20_0151_fu_332 : norm_data_reg_3511);

assign select_ln492_44_fu_1601_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data2125_0160_fu_368);

assign select_ln492_45_fu_1607_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data21_0157_fu_356 : norm_data_reg_3511);

assign select_ln492_46_fu_1579_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data2226_0166_fu_392);

assign select_ln492_47_fu_1585_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data22_0163_fu_380 : norm_data_reg_3511);

assign select_ln492_48_fu_1557_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data2327_0171_fu_412);

assign select_ln492_49_fu_1563_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data23_0169_fu_404 : norm_data_reg_3511);

assign select_ln492_4_fu_2041_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data12_0205_fu_548 : norm_data_reg_3511);

assign select_ln492_50_fu_1535_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data2428_0170_fu_408 : norm_data_reg_3511);

assign select_ln492_51_fu_1541_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data2429_0168_fu_400);

assign select_ln492_52_fu_1513_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data25_0167_fu_396 : norm_data_reg_3511);

assign select_ln492_53_fu_1519_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data2530_0165_fu_388);

assign select_ln492_54_fu_1491_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data26_0164_fu_384 : norm_data_reg_3511);

assign select_ln492_55_fu_1497_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data2631_0162_fu_376);

assign select_ln492_56_fu_1469_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data27_0161_fu_372 : norm_data_reg_3511);

assign select_ln492_57_fu_1475_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data2732_0159_fu_364);

assign select_ln492_58_fu_1447_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data28_0158_fu_360 : norm_data_reg_3511);

assign select_ln492_59_fu_1453_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data2833_0156_fu_352);

assign select_ln492_5_fu_2047_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data13_0173_fu_420);

assign select_ln492_60_fu_1425_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data29_0155_fu_348 : norm_data_reg_3511);

assign select_ln492_61_fu_1431_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data2934_0153_fu_340);

assign select_ln492_62_fu_1403_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data30_0152_fu_336 : norm_data_reg_3511);

assign select_ln492_63_fu_1409_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data3035_0150_fu_328);

assign select_ln492_64_fu_1381_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data31_0149_fu_324 : norm_data_reg_3511);

assign select_ln492_65_fu_1387_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data3136_0147_fu_316);

assign select_ln492_66_fu_1359_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data32_0146_fu_312 : norm_data_reg_3511);

assign select_ln492_67_fu_1365_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data3237_0144_fu_304);

assign select_ln492_68_fu_1337_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data33_0143_fu_300 : norm_data_reg_3511);

assign select_ln492_69_fu_1343_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data3338_0141_fu_292);

assign select_ln492_6_fu_2019_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data24_0179_fu_444);

assign select_ln492_70_fu_1315_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data34_0140_fu_288 : norm_data_reg_3511);

assign select_ln492_71_fu_1321_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data3439_0138_fu_280);

assign select_ln492_72_fu_1293_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data3541_0108_fu_160);

assign select_ln492_73_fu_1299_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data3540_0105_fu_148 : norm_data_reg_3511);

assign select_ln492_74_fu_1271_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data3642_0114_fu_184);

assign select_ln492_75_fu_1277_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data36_0111_fu_172 : norm_data_reg_3511);

assign select_ln492_76_fu_1249_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data3743_0120_fu_208);

assign select_ln492_77_fu_1255_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data37_0117_fu_196 : norm_data_reg_3511);

assign select_ln492_78_fu_1227_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data3844_0126_fu_232);

assign select_ln492_79_fu_1233_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data38_0123_fu_220 : norm_data_reg_3511);

assign select_ln492_7_fu_2025_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data2_0176_fu_432 : norm_data_reg_3511);

assign select_ln492_80_fu_1205_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data3945_0132_fu_256);

assign select_ln492_81_fu_1211_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data39_0129_fu_244 : norm_data_reg_3511);

assign select_ln492_82_fu_1183_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data4046_0137_fu_276);

assign select_ln492_83_fu_1189_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data40_0135_fu_268 : norm_data_reg_3511);

assign select_ln492_84_fu_1161_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data41_0136_fu_272 : norm_data_reg_3511);

assign select_ln492_85_fu_1167_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data4147_0134_fu_264);

assign select_ln492_86_fu_1139_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data42_0133_fu_260 : norm_data_reg_3511);

assign select_ln492_87_fu_1145_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data4248_0131_fu_252);

assign select_ln492_88_fu_1117_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data43_0130_fu_248 : norm_data_reg_3511);

assign select_ln492_89_fu_1123_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data4349_0128_fu_240);

assign select_ln492_8_fu_1997_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data35_0185_fu_468);

assign select_ln492_90_fu_1095_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data44_0127_fu_236 : norm_data_reg_3511);

assign select_ln492_91_fu_1101_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data4450_0125_fu_228);

assign select_ln492_92_fu_1073_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data45_0124_fu_224 : norm_data_reg_3511);

assign select_ln492_93_fu_1079_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data4551_0122_fu_216);

assign select_ln492_94_fu_1051_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data4652_0121_fu_212 : norm_data_reg_3511);

assign select_ln492_95_fu_1057_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data4653_0119_fu_204);

assign select_ln492_96_fu_1029_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data47_0118_fu_200 : norm_data_reg_3511);

assign select_ln492_97_fu_1035_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data4754_0116_fu_192);

assign select_ln492_98_fu_1007_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data48_0115_fu_188 : norm_data_reg_3511);

assign select_ln492_99_fu_1013_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data_reg_3511 : norm_data4855_0113_fu_180);

assign select_ln492_9_fu_2003_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data3_0182_fu_456 : norm_data_reg_3511);

assign select_ln492_fu_2085_p3 = ((trunc_ln492_reg_3383_pp0_iter13_reg[0:0] === 1'b1) ? norm_data51_0106_fu_152 : norm_data_reg_3511);

assign std_in_address0 = zext_ln492_fu_942_p1;

assign trunc_ln492_fu_959_p1 = i_0_reg_599[0:0];

assign zext_ln492_fu_942_p1 = i_0_reg_599;

endmodule //normalize_wlo
