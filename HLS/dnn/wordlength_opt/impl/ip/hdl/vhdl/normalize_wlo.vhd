-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity normalize_wlo is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    LS_data_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    LS_data_ce0 : OUT STD_LOGIC;
    LS_data_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_27 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_28 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_29 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_30 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_31 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_32 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_33 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_34 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_35 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_36 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_37 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_38 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_39 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_40 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_41 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_42 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_43 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_44 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_45 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_46 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_47 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_48 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_49 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_50 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_51 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_52 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_53 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_54 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_55 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_56 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_57 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_58 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_59 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_60 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_61 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_62 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_63 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_64 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_65 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_66 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_67 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_68 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_69 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_70 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_71 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_72 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_73 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_74 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_75 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_76 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_77 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_78 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_79 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_80 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_81 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_82 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_83 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_84 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_85 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_86 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_87 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_88 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_89 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_90 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_91 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_92 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_93 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_94 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_95 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_96 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_97 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_98 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_99 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_100 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_101 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_102 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_103 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of normalize_wlo is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_3E : STD_LOGIC_VECTOR (5 downto 0) := "111110";
    constant ap_const_lv6_3D : STD_LOGIC_VECTOR (5 downto 0) := "111101";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv6_3B : STD_LOGIC_VECTOR (5 downto 0) := "111011";
    constant ap_const_lv6_3A : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv6_37 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_const_lv6_36 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_const_lv6_35 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_const_lv6_34 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_const_lv6_33 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_2E : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_const_lv6_2D : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_13 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv6_1C : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv6_1B : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_const_lv6_1A : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_11 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv6_E : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_D : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_const_lv6_C : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_B : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv7_68 : STD_LOGIC_VECTOR (6 downto 0) := "1101000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal mean_in_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mean_in_ce0 : STD_LOGIC;
    signal mean_in_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal std_in_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal std_in_ce0 : STD_LOGIC;
    signal std_in_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_0_reg_599 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln490_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_fu_936_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal lshr_ln_reg_3379 : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_3379_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_3379_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_3379_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_3379_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_3379_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_3379_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_3379_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_3379_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_3379_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_3379_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_3379_pp0_iter11_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_3379_pp0_iter12_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_reg_3379_pp0_iter13_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln492_fu_959_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln492_reg_3383 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln492_reg_3383_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln492_reg_3383_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln492_reg_3383_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln492_reg_3383_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln492_reg_3383_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln492_reg_3383_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln492_reg_3383_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln492_reg_3383_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln492_reg_3383_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln492_reg_3383_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln492_reg_3383_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln492_reg_3383_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln492_reg_3383_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal LS_data_load_reg_3491 : STD_LOGIC_VECTOR (15 downto 0);
    signal mean_in_load_reg_3496 : STD_LOGIC_VECTOR (15 downto 0);
    signal std_in_load_reg_3501 : STD_LOGIC_VECTOR (15 downto 0);
    signal std_in_load_reg_3501_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal std_in_load_reg_3501_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal std_in_load_reg_3501_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal std_in_load_reg_3501_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal std_in_load_reg_3501_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_610_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_3506 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_614_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data_reg_3511 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal zext_ln492_fu_942_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal norm_data5158_0104_fu_144 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_1_fu_2091_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal norm_data3540_0105_fu_148 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_73_fu_1299_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data51_0106_fu_152 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_fu_2085_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data5057_0107_fu_156 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_103_fu_969_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data3541_0108_fu_160 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_72_fu_1293_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data50_0109_fu_164 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_102_fu_963_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data4956_0110_fu_168 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_101_fu_991_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data36_0111_fu_172 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_75_fu_1277_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data49_0112_fu_176 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_100_fu_985_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data4855_0113_fu_180 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_99_fu_1013_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data3642_0114_fu_184 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_74_fu_1271_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data48_0115_fu_188 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_98_fu_1007_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data4754_0116_fu_192 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_97_fu_1035_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data37_0117_fu_196 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_77_fu_1255_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data47_0118_fu_200 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_96_fu_1029_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data4653_0119_fu_204 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_95_fu_1057_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data3743_0120_fu_208 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_76_fu_1249_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data4652_0121_fu_212 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_94_fu_1051_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data4551_0122_fu_216 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_93_fu_1079_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data38_0123_fu_220 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_79_fu_1233_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data45_0124_fu_224 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_92_fu_1073_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data4450_0125_fu_228 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_91_fu_1101_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data3844_0126_fu_232 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_78_fu_1227_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data44_0127_fu_236 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_90_fu_1095_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data4349_0128_fu_240 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_89_fu_1123_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data39_0129_fu_244 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_81_fu_1211_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data43_0130_fu_248 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_88_fu_1117_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data4248_0131_fu_252 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_87_fu_1145_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data3945_0132_fu_256 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_80_fu_1205_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data42_0133_fu_260 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_86_fu_1139_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data4147_0134_fu_264 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_85_fu_1167_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data40_0135_fu_268 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_83_fu_1189_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data41_0136_fu_272 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_84_fu_1161_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data4046_0137_fu_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_82_fu_1183_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data3439_0138_fu_280 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_71_fu_1321_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data18_0139_fu_284 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_39_fu_1673_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data34_0140_fu_288 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_70_fu_1315_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data3338_0141_fu_292 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_69_fu_1343_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data1822_0142_fu_296 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_38_fu_1667_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data33_0143_fu_300 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_68_fu_1337_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data3237_0144_fu_304 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_67_fu_1365_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data19_0145_fu_308 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_41_fu_1651_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data32_0146_fu_312 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_66_fu_1359_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data3136_0147_fu_316 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_65_fu_1387_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data1923_0148_fu_320 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_40_fu_1645_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data31_0149_fu_324 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_64_fu_1381_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data3035_0150_fu_328 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_63_fu_1409_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data20_0151_fu_332 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_43_fu_1629_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data30_0152_fu_336 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_62_fu_1403_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data2934_0153_fu_340 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_61_fu_1431_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data2024_0154_fu_344 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_42_fu_1623_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data29_0155_fu_348 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_60_fu_1425_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data2833_0156_fu_352 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_59_fu_1453_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data21_0157_fu_356 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_45_fu_1607_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data28_0158_fu_360 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_58_fu_1447_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data2732_0159_fu_364 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_57_fu_1475_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data2125_0160_fu_368 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_44_fu_1601_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data27_0161_fu_372 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_56_fu_1469_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data2631_0162_fu_376 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_55_fu_1497_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data22_0163_fu_380 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_47_fu_1585_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data26_0164_fu_384 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_54_fu_1491_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data2530_0165_fu_388 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_53_fu_1519_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data2226_0166_fu_392 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_46_fu_1579_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data25_0167_fu_396 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_52_fu_1513_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data2429_0168_fu_400 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_51_fu_1541_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data23_0169_fu_404 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_49_fu_1563_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data2428_0170_fu_408 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_50_fu_1535_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data2327_0171_fu_412 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_48_fu_1557_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data1721_0172_fu_416 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_37_fu_1695_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data13_0173_fu_420 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_5_fu_2047_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data17_0174_fu_424 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_36_fu_1689_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data1620_0175_fu_428 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_35_fu_1717_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data2_0176_fu_432 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_7_fu_2025_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data16103_0177_fu_436 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_34_fu_1711_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data1519_0178_fu_440 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_33_fu_1739_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data24_0179_fu_444 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_6_fu_2019_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data1595_0180_fu_448 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_32_fu_1733_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data1418_0181_fu_452 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_31_fu_1761_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data3_0182_fu_456 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_9_fu_2003_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data14_0183_fu_460 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_30_fu_1755_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data1317_0184_fu_464 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_29_fu_1783_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data35_0185_fu_468 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_8_fu_1997_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data1316_0186_fu_472 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_28_fu_1777_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data1215_0187_fu_476 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_27_fu_1805_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data4_0188_fu_480 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_11_fu_1981_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data1214_0189_fu_484 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_26_fu_1799_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data1113_0190_fu_488 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_25_fu_1827_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data46_0191_fu_492 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_10_fu_1975_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data11_0192_fu_496 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_24_fu_1821_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data1012_0193_fu_500 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_23_fu_1849_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data5_0194_fu_504 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_13_fu_1959_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data10_0195_fu_508 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_22_fu_1843_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data911_0196_fu_512 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_21_fu_1871_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data57_0197_fu_516 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_12_fu_1953_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data9_0198_fu_520 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_20_fu_1865_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data810_0199_fu_524 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_19_fu_1893_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data6_0200_fu_528 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_15_fu_1937_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data8_0201_fu_532 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_18_fu_1887_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data79_0202_fu_536 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_17_fu_1915_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data68_0203_fu_540 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_14_fu_1931_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data7_0204_fu_544 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_16_fu_1909_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data12_0205_fu_548 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_4_fu_2041_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data16_0206_fu_552 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_3_fu_2069_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal norm_data_0207_fu_556 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln492_2_fu_2063_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component DNN_wlo_hsub_16nseOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component DNN_wlo_hdiv_16nsfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component normalize_wlo_meacud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component normalize_wlo_stddEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    mean_in_U : component normalize_wlo_meacud
    generic map (
        DataWidth => 16,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mean_in_address0,
        ce0 => mean_in_ce0,
        q0 => mean_in_q0);

    std_in_U : component normalize_wlo_stddEe
    generic map (
        DataWidth => 16,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => std_in_address0,
        ce0 => std_in_ce0,
        q0 => std_in_q0);

    DNN_wlo_hsub_16nseOg_U7 : component DNN_wlo_hsub_16nseOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => LS_data_load_reg_3491,
        din1 => mean_in_load_reg_3496,
        ce => ap_const_logic_1,
        dout => grp_fu_610_p2);

    DNN_wlo_hdiv_16nsfYi_U8 : component DNN_wlo_hdiv_16nsfYi
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_reg_3506,
        din1 => std_in_load_reg_3501_pp0_iter6_reg,
        ce => ap_const_logic_1,
        dout => grp_fu_614_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_599_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln490_fu_930_p2 = ap_const_lv1_0))) then 
                i_0_reg_599 <= i_fu_936_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_599 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                LS_data_load_reg_3491 <= LS_data_q0;
                lshr_ln_reg_3379_pp0_iter1_reg <= lshr_ln_reg_3379;
                mean_in_load_reg_3496 <= mean_in_q0;
                std_in_load_reg_3501 <= std_in_q0;
                trunc_ln492_reg_3383_pp0_iter1_reg <= trunc_ln492_reg_3383;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln490_fu_930_p2 = ap_const_lv1_0))) then
                lshr_ln_reg_3379 <= i_0_reg_599(6 downto 1);
                trunc_ln492_reg_3383 <= trunc_ln492_fu_959_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                lshr_ln_reg_3379_pp0_iter10_reg <= lshr_ln_reg_3379_pp0_iter9_reg;
                lshr_ln_reg_3379_pp0_iter11_reg <= lshr_ln_reg_3379_pp0_iter10_reg;
                lshr_ln_reg_3379_pp0_iter12_reg <= lshr_ln_reg_3379_pp0_iter11_reg;
                lshr_ln_reg_3379_pp0_iter13_reg <= lshr_ln_reg_3379_pp0_iter12_reg;
                lshr_ln_reg_3379_pp0_iter2_reg <= lshr_ln_reg_3379_pp0_iter1_reg;
                lshr_ln_reg_3379_pp0_iter3_reg <= lshr_ln_reg_3379_pp0_iter2_reg;
                lshr_ln_reg_3379_pp0_iter4_reg <= lshr_ln_reg_3379_pp0_iter3_reg;
                lshr_ln_reg_3379_pp0_iter5_reg <= lshr_ln_reg_3379_pp0_iter4_reg;
                lshr_ln_reg_3379_pp0_iter6_reg <= lshr_ln_reg_3379_pp0_iter5_reg;
                lshr_ln_reg_3379_pp0_iter7_reg <= lshr_ln_reg_3379_pp0_iter6_reg;
                lshr_ln_reg_3379_pp0_iter8_reg <= lshr_ln_reg_3379_pp0_iter7_reg;
                lshr_ln_reg_3379_pp0_iter9_reg <= lshr_ln_reg_3379_pp0_iter8_reg;
                norm_data_reg_3511 <= grp_fu_614_p2;
                std_in_load_reg_3501_pp0_iter2_reg <= std_in_load_reg_3501;
                std_in_load_reg_3501_pp0_iter3_reg <= std_in_load_reg_3501_pp0_iter2_reg;
                std_in_load_reg_3501_pp0_iter4_reg <= std_in_load_reg_3501_pp0_iter3_reg;
                std_in_load_reg_3501_pp0_iter5_reg <= std_in_load_reg_3501_pp0_iter4_reg;
                std_in_load_reg_3501_pp0_iter6_reg <= std_in_load_reg_3501_pp0_iter5_reg;
                tmp_reg_3506 <= grp_fu_610_p2;
                trunc_ln492_reg_3383_pp0_iter10_reg <= trunc_ln492_reg_3383_pp0_iter9_reg;
                trunc_ln492_reg_3383_pp0_iter11_reg <= trunc_ln492_reg_3383_pp0_iter10_reg;
                trunc_ln492_reg_3383_pp0_iter12_reg <= trunc_ln492_reg_3383_pp0_iter11_reg;
                trunc_ln492_reg_3383_pp0_iter13_reg <= trunc_ln492_reg_3383_pp0_iter12_reg;
                trunc_ln492_reg_3383_pp0_iter2_reg <= trunc_ln492_reg_3383_pp0_iter1_reg;
                trunc_ln492_reg_3383_pp0_iter3_reg <= trunc_ln492_reg_3383_pp0_iter2_reg;
                trunc_ln492_reg_3383_pp0_iter4_reg <= trunc_ln492_reg_3383_pp0_iter3_reg;
                trunc_ln492_reg_3383_pp0_iter5_reg <= trunc_ln492_reg_3383_pp0_iter4_reg;
                trunc_ln492_reg_3383_pp0_iter6_reg <= trunc_ln492_reg_3383_pp0_iter5_reg;
                trunc_ln492_reg_3383_pp0_iter7_reg <= trunc_ln492_reg_3383_pp0_iter6_reg;
                trunc_ln492_reg_3383_pp0_iter8_reg <= trunc_ln492_reg_3383_pp0_iter7_reg;
                trunc_ln492_reg_3383_pp0_iter9_reg <= trunc_ln492_reg_3383_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_A) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data1012_0193_fu_500 <= select_ln492_23_fu_1849_p3;
                norm_data10_0195_fu_508 <= select_ln492_22_fu_1843_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_B) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data1113_0190_fu_488 <= select_ln492_25_fu_1827_p3;
                norm_data11_0192_fu_496 <= select_ln492_24_fu_1821_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_C) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data1214_0189_fu_484 <= select_ln492_26_fu_1799_p3;
                norm_data1215_0187_fu_476 <= select_ln492_27_fu_1805_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_1) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data12_0205_fu_548 <= select_ln492_4_fu_2041_p3;
                norm_data13_0173_fu_420 <= select_ln492_5_fu_2047_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_D) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data1316_0186_fu_472 <= select_ln492_28_fu_1777_p3;
                norm_data1317_0184_fu_464 <= select_ln492_29_fu_1783_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_E) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data1418_0181_fu_452 <= select_ln492_31_fu_1761_p3;
                norm_data14_0183_fu_460 <= select_ln492_30_fu_1755_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_F) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data1519_0178_fu_440 <= select_ln492_33_fu_1739_p3;
                norm_data1595_0180_fu_448 <= select_ln492_32_fu_1733_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_10) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data16103_0177_fu_436 <= select_ln492_34_fu_1711_p3;
                norm_data1620_0175_fu_428 <= select_ln492_35_fu_1717_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data16_0206_fu_552 <= select_ln492_3_fu_2069_p3;
                norm_data_0207_fu_556 <= select_ln492_2_fu_2063_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_11) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data1721_0172_fu_416 <= select_ln492_37_fu_1695_p3;
                norm_data17_0174_fu_424 <= select_ln492_36_fu_1689_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_12) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data1822_0142_fu_296 <= select_ln492_38_fu_1667_p3;
                norm_data18_0139_fu_284 <= select_ln492_39_fu_1673_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_13) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data1923_0148_fu_320 <= select_ln492_40_fu_1645_p3;
                norm_data19_0145_fu_308 <= select_ln492_41_fu_1651_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_14) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data2024_0154_fu_344 <= select_ln492_42_fu_1623_p3;
                norm_data20_0151_fu_332 <= select_ln492_43_fu_1629_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_15) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data2125_0160_fu_368 <= select_ln492_44_fu_1601_p3;
                norm_data21_0157_fu_356 <= select_ln492_45_fu_1607_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_16) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data2226_0166_fu_392 <= select_ln492_46_fu_1579_p3;
                norm_data22_0163_fu_380 <= select_ln492_47_fu_1585_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_17) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data2327_0171_fu_412 <= select_ln492_48_fu_1557_p3;
                norm_data23_0169_fu_404 <= select_ln492_49_fu_1563_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_18) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data2428_0170_fu_408 <= select_ln492_50_fu_1535_p3;
                norm_data2429_0168_fu_400 <= select_ln492_51_fu_1541_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_2) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data24_0179_fu_444 <= select_ln492_6_fu_2019_p3;
                norm_data2_0176_fu_432 <= select_ln492_7_fu_2025_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_19) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data2530_0165_fu_388 <= select_ln492_53_fu_1519_p3;
                norm_data25_0167_fu_396 <= select_ln492_52_fu_1513_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_1A) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data2631_0162_fu_376 <= select_ln492_55_fu_1497_p3;
                norm_data26_0164_fu_384 <= select_ln492_54_fu_1491_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_1B) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data2732_0159_fu_364 <= select_ln492_57_fu_1475_p3;
                norm_data27_0161_fu_372 <= select_ln492_56_fu_1469_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_1C) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data2833_0156_fu_352 <= select_ln492_59_fu_1453_p3;
                norm_data28_0158_fu_360 <= select_ln492_58_fu_1447_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_1D) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data2934_0153_fu_340 <= select_ln492_61_fu_1431_p3;
                norm_data29_0155_fu_348 <= select_ln492_60_fu_1425_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_1E) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data3035_0150_fu_328 <= select_ln492_63_fu_1409_p3;
                norm_data30_0152_fu_336 <= select_ln492_62_fu_1403_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_1F) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data3136_0147_fu_316 <= select_ln492_65_fu_1387_p3;
                norm_data31_0149_fu_324 <= select_ln492_64_fu_1381_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_20) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data3237_0144_fu_304 <= select_ln492_67_fu_1365_p3;
                norm_data32_0146_fu_312 <= select_ln492_66_fu_1359_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_21) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data3338_0141_fu_292 <= select_ln492_69_fu_1343_p3;
                norm_data33_0143_fu_300 <= select_ln492_68_fu_1337_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_22) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data3439_0138_fu_280 <= select_ln492_71_fu_1321_p3;
                norm_data34_0140_fu_288 <= select_ln492_70_fu_1315_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_23) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data3540_0105_fu_148 <= select_ln492_73_fu_1299_p3;
                norm_data3541_0108_fu_160 <= select_ln492_72_fu_1293_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_3) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data35_0185_fu_468 <= select_ln492_8_fu_1997_p3;
                norm_data3_0182_fu_456 <= select_ln492_9_fu_2003_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_24) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data3642_0114_fu_184 <= select_ln492_74_fu_1271_p3;
                norm_data36_0111_fu_172 <= select_ln492_75_fu_1277_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_25) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data3743_0120_fu_208 <= select_ln492_76_fu_1249_p3;
                norm_data37_0117_fu_196 <= select_ln492_77_fu_1255_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_26) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data3844_0126_fu_232 <= select_ln492_78_fu_1227_p3;
                norm_data38_0123_fu_220 <= select_ln492_79_fu_1233_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_27) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data3945_0132_fu_256 <= select_ln492_80_fu_1205_p3;
                norm_data39_0129_fu_244 <= select_ln492_81_fu_1211_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_28) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data4046_0137_fu_276 <= select_ln492_82_fu_1183_p3;
                norm_data40_0135_fu_268 <= select_ln492_83_fu_1189_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_29) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data4147_0134_fu_264 <= select_ln492_85_fu_1167_p3;
                norm_data41_0136_fu_272 <= select_ln492_84_fu_1161_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_2A) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data4248_0131_fu_252 <= select_ln492_87_fu_1145_p3;
                norm_data42_0133_fu_260 <= select_ln492_86_fu_1139_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_2B) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data4349_0128_fu_240 <= select_ln492_89_fu_1123_p3;
                norm_data43_0130_fu_248 <= select_ln492_88_fu_1117_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_2C) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data4450_0125_fu_228 <= select_ln492_91_fu_1101_p3;
                norm_data44_0127_fu_236 <= select_ln492_90_fu_1095_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_2D) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data4551_0122_fu_216 <= select_ln492_93_fu_1079_p3;
                norm_data45_0124_fu_224 <= select_ln492_92_fu_1073_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_2E) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data4652_0121_fu_212 <= select_ln492_94_fu_1051_p3;
                norm_data4653_0119_fu_204 <= select_ln492_95_fu_1057_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_4) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data46_0191_fu_492 <= select_ln492_10_fu_1975_p3;
                norm_data4_0188_fu_480 <= select_ln492_11_fu_1981_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_2F) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data4754_0116_fu_192 <= select_ln492_97_fu_1035_p3;
                norm_data47_0118_fu_200 <= select_ln492_96_fu_1029_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_30) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data4855_0113_fu_180 <= select_ln492_99_fu_1013_p3;
                norm_data48_0115_fu_188 <= select_ln492_98_fu_1007_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_31) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data4956_0110_fu_168 <= select_ln492_101_fu_991_p3;
                norm_data49_0112_fu_176 <= select_ln492_100_fu_985_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_32) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data5057_0107_fu_156 <= select_ln492_103_fu_969_p3;
                norm_data50_0109_fu_164 <= select_ln492_102_fu_963_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and ((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_33) or ((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_34) or ((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_35) or ((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_36) or ((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_37) or ((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_38) or ((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_39) or ((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_3A) or ((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_3B) or ((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_3C) or ((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_3D) or ((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_3E) or (lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_3F))))))))))))))) then
                norm_data5158_0104_fu_144 <= select_ln492_1_fu_2091_p3;
                norm_data51_0106_fu_152 <= select_ln492_fu_2085_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_5) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data57_0197_fu_516 <= select_ln492_12_fu_1953_p3;
                norm_data5_0194_fu_504 <= select_ln492_13_fu_1959_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_6) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data68_0203_fu_540 <= select_ln492_14_fu_1931_p3;
                norm_data6_0200_fu_528 <= select_ln492_15_fu_1937_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_7) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data79_0202_fu_536 <= select_ln492_17_fu_1915_p3;
                norm_data7_0204_fu_544 <= select_ln492_16_fu_1909_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_8) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data810_0199_fu_524 <= select_ln492_19_fu_1893_p3;
                norm_data8_0201_fu_532 <= select_ln492_18_fu_1887_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((lshr_ln_reg_3379_pp0_iter13_reg = ap_const_lv6_9) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                norm_data911_0196_fu_512 <= select_ln492_21_fu_1871_p3;
                norm_data9_0198_fu_520 <= select_ln492_20_fu_1865_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln490_fu_930_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln490_fu_930_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln490_fu_930_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    LS_data_address0 <= zext_ln492_fu_942_p1(7 - 1 downto 0);

    LS_data_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LS_data_ce0 <= ap_const_logic_1;
        else 
            LS_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state17 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln490_fu_930_p2)
    begin
        if ((icmp_ln490_fu_930_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= norm_data_0207_fu_556;
    ap_return_1 <= norm_data16_0206_fu_552;
    ap_return_10 <= norm_data5_0194_fu_504;
    ap_return_100 <= norm_data50_0109_fu_164;
    ap_return_101 <= norm_data5057_0107_fu_156;
    ap_return_102 <= norm_data51_0106_fu_152;
    ap_return_103 <= norm_data5158_0104_fu_144;
    ap_return_11 <= norm_data57_0197_fu_516;
    ap_return_12 <= norm_data6_0200_fu_528;
    ap_return_13 <= norm_data68_0203_fu_540;
    ap_return_14 <= norm_data7_0204_fu_544;
    ap_return_15 <= norm_data79_0202_fu_536;
    ap_return_16 <= norm_data8_0201_fu_532;
    ap_return_17 <= norm_data810_0199_fu_524;
    ap_return_18 <= norm_data9_0198_fu_520;
    ap_return_19 <= norm_data911_0196_fu_512;
    ap_return_2 <= norm_data12_0205_fu_548;
    ap_return_20 <= norm_data10_0195_fu_508;
    ap_return_21 <= norm_data1012_0193_fu_500;
    ap_return_22 <= norm_data11_0192_fu_496;
    ap_return_23 <= norm_data1113_0190_fu_488;
    ap_return_24 <= norm_data1214_0189_fu_484;
    ap_return_25 <= norm_data1215_0187_fu_476;
    ap_return_26 <= norm_data1316_0186_fu_472;
    ap_return_27 <= norm_data1317_0184_fu_464;
    ap_return_28 <= norm_data14_0183_fu_460;
    ap_return_29 <= norm_data1418_0181_fu_452;
    ap_return_3 <= norm_data13_0173_fu_420;
    ap_return_30 <= norm_data1595_0180_fu_448;
    ap_return_31 <= norm_data1519_0178_fu_440;
    ap_return_32 <= norm_data16103_0177_fu_436;
    ap_return_33 <= norm_data1620_0175_fu_428;
    ap_return_34 <= norm_data17_0174_fu_424;
    ap_return_35 <= norm_data1721_0172_fu_416;
    ap_return_36 <= norm_data18_0139_fu_284;
    ap_return_37 <= norm_data1822_0142_fu_296;
    ap_return_38 <= norm_data19_0145_fu_308;
    ap_return_39 <= norm_data1923_0148_fu_320;
    ap_return_4 <= norm_data2_0176_fu_432;
    ap_return_40 <= norm_data20_0151_fu_332;
    ap_return_41 <= norm_data2024_0154_fu_344;
    ap_return_42 <= norm_data21_0157_fu_356;
    ap_return_43 <= norm_data2125_0160_fu_368;
    ap_return_44 <= norm_data22_0163_fu_380;
    ap_return_45 <= norm_data2226_0166_fu_392;
    ap_return_46 <= norm_data23_0169_fu_404;
    ap_return_47 <= norm_data2327_0171_fu_412;
    ap_return_48 <= norm_data2428_0170_fu_408;
    ap_return_49 <= norm_data2429_0168_fu_400;
    ap_return_5 <= norm_data24_0179_fu_444;
    ap_return_50 <= norm_data25_0167_fu_396;
    ap_return_51 <= norm_data2530_0165_fu_388;
    ap_return_52 <= norm_data26_0164_fu_384;
    ap_return_53 <= norm_data2631_0162_fu_376;
    ap_return_54 <= norm_data27_0161_fu_372;
    ap_return_55 <= norm_data2732_0159_fu_364;
    ap_return_56 <= norm_data28_0158_fu_360;
    ap_return_57 <= norm_data2833_0156_fu_352;
    ap_return_58 <= norm_data29_0155_fu_348;
    ap_return_59 <= norm_data2934_0153_fu_340;
    ap_return_6 <= norm_data3_0182_fu_456;
    ap_return_60 <= norm_data30_0152_fu_336;
    ap_return_61 <= norm_data3035_0150_fu_328;
    ap_return_62 <= norm_data31_0149_fu_324;
    ap_return_63 <= norm_data3136_0147_fu_316;
    ap_return_64 <= norm_data32_0146_fu_312;
    ap_return_65 <= norm_data3237_0144_fu_304;
    ap_return_66 <= norm_data33_0143_fu_300;
    ap_return_67 <= norm_data3338_0141_fu_292;
    ap_return_68 <= norm_data34_0140_fu_288;
    ap_return_69 <= norm_data3439_0138_fu_280;
    ap_return_7 <= norm_data35_0185_fu_468;
    ap_return_70 <= norm_data3540_0105_fu_148;
    ap_return_71 <= norm_data3541_0108_fu_160;
    ap_return_72 <= norm_data36_0111_fu_172;
    ap_return_73 <= norm_data3642_0114_fu_184;
    ap_return_74 <= norm_data37_0117_fu_196;
    ap_return_75 <= norm_data3743_0120_fu_208;
    ap_return_76 <= norm_data38_0123_fu_220;
    ap_return_77 <= norm_data3844_0126_fu_232;
    ap_return_78 <= norm_data39_0129_fu_244;
    ap_return_79 <= norm_data3945_0132_fu_256;
    ap_return_8 <= norm_data4_0188_fu_480;
    ap_return_80 <= norm_data40_0135_fu_268;
    ap_return_81 <= norm_data4046_0137_fu_276;
    ap_return_82 <= norm_data41_0136_fu_272;
    ap_return_83 <= norm_data4147_0134_fu_264;
    ap_return_84 <= norm_data42_0133_fu_260;
    ap_return_85 <= norm_data4248_0131_fu_252;
    ap_return_86 <= norm_data43_0130_fu_248;
    ap_return_87 <= norm_data4349_0128_fu_240;
    ap_return_88 <= norm_data44_0127_fu_236;
    ap_return_89 <= norm_data4450_0125_fu_228;
    ap_return_9 <= norm_data46_0191_fu_492;
    ap_return_90 <= norm_data45_0124_fu_224;
    ap_return_91 <= norm_data4551_0122_fu_216;
    ap_return_92 <= norm_data4652_0121_fu_212;
    ap_return_93 <= norm_data4653_0119_fu_204;
    ap_return_94 <= norm_data47_0118_fu_200;
    ap_return_95 <= norm_data4754_0116_fu_192;
    ap_return_96 <= norm_data48_0115_fu_188;
    ap_return_97 <= norm_data4855_0113_fu_180;
    ap_return_98 <= norm_data49_0112_fu_176;
    ap_return_99 <= norm_data4956_0110_fu_168;
    i_fu_936_p2 <= std_logic_vector(unsigned(i_0_reg_599) + unsigned(ap_const_lv7_1));
    icmp_ln490_fu_930_p2 <= "1" when (i_0_reg_599 = ap_const_lv7_68) else "0";
    mean_in_address0 <= zext_ln492_fu_942_p1(7 - 1 downto 0);

    mean_in_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mean_in_ce0 <= ap_const_logic_1;
        else 
            mean_in_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln492_100_fu_985_p3 <= 
        norm_data49_0112_fu_176 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_101_fu_991_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data4956_0110_fu_168;
    select_ln492_102_fu_963_p3 <= 
        norm_data50_0109_fu_164 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_103_fu_969_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data5057_0107_fu_156;
    select_ln492_10_fu_1975_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data46_0191_fu_492;
    select_ln492_11_fu_1981_p3 <= 
        norm_data4_0188_fu_480 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_12_fu_1953_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data57_0197_fu_516;
    select_ln492_13_fu_1959_p3 <= 
        norm_data5_0194_fu_504 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_14_fu_1931_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data68_0203_fu_540;
    select_ln492_15_fu_1937_p3 <= 
        norm_data6_0200_fu_528 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_16_fu_1909_p3 <= 
        norm_data7_0204_fu_544 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_17_fu_1915_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data79_0202_fu_536;
    select_ln492_18_fu_1887_p3 <= 
        norm_data8_0201_fu_532 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_19_fu_1893_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data810_0199_fu_524;
    select_ln492_1_fu_2091_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data5158_0104_fu_144;
    select_ln492_20_fu_1865_p3 <= 
        norm_data9_0198_fu_520 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_21_fu_1871_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data911_0196_fu_512;
    select_ln492_22_fu_1843_p3 <= 
        norm_data10_0195_fu_508 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_23_fu_1849_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data1012_0193_fu_500;
    select_ln492_24_fu_1821_p3 <= 
        norm_data11_0192_fu_496 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_25_fu_1827_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data1113_0190_fu_488;
    select_ln492_26_fu_1799_p3 <= 
        norm_data1214_0189_fu_484 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_27_fu_1805_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data1215_0187_fu_476;
    select_ln492_28_fu_1777_p3 <= 
        norm_data1316_0186_fu_472 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_29_fu_1783_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data1317_0184_fu_464;
    select_ln492_2_fu_2063_p3 <= 
        norm_data_0207_fu_556 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_30_fu_1755_p3 <= 
        norm_data14_0183_fu_460 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_31_fu_1761_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data1418_0181_fu_452;
    select_ln492_32_fu_1733_p3 <= 
        norm_data1595_0180_fu_448 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_33_fu_1739_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data1519_0178_fu_440;
    select_ln492_34_fu_1711_p3 <= 
        norm_data16103_0177_fu_436 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_35_fu_1717_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data1620_0175_fu_428;
    select_ln492_36_fu_1689_p3 <= 
        norm_data17_0174_fu_424 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_37_fu_1695_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data1721_0172_fu_416;
    select_ln492_38_fu_1667_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data1822_0142_fu_296;
    select_ln492_39_fu_1673_p3 <= 
        norm_data18_0139_fu_284 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_3_fu_2069_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data16_0206_fu_552;
    select_ln492_40_fu_1645_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data1923_0148_fu_320;
    select_ln492_41_fu_1651_p3 <= 
        norm_data19_0145_fu_308 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_42_fu_1623_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data2024_0154_fu_344;
    select_ln492_43_fu_1629_p3 <= 
        norm_data20_0151_fu_332 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_44_fu_1601_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data2125_0160_fu_368;
    select_ln492_45_fu_1607_p3 <= 
        norm_data21_0157_fu_356 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_46_fu_1579_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data2226_0166_fu_392;
    select_ln492_47_fu_1585_p3 <= 
        norm_data22_0163_fu_380 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_48_fu_1557_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data2327_0171_fu_412;
    select_ln492_49_fu_1563_p3 <= 
        norm_data23_0169_fu_404 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_4_fu_2041_p3 <= 
        norm_data12_0205_fu_548 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_50_fu_1535_p3 <= 
        norm_data2428_0170_fu_408 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_51_fu_1541_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data2429_0168_fu_400;
    select_ln492_52_fu_1513_p3 <= 
        norm_data25_0167_fu_396 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_53_fu_1519_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data2530_0165_fu_388;
    select_ln492_54_fu_1491_p3 <= 
        norm_data26_0164_fu_384 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_55_fu_1497_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data2631_0162_fu_376;
    select_ln492_56_fu_1469_p3 <= 
        norm_data27_0161_fu_372 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_57_fu_1475_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data2732_0159_fu_364;
    select_ln492_58_fu_1447_p3 <= 
        norm_data28_0158_fu_360 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_59_fu_1453_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data2833_0156_fu_352;
    select_ln492_5_fu_2047_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data13_0173_fu_420;
    select_ln492_60_fu_1425_p3 <= 
        norm_data29_0155_fu_348 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_61_fu_1431_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data2934_0153_fu_340;
    select_ln492_62_fu_1403_p3 <= 
        norm_data30_0152_fu_336 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_63_fu_1409_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data3035_0150_fu_328;
    select_ln492_64_fu_1381_p3 <= 
        norm_data31_0149_fu_324 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_65_fu_1387_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data3136_0147_fu_316;
    select_ln492_66_fu_1359_p3 <= 
        norm_data32_0146_fu_312 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_67_fu_1365_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data3237_0144_fu_304;
    select_ln492_68_fu_1337_p3 <= 
        norm_data33_0143_fu_300 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_69_fu_1343_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data3338_0141_fu_292;
    select_ln492_6_fu_2019_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data24_0179_fu_444;
    select_ln492_70_fu_1315_p3 <= 
        norm_data34_0140_fu_288 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_71_fu_1321_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data3439_0138_fu_280;
    select_ln492_72_fu_1293_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data3541_0108_fu_160;
    select_ln492_73_fu_1299_p3 <= 
        norm_data3540_0105_fu_148 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_74_fu_1271_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data3642_0114_fu_184;
    select_ln492_75_fu_1277_p3 <= 
        norm_data36_0111_fu_172 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_76_fu_1249_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data3743_0120_fu_208;
    select_ln492_77_fu_1255_p3 <= 
        norm_data37_0117_fu_196 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_78_fu_1227_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data3844_0126_fu_232;
    select_ln492_79_fu_1233_p3 <= 
        norm_data38_0123_fu_220 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_7_fu_2025_p3 <= 
        norm_data2_0176_fu_432 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_80_fu_1205_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data3945_0132_fu_256;
    select_ln492_81_fu_1211_p3 <= 
        norm_data39_0129_fu_244 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_82_fu_1183_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data4046_0137_fu_276;
    select_ln492_83_fu_1189_p3 <= 
        norm_data40_0135_fu_268 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_84_fu_1161_p3 <= 
        norm_data41_0136_fu_272 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_85_fu_1167_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data4147_0134_fu_264;
    select_ln492_86_fu_1139_p3 <= 
        norm_data42_0133_fu_260 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_87_fu_1145_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data4248_0131_fu_252;
    select_ln492_88_fu_1117_p3 <= 
        norm_data43_0130_fu_248 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_89_fu_1123_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data4349_0128_fu_240;
    select_ln492_8_fu_1997_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data35_0185_fu_468;
    select_ln492_90_fu_1095_p3 <= 
        norm_data44_0127_fu_236 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_91_fu_1101_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data4450_0125_fu_228;
    select_ln492_92_fu_1073_p3 <= 
        norm_data45_0124_fu_224 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_93_fu_1079_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data4551_0122_fu_216;
    select_ln492_94_fu_1051_p3 <= 
        norm_data4652_0121_fu_212 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_95_fu_1057_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data4653_0119_fu_204;
    select_ln492_96_fu_1029_p3 <= 
        norm_data47_0118_fu_200 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_97_fu_1035_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data4754_0116_fu_192;
    select_ln492_98_fu_1007_p3 <= 
        norm_data48_0115_fu_188 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_99_fu_1013_p3 <= 
        norm_data_reg_3511 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data4855_0113_fu_180;
    select_ln492_9_fu_2003_p3 <= 
        norm_data3_0182_fu_456 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    select_ln492_fu_2085_p3 <= 
        norm_data51_0106_fu_152 when (trunc_ln492_reg_3383_pp0_iter13_reg(0) = '1') else 
        norm_data_reg_3511;
    std_in_address0 <= zext_ln492_fu_942_p1(7 - 1 downto 0);

    std_in_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            std_in_ce0 <= ap_const_logic_1;
        else 
            std_in_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln492_fu_959_p1 <= i_0_reg_599(1 - 1 downto 0);
    zext_ln492_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_599),64));
end behav;
