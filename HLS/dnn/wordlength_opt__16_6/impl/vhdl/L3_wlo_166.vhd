-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity L3_wlo_166 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_0_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_0_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_1_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_1_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_2_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_2_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_3_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_3_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_4_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_4_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_5_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_5_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_6_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_6_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_7_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_7_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_8_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_8_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_9_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_9_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_10_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_10_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_11_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_11_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_12_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_12_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_13_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_13_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_14_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_14_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_15_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_15_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_16_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_16_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_17_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_17_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_18_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_18_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_19_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_19_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_20_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_20_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_21_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_21_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_22_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_22_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_23_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_23_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_24_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_24_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_25_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    x_25_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    y_L3_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    y_L3_V_ce0 : OUT STD_LOGIC;
    y_L3_V_we0 : OUT STD_LOGIC;
    y_L3_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of L3_wlo_166 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_68 : STD_LOGIC_VECTOR (6 downto 0) := "1101000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal L2_BIAS_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_BIAS_V_ce0 : STD_LOGIC;
    signal L2_BIAS_V_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_0_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_0_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal L2_WEIGHTS_V_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_1_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_1_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_2_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_2_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal L2_WEIGHTS_V_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_3_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_3_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal L2_WEIGHTS_V_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_4_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_4_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_5_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_6_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_7_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_8_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_8_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_8_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_9_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_9_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_9_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_10_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_10_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_10_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_11_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_11_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_11_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal L2_WEIGHTS_V_12_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_12_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_12_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_13_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_13_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_13_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_14_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_14_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_14_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_15_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_15_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_15_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_16_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_16_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_16_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal L2_WEIGHTS_V_17_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_17_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_17_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal L2_WEIGHTS_V_18_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_18_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_18_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal L2_WEIGHTS_V_19_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_19_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_19_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal L2_WEIGHTS_V_20_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_20_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_20_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal L2_WEIGHTS_V_21_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_21_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_21_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal L2_WEIGHTS_V_22_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_22_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_22_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_23_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_23_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_23_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_24_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_24_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_24_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal L2_WEIGHTS_V_25_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_25_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_25_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_26_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_26_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_26_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_27_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_27_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_27_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_28_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_28_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_28_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal L2_WEIGHTS_V_29_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_29_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_29_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_30_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_30_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_30_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_31_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_31_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_31_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_32_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_32_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_32_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_33_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_33_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_33_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal L2_WEIGHTS_V_34_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_34_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_34_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_35_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_35_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_35_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_36_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_36_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_36_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal L2_WEIGHTS_V_37_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_37_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_37_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_38_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_38_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_38_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_39_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_39_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_39_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_40_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_40_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_40_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal L2_WEIGHTS_V_41_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_41_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_41_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_42_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_42_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_42_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_43_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_43_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_43_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_44_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_44_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_44_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal L2_WEIGHTS_V_45_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_45_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_45_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_46_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_46_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_46_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal L2_WEIGHTS_V_47_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_47_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_47_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal L2_WEIGHTS_V_48_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_48_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_48_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_49_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_49_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_49_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_50_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_50_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_50_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_51_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_51_ce0 : STD_LOGIC;
    signal L2_WEIGHTS_V_51_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_0_reg_1276 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1116_fu_1287_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1116_reg_2957 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1116_1_fu_1291_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_1_reg_2962 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_2_fu_1295_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1116_2_reg_2967 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1116_3_fu_1299_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1116_3_reg_2972 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1116_4_fu_1303_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_4_reg_2977 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_5_fu_1307_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_5_reg_2982 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_6_fu_1311_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_6_reg_2987 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_7_fu_1315_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_7_reg_2992 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_8_fu_1319_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_8_reg_2997 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_9_fu_1323_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_9_reg_3002 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1192_1_fu_1327_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1192_1_reg_3007 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1192_fu_1331_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1192_reg_3012 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_10_fu_1335_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_10_reg_3017 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_11_fu_1339_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_11_reg_3022 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_12_fu_1343_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_12_reg_3027 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_13_fu_1347_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_13_reg_3032 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_14_fu_1351_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1116_14_reg_3037 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1116_15_fu_1355_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1116_15_reg_3042 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1116_16_fu_1359_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1116_16_reg_3047 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1116_17_fu_1363_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1116_17_reg_3052 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1116_18_fu_1367_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1116_18_reg_3057 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1116_19_fu_1371_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1116_19_reg_3062 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1116_20_fu_1375_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_20_reg_3067 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_21_fu_1379_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_21_reg_3072 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_22_fu_1383_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1116_22_reg_3077 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1116_23_fu_1387_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1116_23_reg_3082 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1116_24_fu_1391_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_24_reg_3087 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_25_fu_1395_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_25_reg_3092 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_26_fu_1399_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1116_26_reg_3097 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1116_27_fu_1403_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_27_reg_3102 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_28_fu_1407_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_28_reg_3107 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_29_fu_1411_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_29_reg_3112 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_30_fu_1415_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_30_reg_3117 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_31_fu_1419_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1116_31_reg_3122 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1116_32_fu_1423_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_32_reg_3127 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_33_fu_1427_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_33_reg_3132 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_34_fu_1431_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1116_34_reg_3137 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1116_35_fu_1435_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_35_reg_3142 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_36_fu_1439_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_36_reg_3147 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_37_fu_1443_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_37_reg_3152 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_38_fu_1447_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1116_38_reg_3157 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1116_39_fu_1451_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_39_reg_3162 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_40_fu_1455_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_40_reg_3167 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_41_fu_1459_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_41_reg_3172 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_42_fu_1463_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1116_42_reg_3177 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1116_43_fu_1467_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_43_reg_3182 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_44_fu_1471_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1116_44_reg_3187 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1116_45_fu_1475_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1116_45_reg_3192 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1116_46_fu_1479_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_46_reg_3197 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1116_47_fu_1483_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1116_47_reg_3202 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln638_fu_1487_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln638_reg_3207 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln638_1_fu_1491_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln638_1_reg_3212 : STD_LOGIC_VECTOR (24 downto 0);
    signal icmp_ln638_fu_1495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln638_reg_3217 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln638_reg_3217_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln638_reg_3217_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln638_reg_3217_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln638_reg_3217_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln638_reg_3217_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln638_reg_3217_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln638_reg_3217_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_1501_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_reg_3221 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal zext_ln642_fu_1507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln642_reg_3226 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln642_reg_3226_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln642_reg_3226_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln642_reg_3226_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln642_reg_3226_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln642_reg_3226_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln642_reg_3226_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln642_reg_3226_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal before_relu_V_reg_3320 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state27_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state31_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal L2_WEIGHTS_V_0_load_reg_3325 : STD_LOGIC_VECTOR (5 downto 0);
    signal L2_WEIGHTS_V_1_load_reg_3330 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_2_load_reg_3335 : STD_LOGIC_VECTOR (3 downto 0);
    signal L2_WEIGHTS_V_3_load_reg_3340 : STD_LOGIC_VECTOR (5 downto 0);
    signal L2_WEIGHTS_V_4_load_reg_3345 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_5_load_reg_3350 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_6_load_reg_3355 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_7_load_reg_3360 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_reg_3365 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state24_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state28_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_4_reg_3370 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state17_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state21_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state25_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state29_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tmp_6_reg_3375 : STD_LOGIC_VECTOR (15 downto 0);
    signal L2_WEIGHTS_V_8_load_reg_3420 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_reg_3425 : STD_LOGIC_VECTOR (15 downto 0);
    signal L2_WEIGHTS_V_9_load_reg_3430 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_10_load_reg_3435 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_11_load_reg_3440 : STD_LOGIC_VECTOR (9 downto 0);
    signal L2_WEIGHTS_V_12_load_reg_3445 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_13_load_reg_3450 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_14_load_reg_3455 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_15_load_reg_3460 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_reg_3465 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_reg_3470 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_reg_3475 : STD_LOGIC_VECTOR (15 downto 0);
    signal L2_WEIGHTS_V_16_load_reg_3520 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_reg_3525 : STD_LOGIC_VECTOR (15 downto 0);
    signal L2_WEIGHTS_V_17_load_reg_3530 : STD_LOGIC_VECTOR (4 downto 0);
    signal L2_WEIGHTS_V_18_load_reg_3535 : STD_LOGIC_VECTOR (4 downto 0);
    signal L2_WEIGHTS_V_19_load_reg_3540 : STD_LOGIC_VECTOR (5 downto 0);
    signal L2_WEIGHTS_V_20_load_reg_3545 : STD_LOGIC_VECTOR (4 downto 0);
    signal L2_WEIGHTS_V_21_load_reg_3550 : STD_LOGIC_VECTOR (5 downto 0);
    signal L2_WEIGHTS_V_22_load_reg_3555 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_23_load_reg_3560 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_16_reg_3565 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_reg_3570 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_reg_3575 : STD_LOGIC_VECTOR (15 downto 0);
    signal L2_WEIGHTS_V_24_load_reg_3620 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_22_reg_3625 : STD_LOGIC_VECTOR (15 downto 0);
    signal L2_WEIGHTS_V_25_load_reg_3630 : STD_LOGIC_VECTOR (6 downto 0);
    signal L2_WEIGHTS_V_26_load_reg_3635 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_27_load_reg_3640 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_28_load_reg_3645 : STD_LOGIC_VECTOR (3 downto 0);
    signal L2_WEIGHTS_V_29_load_reg_3650 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_30_load_reg_3655 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_31_load_reg_3660 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_24_reg_3665 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_reg_3670 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_reg_3675 : STD_LOGIC_VECTOR (15 downto 0);
    signal L2_WEIGHTS_V_32_load_reg_3720 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_30_reg_3725 : STD_LOGIC_VECTOR (15 downto 0);
    signal L2_WEIGHTS_V_33_load_reg_3730 : STD_LOGIC_VECTOR (3 downto 0);
    signal L2_WEIGHTS_V_34_load_reg_3735 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_35_load_reg_3740 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_36_load_reg_3745 : STD_LOGIC_VECTOR (5 downto 0);
    signal L2_WEIGHTS_V_37_load_reg_3750 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_38_load_reg_3755 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_39_load_reg_3760 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_32_reg_3765 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_reg_3770 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_reg_3775 : STD_LOGIC_VECTOR (15 downto 0);
    signal L2_WEIGHTS_V_40_load_reg_3820 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_38_reg_3825 : STD_LOGIC_VECTOR (15 downto 0);
    signal L2_WEIGHTS_V_41_load_reg_3830 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_42_load_reg_3835 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_43_load_reg_3840 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_44_load_reg_3845 : STD_LOGIC_VECTOR (4 downto 0);
    signal L2_WEIGHTS_V_45_load_reg_3850 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_46_load_reg_3855 : STD_LOGIC_VECTOR (5 downto 0);
    signal L2_WEIGHTS_V_47_load_reg_3860 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_40_reg_3865 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_42_reg_3870 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_44_reg_3875 : STD_LOGIC_VECTOR (15 downto 0);
    signal L2_WEIGHTS_V_48_load_reg_3900 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_46_reg_3905 : STD_LOGIC_VECTOR (15 downto 0);
    signal L2_WEIGHTS_V_49_load_reg_3910 : STD_LOGIC_VECTOR (8 downto 0);
    signal L2_WEIGHTS_V_50_load_reg_3915 : STD_LOGIC_VECTOR (7 downto 0);
    signal L2_WEIGHTS_V_51_load_reg_3920 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_47_reg_3925 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_48_reg_3930 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_49_reg_3935 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_phi_mux_i_0_phi_fu_1280_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal shl_ln_fu_1523_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2541_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_52_fu_1537_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_53_fu_1546_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_2549_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal grp_fu_2557_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_3_fu_1580_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2565_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2573_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_5_fu_1619_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2581_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2589_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_7_fu_1658_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2597_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2605_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_9_fu_1697_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2613_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2621_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_1_fu_1736_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2629_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2637_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_11_fu_1775_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2645_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2653_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_13_fu_1814_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2661_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2669_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_15_fu_1853_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2677_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2685_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_17_fu_1892_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2693_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2701_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_19_fu_1931_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2709_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2717_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_21_fu_1970_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2725_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2733_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_23_fu_2009_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2741_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2749_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_25_fu_2048_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2757_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2765_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_27_fu_2087_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2773_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2781_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_29_fu_2126_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2789_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2797_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_31_fu_2165_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2805_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2813_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_33_fu_2204_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2821_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2829_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_35_fu_2243_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2837_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2845_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_37_fu_2282_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2853_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2861_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_39_fu_2321_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2869_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2877_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_41_fu_2360_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2885_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2893_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_43_fu_2399_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2901_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2909_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_45_fu_2438_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2917_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2925_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2933_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2941_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2949_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2541_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2549_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2557_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2557_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2565_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2565_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2573_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2573_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2581_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2581_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2589_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2589_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2597_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2597_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2605_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2605_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2613_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2613_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2621_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2621_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2629_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2629_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2637_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2637_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2645_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2645_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2653_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2653_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2661_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2661_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2669_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2669_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2677_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2677_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2685_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2685_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2693_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2693_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2701_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2701_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2709_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2709_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2717_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2717_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2725_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2725_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2733_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2733_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2741_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2741_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2749_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2749_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2757_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2757_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2765_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2765_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2773_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2773_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2781_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2781_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2789_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2789_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2797_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2797_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2805_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2805_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2813_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2813_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2821_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2821_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2829_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2829_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2837_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2837_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2845_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2845_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2853_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2853_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2861_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2861_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2869_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2869_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2877_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2877_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2885_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2885_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2893_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2893_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2901_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2901_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2909_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2909_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2917_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2917_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2925_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2925_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2933_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2933_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2941_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2941_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_2949_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2949_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component DNN_wlo_166_mac_mcSB IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component DNN_wlo_166_mac_mcTB IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component DNN_wlo_166_mac_mcUB IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component DNN_wlo_166_mac_mcVB IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component DNN_wlo_166_mac_mb0s IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component DNN_wlo_166_mac_mcWB IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component DNN_wlo_166_mac_mbZs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component DNN_wlo_166_mac_mcXB IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component DNN_wlo_166_mac_mcYC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component L3_wlo_166_L2_BIAb1s IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIb2s IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIb3s IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIb4t IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIb5t IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIb6t IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIb7t IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIb8t IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIb9t IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcau IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcbu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIccu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcdu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIceu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcfu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcgu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIchv IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIciv IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcjv IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIckv IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIclv IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcmv IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcnw IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcow IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcpw IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcqw IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcrw IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcsw IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIctx IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcux IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcvx IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcwx IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcxx IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcyx IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIczy IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcAy IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcBy IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcCy IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcDy IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcEy IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcFz IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcGz IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcHz IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcIz IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcJz IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcKz IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcLz IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcMA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcNA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcOA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcPA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcQA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component L3_wlo_166_L2_WEIcRA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;



begin
    L2_BIAS_V_U : component L3_wlo_166_L2_BIAb1s
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_BIAS_V_address0,
        ce0 => L2_BIAS_V_ce0,
        q0 => L2_BIAS_V_q0);

    L2_WEIGHTS_V_0_U : component L3_wlo_166_L2_WEIb2s
    generic map (
        DataWidth => 6,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_0_address0,
        ce0 => L2_WEIGHTS_V_0_ce0,
        q0 => L2_WEIGHTS_V_0_q0);

    L2_WEIGHTS_V_1_U : component L3_wlo_166_L2_WEIb3s
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_1_address0,
        ce0 => L2_WEIGHTS_V_1_ce0,
        q0 => L2_WEIGHTS_V_1_q0);

    L2_WEIGHTS_V_2_U : component L3_wlo_166_L2_WEIb4t
    generic map (
        DataWidth => 4,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_2_address0,
        ce0 => L2_WEIGHTS_V_2_ce0,
        q0 => L2_WEIGHTS_V_2_q0);

    L2_WEIGHTS_V_3_U : component L3_wlo_166_L2_WEIb5t
    generic map (
        DataWidth => 6,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_3_address0,
        ce0 => L2_WEIGHTS_V_3_ce0,
        q0 => L2_WEIGHTS_V_3_q0);

    L2_WEIGHTS_V_4_U : component L3_wlo_166_L2_WEIb6t
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_4_address0,
        ce0 => L2_WEIGHTS_V_4_ce0,
        q0 => L2_WEIGHTS_V_4_q0);

    L2_WEIGHTS_V_5_U : component L3_wlo_166_L2_WEIb7t
    generic map (
        DataWidth => 8,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_5_address0,
        ce0 => L2_WEIGHTS_V_5_ce0,
        q0 => L2_WEIGHTS_V_5_q0);

    L2_WEIGHTS_V_6_U : component L3_wlo_166_L2_WEIb8t
    generic map (
        DataWidth => 8,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_6_address0,
        ce0 => L2_WEIGHTS_V_6_ce0,
        q0 => L2_WEIGHTS_V_6_q0);

    L2_WEIGHTS_V_7_U : component L3_wlo_166_L2_WEIb9t
    generic map (
        DataWidth => 8,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_7_address0,
        ce0 => L2_WEIGHTS_V_7_ce0,
        q0 => L2_WEIGHTS_V_7_q0);

    L2_WEIGHTS_V_8_U : component L3_wlo_166_L2_WEIcau
    generic map (
        DataWidth => 8,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_8_address0,
        ce0 => L2_WEIGHTS_V_8_ce0,
        q0 => L2_WEIGHTS_V_8_q0);

    L2_WEIGHTS_V_9_U : component L3_wlo_166_L2_WEIcbu
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_9_address0,
        ce0 => L2_WEIGHTS_V_9_ce0,
        q0 => L2_WEIGHTS_V_9_q0);

    L2_WEIGHTS_V_10_U : component L3_wlo_166_L2_WEIccu
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_10_address0,
        ce0 => L2_WEIGHTS_V_10_ce0,
        q0 => L2_WEIGHTS_V_10_q0);

    L2_WEIGHTS_V_11_U : component L3_wlo_166_L2_WEIcdu
    generic map (
        DataWidth => 10,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_11_address0,
        ce0 => L2_WEIGHTS_V_11_ce0,
        q0 => L2_WEIGHTS_V_11_q0);

    L2_WEIGHTS_V_12_U : component L3_wlo_166_L2_WEIceu
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_12_address0,
        ce0 => L2_WEIGHTS_V_12_ce0,
        q0 => L2_WEIGHTS_V_12_q0);

    L2_WEIGHTS_V_13_U : component L3_wlo_166_L2_WEIcfu
    generic map (
        DataWidth => 8,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_13_address0,
        ce0 => L2_WEIGHTS_V_13_ce0,
        q0 => L2_WEIGHTS_V_13_q0);

    L2_WEIGHTS_V_14_U : component L3_wlo_166_L2_WEIcgu
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_14_address0,
        ce0 => L2_WEIGHTS_V_14_ce0,
        q0 => L2_WEIGHTS_V_14_q0);

    L2_WEIGHTS_V_15_U : component L3_wlo_166_L2_WEIchv
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_15_address0,
        ce0 => L2_WEIGHTS_V_15_ce0,
        q0 => L2_WEIGHTS_V_15_q0);

    L2_WEIGHTS_V_16_U : component L3_wlo_166_L2_WEIciv
    generic map (
        DataWidth => 6,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_16_address0,
        ce0 => L2_WEIGHTS_V_16_ce0,
        q0 => L2_WEIGHTS_V_16_q0);

    L2_WEIGHTS_V_17_U : component L3_wlo_166_L2_WEIcjv
    generic map (
        DataWidth => 5,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_17_address0,
        ce0 => L2_WEIGHTS_V_17_ce0,
        q0 => L2_WEIGHTS_V_17_q0);

    L2_WEIGHTS_V_18_U : component L3_wlo_166_L2_WEIckv
    generic map (
        DataWidth => 5,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_18_address0,
        ce0 => L2_WEIGHTS_V_18_ce0,
        q0 => L2_WEIGHTS_V_18_q0);

    L2_WEIGHTS_V_19_U : component L3_wlo_166_L2_WEIclv
    generic map (
        DataWidth => 6,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_19_address0,
        ce0 => L2_WEIGHTS_V_19_ce0,
        q0 => L2_WEIGHTS_V_19_q0);

    L2_WEIGHTS_V_20_U : component L3_wlo_166_L2_WEIcmv
    generic map (
        DataWidth => 5,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_20_address0,
        ce0 => L2_WEIGHTS_V_20_ce0,
        q0 => L2_WEIGHTS_V_20_q0);

    L2_WEIGHTS_V_21_U : component L3_wlo_166_L2_WEIcnw
    generic map (
        DataWidth => 6,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_21_address0,
        ce0 => L2_WEIGHTS_V_21_ce0,
        q0 => L2_WEIGHTS_V_21_q0);

    L2_WEIGHTS_V_22_U : component L3_wlo_166_L2_WEIcow
    generic map (
        DataWidth => 8,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_22_address0,
        ce0 => L2_WEIGHTS_V_22_ce0,
        q0 => L2_WEIGHTS_V_22_q0);

    L2_WEIGHTS_V_23_U : component L3_wlo_166_L2_WEIcpw
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_23_address0,
        ce0 => L2_WEIGHTS_V_23_ce0,
        q0 => L2_WEIGHTS_V_23_q0);

    L2_WEIGHTS_V_24_U : component L3_wlo_166_L2_WEIcqw
    generic map (
        DataWidth => 5,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_24_address0,
        ce0 => L2_WEIGHTS_V_24_ce0,
        q0 => L2_WEIGHTS_V_24_q0);

    L2_WEIGHTS_V_25_U : component L3_wlo_166_L2_WEIcrw
    generic map (
        DataWidth => 7,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_25_address0,
        ce0 => L2_WEIGHTS_V_25_ce0,
        q0 => L2_WEIGHTS_V_25_q0);

    L2_WEIGHTS_V_26_U : component L3_wlo_166_L2_WEIcsw
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_26_address0,
        ce0 => L2_WEIGHTS_V_26_ce0,
        q0 => L2_WEIGHTS_V_26_q0);

    L2_WEIGHTS_V_27_U : component L3_wlo_166_L2_WEIctx
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_27_address0,
        ce0 => L2_WEIGHTS_V_27_ce0,
        q0 => L2_WEIGHTS_V_27_q0);

    L2_WEIGHTS_V_28_U : component L3_wlo_166_L2_WEIcux
    generic map (
        DataWidth => 4,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_28_address0,
        ce0 => L2_WEIGHTS_V_28_ce0,
        q0 => L2_WEIGHTS_V_28_q0);

    L2_WEIGHTS_V_29_U : component L3_wlo_166_L2_WEIcvx
    generic map (
        DataWidth => 8,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_29_address0,
        ce0 => L2_WEIGHTS_V_29_ce0,
        q0 => L2_WEIGHTS_V_29_q0);

    L2_WEIGHTS_V_30_U : component L3_wlo_166_L2_WEIcwx
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_30_address0,
        ce0 => L2_WEIGHTS_V_30_ce0,
        q0 => L2_WEIGHTS_V_30_q0);

    L2_WEIGHTS_V_31_U : component L3_wlo_166_L2_WEIcxx
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_31_address0,
        ce0 => L2_WEIGHTS_V_31_ce0,
        q0 => L2_WEIGHTS_V_31_q0);

    L2_WEIGHTS_V_32_U : component L3_wlo_166_L2_WEIcyx
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_32_address0,
        ce0 => L2_WEIGHTS_V_32_ce0,
        q0 => L2_WEIGHTS_V_32_q0);

    L2_WEIGHTS_V_33_U : component L3_wlo_166_L2_WEIczy
    generic map (
        DataWidth => 4,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_33_address0,
        ce0 => L2_WEIGHTS_V_33_ce0,
        q0 => L2_WEIGHTS_V_33_q0);

    L2_WEIGHTS_V_34_U : component L3_wlo_166_L2_WEIcAy
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_34_address0,
        ce0 => L2_WEIGHTS_V_34_ce0,
        q0 => L2_WEIGHTS_V_34_q0);

    L2_WEIGHTS_V_35_U : component L3_wlo_166_L2_WEIcBy
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_35_address0,
        ce0 => L2_WEIGHTS_V_35_ce0,
        q0 => L2_WEIGHTS_V_35_q0);

    L2_WEIGHTS_V_36_U : component L3_wlo_166_L2_WEIcCy
    generic map (
        DataWidth => 6,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_36_address0,
        ce0 => L2_WEIGHTS_V_36_ce0,
        q0 => L2_WEIGHTS_V_36_q0);

    L2_WEIGHTS_V_37_U : component L3_wlo_166_L2_WEIcDy
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_37_address0,
        ce0 => L2_WEIGHTS_V_37_ce0,
        q0 => L2_WEIGHTS_V_37_q0);

    L2_WEIGHTS_V_38_U : component L3_wlo_166_L2_WEIcEy
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_38_address0,
        ce0 => L2_WEIGHTS_V_38_ce0,
        q0 => L2_WEIGHTS_V_38_q0);

    L2_WEIGHTS_V_39_U : component L3_wlo_166_L2_WEIcFz
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_39_address0,
        ce0 => L2_WEIGHTS_V_39_ce0,
        q0 => L2_WEIGHTS_V_39_q0);

    L2_WEIGHTS_V_40_U : component L3_wlo_166_L2_WEIcGz
    generic map (
        DataWidth => 5,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_40_address0,
        ce0 => L2_WEIGHTS_V_40_ce0,
        q0 => L2_WEIGHTS_V_40_q0);

    L2_WEIGHTS_V_41_U : component L3_wlo_166_L2_WEIcHz
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_41_address0,
        ce0 => L2_WEIGHTS_V_41_ce0,
        q0 => L2_WEIGHTS_V_41_q0);

    L2_WEIGHTS_V_42_U : component L3_wlo_166_L2_WEIcIz
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_42_address0,
        ce0 => L2_WEIGHTS_V_42_ce0,
        q0 => L2_WEIGHTS_V_42_q0);

    L2_WEIGHTS_V_43_U : component L3_wlo_166_L2_WEIcJz
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_43_address0,
        ce0 => L2_WEIGHTS_V_43_ce0,
        q0 => L2_WEIGHTS_V_43_q0);

    L2_WEIGHTS_V_44_U : component L3_wlo_166_L2_WEIcKz
    generic map (
        DataWidth => 5,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_44_address0,
        ce0 => L2_WEIGHTS_V_44_ce0,
        q0 => L2_WEIGHTS_V_44_q0);

    L2_WEIGHTS_V_45_U : component L3_wlo_166_L2_WEIcLz
    generic map (
        DataWidth => 8,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_45_address0,
        ce0 => L2_WEIGHTS_V_45_ce0,
        q0 => L2_WEIGHTS_V_45_q0);

    L2_WEIGHTS_V_46_U : component L3_wlo_166_L2_WEIcMA
    generic map (
        DataWidth => 6,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_46_address0,
        ce0 => L2_WEIGHTS_V_46_ce0,
        q0 => L2_WEIGHTS_V_46_q0);

    L2_WEIGHTS_V_47_U : component L3_wlo_166_L2_WEIcNA
    generic map (
        DataWidth => 5,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_47_address0,
        ce0 => L2_WEIGHTS_V_47_ce0,
        q0 => L2_WEIGHTS_V_47_q0);

    L2_WEIGHTS_V_48_U : component L3_wlo_166_L2_WEIcOA
    generic map (
        DataWidth => 8,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_48_address0,
        ce0 => L2_WEIGHTS_V_48_ce0,
        q0 => L2_WEIGHTS_V_48_q0);

    L2_WEIGHTS_V_49_U : component L3_wlo_166_L2_WEIcPA
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_49_address0,
        ce0 => L2_WEIGHTS_V_49_ce0,
        q0 => L2_WEIGHTS_V_49_q0);

    L2_WEIGHTS_V_50_U : component L3_wlo_166_L2_WEIcQA
    generic map (
        DataWidth => 8,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_50_address0,
        ce0 => L2_WEIGHTS_V_50_ce0,
        q0 => L2_WEIGHTS_V_50_q0);

    L2_WEIGHTS_V_51_U : component L3_wlo_166_L2_WEIcRA
    generic map (
        DataWidth => 9,
        AddressRange => 104,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L2_WEIGHTS_V_51_address0,
        ce0 => L2_WEIGHTS_V_51_ce0,
        q0 => L2_WEIGHTS_V_51_q0);

    DNN_wlo_166_mac_mcSB_U332 : component DNN_wlo_166_mac_mcSB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 6,
        din2_WIDTH => 19,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_2541_p0,
        din1 => L2_WEIGHTS_V_0_load_reg_3325,
        din2 => shl_ln_fu_1523_p3,
        dout => grp_fu_2541_p3);

    DNN_wlo_166_mac_mcTB_U333 : component DNN_wlo_166_mac_mcTB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 22,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2549_p0,
        din1 => L2_WEIGHTS_V_1_load_reg_3330,
        din2 => tmp_53_fu_1546_p3,
        dout => grp_fu_2549_p3);

    DNN_wlo_166_mac_mcUB_U334 : component DNN_wlo_166_mac_mcUB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 4,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2557_p0,
        din1 => L2_WEIGHTS_V_2_load_reg_3335,
        din2 => grp_fu_2557_p2,
        dout => grp_fu_2557_p3);

    DNN_wlo_166_mac_mcVB_U335 : component DNN_wlo_166_mac_mcVB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 6,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2565_p0,
        din1 => L2_WEIGHTS_V_3_load_reg_3340,
        din2 => grp_fu_2565_p2,
        dout => grp_fu_2565_p3);

    DNN_wlo_166_mac_mb0s_U336 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2573_p0,
        din1 => L2_WEIGHTS_V_4_load_reg_3345,
        din2 => grp_fu_2573_p2,
        dout => grp_fu_2573_p3);

    DNN_wlo_166_mac_mcWB_U337 : component DNN_wlo_166_mac_mcWB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2581_p0,
        din1 => L2_WEIGHTS_V_5_load_reg_3350,
        din2 => grp_fu_2581_p2,
        dout => grp_fu_2581_p3);

    DNN_wlo_166_mac_mcWB_U338 : component DNN_wlo_166_mac_mcWB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2589_p0,
        din1 => L2_WEIGHTS_V_6_load_reg_3355,
        din2 => grp_fu_2589_p2,
        dout => grp_fu_2589_p3);

    DNN_wlo_166_mac_mcWB_U339 : component DNN_wlo_166_mac_mcWB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2597_p0,
        din1 => L2_WEIGHTS_V_7_load_reg_3360,
        din2 => grp_fu_2597_p2,
        dout => grp_fu_2597_p3);

    DNN_wlo_166_mac_mcWB_U340 : component DNN_wlo_166_mac_mcWB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2605_p0,
        din1 => L2_WEIGHTS_V_8_load_reg_3420,
        din2 => grp_fu_2605_p2,
        dout => grp_fu_2605_p3);

    DNN_wlo_166_mac_mb0s_U341 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2613_p0,
        din1 => L2_WEIGHTS_V_9_load_reg_3430,
        din2 => grp_fu_2613_p2,
        dout => grp_fu_2613_p3);

    DNN_wlo_166_mac_mb0s_U342 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2621_p0,
        din1 => L2_WEIGHTS_V_10_load_reg_3435,
        din2 => grp_fu_2621_p2,
        dout => grp_fu_2621_p3);

    DNN_wlo_166_mac_mbZs_U343 : component DNN_wlo_166_mac_mbZs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 10,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2629_p0,
        din1 => L2_WEIGHTS_V_11_load_reg_3440,
        din2 => grp_fu_2629_p2,
        dout => grp_fu_2629_p3);

    DNN_wlo_166_mac_mb0s_U344 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2637_p0,
        din1 => L2_WEIGHTS_V_12_load_reg_3445,
        din2 => grp_fu_2637_p2,
        dout => grp_fu_2637_p3);

    DNN_wlo_166_mac_mcWB_U345 : component DNN_wlo_166_mac_mcWB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2645_p0,
        din1 => L2_WEIGHTS_V_13_load_reg_3450,
        din2 => grp_fu_2645_p2,
        dout => grp_fu_2645_p3);

    DNN_wlo_166_mac_mb0s_U346 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2653_p0,
        din1 => L2_WEIGHTS_V_14_load_reg_3455,
        din2 => grp_fu_2653_p2,
        dout => grp_fu_2653_p3);

    DNN_wlo_166_mac_mb0s_U347 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2661_p0,
        din1 => L2_WEIGHTS_V_15_load_reg_3460,
        din2 => grp_fu_2661_p2,
        dout => grp_fu_2661_p3);

    DNN_wlo_166_mac_mcVB_U348 : component DNN_wlo_166_mac_mcVB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 6,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2669_p0,
        din1 => L2_WEIGHTS_V_16_load_reg_3520,
        din2 => grp_fu_2669_p2,
        dout => grp_fu_2669_p3);

    DNN_wlo_166_mac_mcXB_U349 : component DNN_wlo_166_mac_mcXB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 5,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2677_p0,
        din1 => L2_WEIGHTS_V_17_load_reg_3530,
        din2 => grp_fu_2677_p2,
        dout => grp_fu_2677_p3);

    DNN_wlo_166_mac_mcXB_U350 : component DNN_wlo_166_mac_mcXB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 5,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2685_p0,
        din1 => L2_WEIGHTS_V_18_load_reg_3535,
        din2 => grp_fu_2685_p2,
        dout => grp_fu_2685_p3);

    DNN_wlo_166_mac_mcVB_U351 : component DNN_wlo_166_mac_mcVB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 6,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2693_p0,
        din1 => L2_WEIGHTS_V_19_load_reg_3540,
        din2 => grp_fu_2693_p2,
        dout => grp_fu_2693_p3);

    DNN_wlo_166_mac_mcXB_U352 : component DNN_wlo_166_mac_mcXB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 5,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2701_p0,
        din1 => L2_WEIGHTS_V_20_load_reg_3545,
        din2 => grp_fu_2701_p2,
        dout => grp_fu_2701_p3);

    DNN_wlo_166_mac_mcVB_U353 : component DNN_wlo_166_mac_mcVB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 6,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2709_p0,
        din1 => L2_WEIGHTS_V_21_load_reg_3550,
        din2 => grp_fu_2709_p2,
        dout => grp_fu_2709_p3);

    DNN_wlo_166_mac_mcWB_U354 : component DNN_wlo_166_mac_mcWB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2717_p0,
        din1 => L2_WEIGHTS_V_22_load_reg_3555,
        din2 => grp_fu_2717_p2,
        dout => grp_fu_2717_p3);

    DNN_wlo_166_mac_mb0s_U355 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2725_p0,
        din1 => L2_WEIGHTS_V_23_load_reg_3560,
        din2 => grp_fu_2725_p2,
        dout => grp_fu_2725_p3);

    DNN_wlo_166_mac_mcXB_U356 : component DNN_wlo_166_mac_mcXB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 5,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2733_p0,
        din1 => L2_WEIGHTS_V_24_load_reg_3620,
        din2 => grp_fu_2733_p2,
        dout => grp_fu_2733_p3);

    DNN_wlo_166_mac_mcYC_U357 : component DNN_wlo_166_mac_mcYC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 7,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2741_p0,
        din1 => L2_WEIGHTS_V_25_load_reg_3630,
        din2 => grp_fu_2741_p2,
        dout => grp_fu_2741_p3);

    DNN_wlo_166_mac_mb0s_U358 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2749_p0,
        din1 => L2_WEIGHTS_V_26_load_reg_3635,
        din2 => grp_fu_2749_p2,
        dout => grp_fu_2749_p3);

    DNN_wlo_166_mac_mb0s_U359 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2757_p0,
        din1 => L2_WEIGHTS_V_27_load_reg_3640,
        din2 => grp_fu_2757_p2,
        dout => grp_fu_2757_p3);

    DNN_wlo_166_mac_mcUB_U360 : component DNN_wlo_166_mac_mcUB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 4,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2765_p0,
        din1 => L2_WEIGHTS_V_28_load_reg_3645,
        din2 => grp_fu_2765_p2,
        dout => grp_fu_2765_p3);

    DNN_wlo_166_mac_mcWB_U361 : component DNN_wlo_166_mac_mcWB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2773_p0,
        din1 => L2_WEIGHTS_V_29_load_reg_3650,
        din2 => grp_fu_2773_p2,
        dout => grp_fu_2773_p3);

    DNN_wlo_166_mac_mb0s_U362 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2781_p0,
        din1 => L2_WEIGHTS_V_30_load_reg_3655,
        din2 => grp_fu_2781_p2,
        dout => grp_fu_2781_p3);

    DNN_wlo_166_mac_mb0s_U363 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2789_p0,
        din1 => L2_WEIGHTS_V_31_load_reg_3660,
        din2 => grp_fu_2789_p2,
        dout => grp_fu_2789_p3);

    DNN_wlo_166_mac_mb0s_U364 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2797_p0,
        din1 => L2_WEIGHTS_V_32_load_reg_3720,
        din2 => grp_fu_2797_p2,
        dout => grp_fu_2797_p3);

    DNN_wlo_166_mac_mcUB_U365 : component DNN_wlo_166_mac_mcUB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 4,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2805_p0,
        din1 => L2_WEIGHTS_V_33_load_reg_3730,
        din2 => grp_fu_2805_p2,
        dout => grp_fu_2805_p3);

    DNN_wlo_166_mac_mb0s_U366 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2813_p0,
        din1 => L2_WEIGHTS_V_34_load_reg_3735,
        din2 => grp_fu_2813_p2,
        dout => grp_fu_2813_p3);

    DNN_wlo_166_mac_mb0s_U367 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2821_p0,
        din1 => L2_WEIGHTS_V_35_load_reg_3740,
        din2 => grp_fu_2821_p2,
        dout => grp_fu_2821_p3);

    DNN_wlo_166_mac_mcVB_U368 : component DNN_wlo_166_mac_mcVB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 6,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2829_p0,
        din1 => L2_WEIGHTS_V_36_load_reg_3745,
        din2 => grp_fu_2829_p2,
        dout => grp_fu_2829_p3);

    DNN_wlo_166_mac_mb0s_U369 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2837_p0,
        din1 => L2_WEIGHTS_V_37_load_reg_3750,
        din2 => grp_fu_2837_p2,
        dout => grp_fu_2837_p3);

    DNN_wlo_166_mac_mb0s_U370 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2845_p0,
        din1 => L2_WEIGHTS_V_38_load_reg_3755,
        din2 => grp_fu_2845_p2,
        dout => grp_fu_2845_p3);

    DNN_wlo_166_mac_mb0s_U371 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2853_p0,
        din1 => L2_WEIGHTS_V_39_load_reg_3760,
        din2 => grp_fu_2853_p2,
        dout => grp_fu_2853_p3);

    DNN_wlo_166_mac_mcXB_U372 : component DNN_wlo_166_mac_mcXB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 5,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2861_p0,
        din1 => L2_WEIGHTS_V_40_load_reg_3820,
        din2 => grp_fu_2861_p2,
        dout => grp_fu_2861_p3);

    DNN_wlo_166_mac_mb0s_U373 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2869_p0,
        din1 => L2_WEIGHTS_V_41_load_reg_3830,
        din2 => grp_fu_2869_p2,
        dout => grp_fu_2869_p3);

    DNN_wlo_166_mac_mb0s_U374 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2877_p0,
        din1 => L2_WEIGHTS_V_42_load_reg_3835,
        din2 => grp_fu_2877_p2,
        dout => grp_fu_2877_p3);

    DNN_wlo_166_mac_mb0s_U375 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2885_p0,
        din1 => L2_WEIGHTS_V_43_load_reg_3840,
        din2 => grp_fu_2885_p2,
        dout => grp_fu_2885_p3);

    DNN_wlo_166_mac_mcXB_U376 : component DNN_wlo_166_mac_mcXB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 5,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2893_p0,
        din1 => L2_WEIGHTS_V_44_load_reg_3845,
        din2 => grp_fu_2893_p2,
        dout => grp_fu_2893_p3);

    DNN_wlo_166_mac_mcWB_U377 : component DNN_wlo_166_mac_mcWB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2901_p0,
        din1 => L2_WEIGHTS_V_45_load_reg_3850,
        din2 => grp_fu_2901_p2,
        dout => grp_fu_2901_p3);

    DNN_wlo_166_mac_mcVB_U378 : component DNN_wlo_166_mac_mcVB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 6,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2909_p0,
        din1 => L2_WEIGHTS_V_46_load_reg_3855,
        din2 => grp_fu_2909_p2,
        dout => grp_fu_2909_p3);

    DNN_wlo_166_mac_mcXB_U379 : component DNN_wlo_166_mac_mcXB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 5,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2917_p0,
        din1 => L2_WEIGHTS_V_47_load_reg_3860,
        din2 => grp_fu_2917_p2,
        dout => grp_fu_2917_p3);

    DNN_wlo_166_mac_mcWB_U380 : component DNN_wlo_166_mac_mcWB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2925_p0,
        din1 => L2_WEIGHTS_V_48_load_reg_3900,
        din2 => grp_fu_2925_p2,
        dout => grp_fu_2925_p3);

    DNN_wlo_166_mac_mb0s_U381 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2933_p0,
        din1 => L2_WEIGHTS_V_49_load_reg_3910,
        din2 => grp_fu_2933_p2,
        dout => grp_fu_2933_p3);

    DNN_wlo_166_mac_mcWB_U382 : component DNN_wlo_166_mac_mcWB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2941_p0,
        din1 => L2_WEIGHTS_V_50_load_reg_3915,
        din2 => grp_fu_2941_p2,
        dout => grp_fu_2941_p3);

    DNN_wlo_166_mac_mb0s_U383 : component DNN_wlo_166_mac_mb0s
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_2949_p0,
        din1 => L2_WEIGHTS_V_51_load_reg_3920,
        din2 => grp_fu_2949_p2,
        dout => grp_fu_2949_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_1276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln638_reg_3217 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_0_reg_1276 <= i_reg_3221;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_1276 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln638_reg_3217 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                L2_WEIGHTS_V_0_load_reg_3325 <= L2_WEIGHTS_V_0_q0;
                L2_WEIGHTS_V_1_load_reg_3330 <= L2_WEIGHTS_V_1_q0;
                L2_WEIGHTS_V_2_load_reg_3335 <= L2_WEIGHTS_V_2_q0;
                L2_WEIGHTS_V_3_load_reg_3340 <= L2_WEIGHTS_V_3_q0;
                L2_WEIGHTS_V_4_load_reg_3345 <= L2_WEIGHTS_V_4_q0;
                L2_WEIGHTS_V_5_load_reg_3350 <= L2_WEIGHTS_V_5_q0;
                L2_WEIGHTS_V_6_load_reg_3355 <= L2_WEIGHTS_V_6_q0;
                L2_WEIGHTS_V_7_load_reg_3360 <= L2_WEIGHTS_V_7_q0;
                before_relu_V_reg_3320 <= L2_BIAS_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln638_reg_3217_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                L2_WEIGHTS_V_10_load_reg_3435 <= L2_WEIGHTS_V_10_q0;
                L2_WEIGHTS_V_11_load_reg_3440 <= L2_WEIGHTS_V_11_q0;
                L2_WEIGHTS_V_12_load_reg_3445 <= L2_WEIGHTS_V_12_q0;
                L2_WEIGHTS_V_13_load_reg_3450 <= L2_WEIGHTS_V_13_q0;
                L2_WEIGHTS_V_14_load_reg_3455 <= L2_WEIGHTS_V_14_q0;
                L2_WEIGHTS_V_15_load_reg_3460 <= L2_WEIGHTS_V_15_q0;
                L2_WEIGHTS_V_8_load_reg_3420 <= L2_WEIGHTS_V_8_q0;
                L2_WEIGHTS_V_9_load_reg_3430 <= L2_WEIGHTS_V_9_q0;
                tmp_8_reg_3425 <= grp_fu_2597_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln638_reg_3217_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                L2_WEIGHTS_V_16_load_reg_3520 <= L2_WEIGHTS_V_16_q0;
                L2_WEIGHTS_V_17_load_reg_3530 <= L2_WEIGHTS_V_17_q0;
                L2_WEIGHTS_V_18_load_reg_3535 <= L2_WEIGHTS_V_18_q0;
                L2_WEIGHTS_V_19_load_reg_3540 <= L2_WEIGHTS_V_19_q0;
                L2_WEIGHTS_V_20_load_reg_3545 <= L2_WEIGHTS_V_20_q0;
                L2_WEIGHTS_V_21_load_reg_3550 <= L2_WEIGHTS_V_21_q0;
                L2_WEIGHTS_V_22_load_reg_3555 <= L2_WEIGHTS_V_22_q0;
                L2_WEIGHTS_V_23_load_reg_3560 <= L2_WEIGHTS_V_23_q0;
                tmp_14_reg_3525 <= grp_fu_2661_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln638_reg_3217_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                L2_WEIGHTS_V_24_load_reg_3620 <= L2_WEIGHTS_V_24_q0;
                L2_WEIGHTS_V_25_load_reg_3630 <= L2_WEIGHTS_V_25_q0;
                L2_WEIGHTS_V_26_load_reg_3635 <= L2_WEIGHTS_V_26_q0;
                L2_WEIGHTS_V_27_load_reg_3640 <= L2_WEIGHTS_V_27_q0;
                L2_WEIGHTS_V_28_load_reg_3645 <= L2_WEIGHTS_V_28_q0;
                L2_WEIGHTS_V_29_load_reg_3650 <= L2_WEIGHTS_V_29_q0;
                L2_WEIGHTS_V_30_load_reg_3655 <= L2_WEIGHTS_V_30_q0;
                L2_WEIGHTS_V_31_load_reg_3660 <= L2_WEIGHTS_V_31_q0;
                tmp_22_reg_3625 <= grp_fu_2725_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln638_reg_3217_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                L2_WEIGHTS_V_32_load_reg_3720 <= L2_WEIGHTS_V_32_q0;
                L2_WEIGHTS_V_33_load_reg_3730 <= L2_WEIGHTS_V_33_q0;
                L2_WEIGHTS_V_34_load_reg_3735 <= L2_WEIGHTS_V_34_q0;
                L2_WEIGHTS_V_35_load_reg_3740 <= L2_WEIGHTS_V_35_q0;
                L2_WEIGHTS_V_36_load_reg_3745 <= L2_WEIGHTS_V_36_q0;
                L2_WEIGHTS_V_37_load_reg_3750 <= L2_WEIGHTS_V_37_q0;
                L2_WEIGHTS_V_38_load_reg_3755 <= L2_WEIGHTS_V_38_q0;
                L2_WEIGHTS_V_39_load_reg_3760 <= L2_WEIGHTS_V_39_q0;
                tmp_30_reg_3725 <= grp_fu_2789_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln638_reg_3217_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                L2_WEIGHTS_V_40_load_reg_3820 <= L2_WEIGHTS_V_40_q0;
                L2_WEIGHTS_V_41_load_reg_3830 <= L2_WEIGHTS_V_41_q0;
                L2_WEIGHTS_V_42_load_reg_3835 <= L2_WEIGHTS_V_42_q0;
                L2_WEIGHTS_V_43_load_reg_3840 <= L2_WEIGHTS_V_43_q0;
                L2_WEIGHTS_V_44_load_reg_3845 <= L2_WEIGHTS_V_44_q0;
                L2_WEIGHTS_V_45_load_reg_3850 <= L2_WEIGHTS_V_45_q0;
                L2_WEIGHTS_V_46_load_reg_3855 <= L2_WEIGHTS_V_46_q0;
                L2_WEIGHTS_V_47_load_reg_3860 <= L2_WEIGHTS_V_47_q0;
                tmp_38_reg_3825 <= grp_fu_2853_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln638_reg_3217_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                L2_WEIGHTS_V_48_load_reg_3900 <= L2_WEIGHTS_V_48_q0;
                L2_WEIGHTS_V_49_load_reg_3910 <= L2_WEIGHTS_V_49_q0;
                L2_WEIGHTS_V_50_load_reg_3915 <= L2_WEIGHTS_V_50_q0;
                L2_WEIGHTS_V_51_load_reg_3920 <= L2_WEIGHTS_V_51_q0;
                tmp_46_reg_3905 <= grp_fu_2917_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_reg_3221 <= i_fu_1501_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln638_reg_3217 <= icmp_ln638_fu_1495_p2;
                icmp_ln638_reg_3217_pp0_iter1_reg <= icmp_ln638_reg_3217;
                icmp_ln638_reg_3217_pp0_iter2_reg <= icmp_ln638_reg_3217_pp0_iter1_reg;
                icmp_ln638_reg_3217_pp0_iter3_reg <= icmp_ln638_reg_3217_pp0_iter2_reg;
                icmp_ln638_reg_3217_pp0_iter4_reg <= icmp_ln638_reg_3217_pp0_iter3_reg;
                icmp_ln638_reg_3217_pp0_iter5_reg <= icmp_ln638_reg_3217_pp0_iter4_reg;
                icmp_ln638_reg_3217_pp0_iter6_reg <= icmp_ln638_reg_3217_pp0_iter5_reg;
                icmp_ln638_reg_3217_pp0_iter7_reg <= icmp_ln638_reg_3217_pp0_iter6_reg;
                    zext_ln642_reg_3226_pp0_iter1_reg(6 downto 0) <= zext_ln642_reg_3226(6 downto 0);
                    zext_ln642_reg_3226_pp0_iter2_reg(6 downto 0) <= zext_ln642_reg_3226_pp0_iter1_reg(6 downto 0);
                    zext_ln642_reg_3226_pp0_iter3_reg(6 downto 0) <= zext_ln642_reg_3226_pp0_iter2_reg(6 downto 0);
                    zext_ln642_reg_3226_pp0_iter4_reg(6 downto 0) <= zext_ln642_reg_3226_pp0_iter3_reg(6 downto 0);
                    zext_ln642_reg_3226_pp0_iter5_reg(6 downto 0) <= zext_ln642_reg_3226_pp0_iter4_reg(6 downto 0);
                    zext_ln642_reg_3226_pp0_iter6_reg(6 downto 0) <= zext_ln642_reg_3226_pp0_iter5_reg(6 downto 0);
                    zext_ln642_reg_3226_pp0_iter7_reg(6 downto 0) <= zext_ln642_reg_3226_pp0_iter6_reg(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                sext_ln1116_10_reg_3017 <= sext_ln1116_10_fu_1335_p1;
                sext_ln1116_11_reg_3022 <= sext_ln1116_11_fu_1339_p1;
                sext_ln1116_12_reg_3027 <= sext_ln1116_12_fu_1343_p1;
                sext_ln1116_13_reg_3032 <= sext_ln1116_13_fu_1347_p1;
                sext_ln1116_14_reg_3037 <= sext_ln1116_14_fu_1351_p1;
                sext_ln1116_15_reg_3042 <= sext_ln1116_15_fu_1355_p1;
                sext_ln1116_16_reg_3047 <= sext_ln1116_16_fu_1359_p1;
                sext_ln1116_17_reg_3052 <= sext_ln1116_17_fu_1363_p1;
                sext_ln1116_18_reg_3057 <= sext_ln1116_18_fu_1367_p1;
                sext_ln1116_19_reg_3062 <= sext_ln1116_19_fu_1371_p1;
                sext_ln1116_1_reg_2962 <= sext_ln1116_1_fu_1291_p1;
                sext_ln1116_20_reg_3067 <= sext_ln1116_20_fu_1375_p1;
                sext_ln1116_21_reg_3072 <= sext_ln1116_21_fu_1379_p1;
                sext_ln1116_22_reg_3077 <= sext_ln1116_22_fu_1383_p1;
                sext_ln1116_23_reg_3082 <= sext_ln1116_23_fu_1387_p1;
                sext_ln1116_24_reg_3087 <= sext_ln1116_24_fu_1391_p1;
                sext_ln1116_25_reg_3092 <= sext_ln1116_25_fu_1395_p1;
                sext_ln1116_26_reg_3097 <= sext_ln1116_26_fu_1399_p1;
                sext_ln1116_27_reg_3102 <= sext_ln1116_27_fu_1403_p1;
                sext_ln1116_28_reg_3107 <= sext_ln1116_28_fu_1407_p1;
                sext_ln1116_29_reg_3112 <= sext_ln1116_29_fu_1411_p1;
                sext_ln1116_2_reg_2967 <= sext_ln1116_2_fu_1295_p1;
                sext_ln1116_30_reg_3117 <= sext_ln1116_30_fu_1415_p1;
                sext_ln1116_31_reg_3122 <= sext_ln1116_31_fu_1419_p1;
                sext_ln1116_32_reg_3127 <= sext_ln1116_32_fu_1423_p1;
                sext_ln1116_33_reg_3132 <= sext_ln1116_33_fu_1427_p1;
                sext_ln1116_34_reg_3137 <= sext_ln1116_34_fu_1431_p1;
                sext_ln1116_35_reg_3142 <= sext_ln1116_35_fu_1435_p1;
                sext_ln1116_36_reg_3147 <= sext_ln1116_36_fu_1439_p1;
                sext_ln1116_37_reg_3152 <= sext_ln1116_37_fu_1443_p1;
                sext_ln1116_38_reg_3157 <= sext_ln1116_38_fu_1447_p1;
                sext_ln1116_39_reg_3162 <= sext_ln1116_39_fu_1451_p1;
                sext_ln1116_3_reg_2972 <= sext_ln1116_3_fu_1299_p1;
                sext_ln1116_40_reg_3167 <= sext_ln1116_40_fu_1455_p1;
                sext_ln1116_41_reg_3172 <= sext_ln1116_41_fu_1459_p1;
                sext_ln1116_42_reg_3177 <= sext_ln1116_42_fu_1463_p1;
                sext_ln1116_43_reg_3182 <= sext_ln1116_43_fu_1467_p1;
                sext_ln1116_44_reg_3187 <= sext_ln1116_44_fu_1471_p1;
                sext_ln1116_45_reg_3192 <= sext_ln1116_45_fu_1475_p1;
                sext_ln1116_46_reg_3197 <= sext_ln1116_46_fu_1479_p1;
                sext_ln1116_47_reg_3202 <= sext_ln1116_47_fu_1483_p1;
                sext_ln1116_4_reg_2977 <= sext_ln1116_4_fu_1303_p1;
                sext_ln1116_5_reg_2982 <= sext_ln1116_5_fu_1307_p1;
                sext_ln1116_6_reg_2987 <= sext_ln1116_6_fu_1311_p1;
                sext_ln1116_7_reg_2992 <= sext_ln1116_7_fu_1315_p1;
                sext_ln1116_8_reg_2997 <= sext_ln1116_8_fu_1319_p1;
                sext_ln1116_9_reg_3002 <= sext_ln1116_9_fu_1323_p1;
                sext_ln1116_reg_2957 <= sext_ln1116_fu_1287_p1;
                sext_ln1192_1_reg_3007 <= sext_ln1192_1_fu_1327_p1;
                sext_ln1192_reg_3012 <= sext_ln1192_fu_1331_p1;
                sext_ln638_1_reg_3212 <= sext_ln638_1_fu_1491_p1;
                sext_ln638_reg_3207 <= sext_ln638_fu_1487_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln638_reg_3217_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_10_reg_3470 <= grp_fu_2629_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln638_reg_3217_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_12_reg_3475 <= grp_fu_2645_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln638_reg_3217_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_16_reg_3565 <= grp_fu_2677_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln638_reg_3217_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_18_reg_3570 <= grp_fu_2693_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln638_reg_3217_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_20_reg_3575 <= grp_fu_2709_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln638_reg_3217_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_24_reg_3665 <= grp_fu_2741_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln638_reg_3217_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_26_reg_3670 <= grp_fu_2757_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln638_reg_3217_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_28_reg_3675 <= grp_fu_2773_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln638_reg_3217 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_2_reg_3365 <= grp_fu_2549_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln638_reg_3217_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_32_reg_3765 <= grp_fu_2805_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln638_reg_3217_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_34_reg_3770 <= grp_fu_2821_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln638_reg_3217_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_36_reg_3775 <= grp_fu_2837_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln638_reg_3217_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_40_reg_3865 <= grp_fu_2869_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln638_reg_3217_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_42_reg_3870 <= grp_fu_2885_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln638_reg_3217_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_44_reg_3875 <= grp_fu_2901_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln638_reg_3217_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_47_reg_3925 <= grp_fu_2925_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln638_reg_3217_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_48_reg_3930 <= grp_fu_2933_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln638_reg_3217_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_49_reg_3935 <= grp_fu_2941_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln638_reg_3217 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_4_reg_3370 <= grp_fu_2565_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln638_reg_3217 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_6_reg_3375 <= grp_fu_2581_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln638_reg_3217_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_s_reg_3465 <= grp_fu_2613_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln638_fu_1495_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    zext_ln642_reg_3226(6 downto 0) <= zext_ln642_fu_1507_p1(6 downto 0);
            end if;
        end if;
    end process;
    zext_ln642_reg_3226(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln642_reg_3226_pp0_iter1_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln642_reg_3226_pp0_iter2_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln642_reg_3226_pp0_iter3_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln642_reg_3226_pp0_iter4_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln642_reg_3226_pp0_iter5_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln642_reg_3226_pp0_iter6_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln642_reg_3226_pp0_iter7_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln638_fu_1495_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage3_subdone, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln638_fu_1495_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln638_fu_1495_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    L2_BIAS_V_address0 <= zext_ln642_fu_1507_p1(7 - 1 downto 0);

    L2_BIAS_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_BIAS_V_ce0 <= ap_const_logic_1;
        else 
            L2_BIAS_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_0_address0 <= zext_ln642_fu_1507_p1(7 - 1 downto 0);

    L2_WEIGHTS_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_0_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_10_address0 <= zext_ln642_reg_3226(7 - 1 downto 0);

    L2_WEIGHTS_V_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_10_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_11_address0 <= zext_ln642_reg_3226(7 - 1 downto 0);

    L2_WEIGHTS_V_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_11_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_12_address0 <= zext_ln642_reg_3226(7 - 1 downto 0);

    L2_WEIGHTS_V_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_12_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_13_address0 <= zext_ln642_reg_3226(7 - 1 downto 0);

    L2_WEIGHTS_V_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_13_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_14_address0 <= zext_ln642_reg_3226(7 - 1 downto 0);

    L2_WEIGHTS_V_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_14_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_15_address0 <= zext_ln642_reg_3226(7 - 1 downto 0);

    L2_WEIGHTS_V_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_15_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_16_address0 <= zext_ln642_reg_3226_pp0_iter1_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_16_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_16_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_17_address0 <= zext_ln642_reg_3226_pp0_iter1_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_17_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_17_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_18_address0 <= zext_ln642_reg_3226_pp0_iter1_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_18_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_18_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_19_address0 <= zext_ln642_reg_3226_pp0_iter1_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_19_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_19_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_1_address0 <= zext_ln642_fu_1507_p1(7 - 1 downto 0);

    L2_WEIGHTS_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_1_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_20_address0 <= zext_ln642_reg_3226_pp0_iter1_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_20_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_20_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_21_address0 <= zext_ln642_reg_3226_pp0_iter1_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_21_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_21_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_22_address0 <= zext_ln642_reg_3226_pp0_iter1_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_22_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_22_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_23_address0 <= zext_ln642_reg_3226_pp0_iter1_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_23_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_23_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_24_address0 <= zext_ln642_reg_3226_pp0_iter2_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_24_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_24_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_25_address0 <= zext_ln642_reg_3226_pp0_iter2_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_25_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_25_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_26_address0 <= zext_ln642_reg_3226_pp0_iter2_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_26_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_26_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_27_address0 <= zext_ln642_reg_3226_pp0_iter2_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_27_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_27_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_28_address0 <= zext_ln642_reg_3226_pp0_iter2_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_28_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_28_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_29_address0 <= zext_ln642_reg_3226_pp0_iter2_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_29_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_29_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_2_address0 <= zext_ln642_fu_1507_p1(7 - 1 downto 0);

    L2_WEIGHTS_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_2_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_30_address0 <= zext_ln642_reg_3226_pp0_iter2_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_30_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_30_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_31_address0 <= zext_ln642_reg_3226_pp0_iter2_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_31_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_31_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_32_address0 <= zext_ln642_reg_3226_pp0_iter3_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_32_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_32_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_33_address0 <= zext_ln642_reg_3226_pp0_iter3_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_33_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_33_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_33_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_34_address0 <= zext_ln642_reg_3226_pp0_iter3_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_34_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_34_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_34_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_35_address0 <= zext_ln642_reg_3226_pp0_iter3_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_35_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_35_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_35_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_36_address0 <= zext_ln642_reg_3226_pp0_iter3_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_36_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_36_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_36_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_37_address0 <= zext_ln642_reg_3226_pp0_iter3_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_37_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_37_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_37_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_38_address0 <= zext_ln642_reg_3226_pp0_iter3_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_38_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_38_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_38_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_39_address0 <= zext_ln642_reg_3226_pp0_iter3_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_39_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_39_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_39_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_3_address0 <= zext_ln642_fu_1507_p1(7 - 1 downto 0);

    L2_WEIGHTS_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_3_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_40_address0 <= zext_ln642_reg_3226_pp0_iter4_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_40_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_40_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_40_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_41_address0 <= zext_ln642_reg_3226_pp0_iter4_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_41_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_41_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_42_address0 <= zext_ln642_reg_3226_pp0_iter4_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_42_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_42_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_42_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_43_address0 <= zext_ln642_reg_3226_pp0_iter4_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_43_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_43_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_44_address0 <= zext_ln642_reg_3226_pp0_iter4_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_44_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_44_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_44_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_45_address0 <= zext_ln642_reg_3226_pp0_iter4_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_45_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_45_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_45_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_46_address0 <= zext_ln642_reg_3226_pp0_iter4_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_46_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_46_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_46_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_47_address0 <= zext_ln642_reg_3226_pp0_iter4_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_47_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_47_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_47_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_48_address0 <= zext_ln642_reg_3226_pp0_iter5_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_48_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_48_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_48_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_49_address0 <= zext_ln642_reg_3226_pp0_iter5_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_49_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_49_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_49_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_4_address0 <= zext_ln642_fu_1507_p1(7 - 1 downto 0);

    L2_WEIGHTS_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_4_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_50_address0 <= zext_ln642_reg_3226_pp0_iter5_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_50_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_50_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_50_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_51_address0 <= zext_ln642_reg_3226_pp0_iter5_reg(7 - 1 downto 0);

    L2_WEIGHTS_V_51_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_51_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_51_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_5_address0 <= zext_ln642_fu_1507_p1(7 - 1 downto 0);

    L2_WEIGHTS_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_5_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_6_address0 <= zext_ln642_fu_1507_p1(7 - 1 downto 0);

    L2_WEIGHTS_V_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_6_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_7_address0 <= zext_ln642_fu_1507_p1(7 - 1 downto 0);

    L2_WEIGHTS_V_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_7_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_8_address0 <= zext_ln642_reg_3226(7 - 1 downto 0);

    L2_WEIGHTS_V_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_8_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L2_WEIGHTS_V_9_address0 <= zext_ln642_reg_3226(7 - 1 downto 0);

    L2_WEIGHTS_V_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            L2_WEIGHTS_V_9_ce0 <= ap_const_logic_1;
        else 
            L2_WEIGHTS_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state32 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln638_fu_1495_p2)
    begin
        if ((icmp_ln638_fu_1495_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_0_phi_fu_1280_p4_assign_proc : process(i_0_reg_1276, icmp_ln638_reg_3217, ap_CS_fsm_pp0_stage0, i_reg_3221, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln638_reg_3217 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_0_phi_fu_1280_p4 <= i_reg_3221;
        else 
            ap_phi_mux_i_0_phi_fu_1280_p4 <= i_0_reg_1276;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2541_p0 <= sext_ln1116_reg_2957(16 - 1 downto 0);
    grp_fu_2549_p0 <= sext_ln1116_1_reg_2962(16 - 1 downto 0);
    grp_fu_2557_p0 <= sext_ln1116_2_reg_2967(16 - 1 downto 0);
    grp_fu_2557_p2 <= (tmp_2_reg_3365 & ap_const_lv10_0);
    grp_fu_2565_p0 <= sext_ln1116_3_reg_2972(16 - 1 downto 0);
    grp_fu_2565_p2 <= (tmp_3_fu_1580_p4 & ap_const_lv10_0);
    grp_fu_2573_p0 <= sext_ln1116_4_reg_2977(16 - 1 downto 0);
    grp_fu_2573_p2 <= (tmp_4_reg_3370 & ap_const_lv10_0);
    grp_fu_2581_p0 <= sext_ln1116_5_reg_2982(16 - 1 downto 0);
    grp_fu_2581_p2 <= (tmp_5_fu_1619_p4 & ap_const_lv10_0);
    grp_fu_2589_p0 <= sext_ln1116_6_reg_2987(16 - 1 downto 0);
    grp_fu_2589_p2 <= (tmp_6_reg_3375 & ap_const_lv10_0);
    grp_fu_2597_p0 <= sext_ln1116_7_reg_2992(16 - 1 downto 0);
    grp_fu_2597_p2 <= (tmp_7_fu_1658_p4 & ap_const_lv10_0);
    grp_fu_2605_p0 <= sext_ln1116_8_reg_2997(16 - 1 downto 0);
    grp_fu_2605_p2 <= (tmp_8_reg_3425 & ap_const_lv10_0);
    grp_fu_2613_p0 <= sext_ln1116_9_reg_3002(16 - 1 downto 0);
    grp_fu_2613_p2 <= (tmp_9_fu_1697_p4 & ap_const_lv10_0);
    grp_fu_2621_p0 <= sext_ln1192_1_reg_3007(16 - 1 downto 0);
    grp_fu_2621_p2 <= (tmp_s_reg_3465 & ap_const_lv10_0);
    grp_fu_2629_p0 <= sext_ln1192_reg_3012(16 - 1 downto 0);
    grp_fu_2629_p2 <= (tmp_1_fu_1736_p4 & ap_const_lv10_0);
    grp_fu_2637_p0 <= sext_ln1116_10_reg_3017(16 - 1 downto 0);
    grp_fu_2637_p2 <= (tmp_10_reg_3470 & ap_const_lv10_0);
    grp_fu_2645_p0 <= sext_ln1116_11_reg_3022(16 - 1 downto 0);
    grp_fu_2645_p2 <= (tmp_11_fu_1775_p4 & ap_const_lv10_0);
    grp_fu_2653_p0 <= sext_ln1116_12_reg_3027(16 - 1 downto 0);
    grp_fu_2653_p2 <= (tmp_12_reg_3475 & ap_const_lv10_0);
    grp_fu_2661_p0 <= sext_ln1116_13_reg_3032(16 - 1 downto 0);
    grp_fu_2661_p2 <= (tmp_13_fu_1814_p4 & ap_const_lv10_0);
    grp_fu_2669_p0 <= sext_ln1116_14_reg_3037(16 - 1 downto 0);
    grp_fu_2669_p2 <= (tmp_14_reg_3525 & ap_const_lv10_0);
    grp_fu_2677_p0 <= sext_ln1116_15_reg_3042(16 - 1 downto 0);
    grp_fu_2677_p2 <= (tmp_15_fu_1853_p4 & ap_const_lv10_0);
    grp_fu_2685_p0 <= sext_ln1116_16_reg_3047(16 - 1 downto 0);
    grp_fu_2685_p2 <= (tmp_16_reg_3565 & ap_const_lv10_0);
    grp_fu_2693_p0 <= sext_ln1116_17_reg_3052(16 - 1 downto 0);
    grp_fu_2693_p2 <= (tmp_17_fu_1892_p4 & ap_const_lv10_0);
    grp_fu_2701_p0 <= sext_ln1116_18_reg_3057(16 - 1 downto 0);
    grp_fu_2701_p2 <= (tmp_18_reg_3570 & ap_const_lv10_0);
    grp_fu_2709_p0 <= sext_ln1116_19_reg_3062(16 - 1 downto 0);
    grp_fu_2709_p2 <= (tmp_19_fu_1931_p4 & ap_const_lv10_0);
    grp_fu_2717_p0 <= sext_ln1116_20_reg_3067(16 - 1 downto 0);
    grp_fu_2717_p2 <= (tmp_20_reg_3575 & ap_const_lv10_0);
    grp_fu_2725_p0 <= sext_ln1116_21_reg_3072(16 - 1 downto 0);
    grp_fu_2725_p2 <= (tmp_21_fu_1970_p4 & ap_const_lv10_0);
    grp_fu_2733_p0 <= sext_ln1116_22_reg_3077(16 - 1 downto 0);
    grp_fu_2733_p2 <= (tmp_22_reg_3625 & ap_const_lv10_0);
    grp_fu_2741_p0 <= sext_ln1116_23_reg_3082(16 - 1 downto 0);
    grp_fu_2741_p2 <= (tmp_23_fu_2009_p4 & ap_const_lv10_0);
    grp_fu_2749_p0 <= sext_ln1116_24_reg_3087(16 - 1 downto 0);
    grp_fu_2749_p2 <= (tmp_24_reg_3665 & ap_const_lv10_0);
    grp_fu_2757_p0 <= sext_ln1116_25_reg_3092(16 - 1 downto 0);
    grp_fu_2757_p2 <= (tmp_25_fu_2048_p4 & ap_const_lv10_0);
    grp_fu_2765_p0 <= sext_ln1116_26_reg_3097(16 - 1 downto 0);
    grp_fu_2765_p2 <= (tmp_26_reg_3670 & ap_const_lv10_0);
    grp_fu_2773_p0 <= sext_ln1116_27_reg_3102(16 - 1 downto 0);
    grp_fu_2773_p2 <= (tmp_27_fu_2087_p4 & ap_const_lv10_0);
    grp_fu_2781_p0 <= sext_ln1116_28_reg_3107(16 - 1 downto 0);
    grp_fu_2781_p2 <= (tmp_28_reg_3675 & ap_const_lv10_0);
    grp_fu_2789_p0 <= sext_ln1116_29_reg_3112(16 - 1 downto 0);
    grp_fu_2789_p2 <= (tmp_29_fu_2126_p4 & ap_const_lv10_0);
    grp_fu_2797_p0 <= sext_ln1116_30_reg_3117(16 - 1 downto 0);
    grp_fu_2797_p2 <= (tmp_30_reg_3725 & ap_const_lv10_0);
    grp_fu_2805_p0 <= sext_ln1116_31_reg_3122(16 - 1 downto 0);
    grp_fu_2805_p2 <= (tmp_31_fu_2165_p4 & ap_const_lv10_0);
    grp_fu_2813_p0 <= sext_ln1116_32_reg_3127(16 - 1 downto 0);
    grp_fu_2813_p2 <= (tmp_32_reg_3765 & ap_const_lv10_0);
    grp_fu_2821_p0 <= sext_ln1116_33_reg_3132(16 - 1 downto 0);
    grp_fu_2821_p2 <= (tmp_33_fu_2204_p4 & ap_const_lv10_0);
    grp_fu_2829_p0 <= sext_ln1116_34_reg_3137(16 - 1 downto 0);
    grp_fu_2829_p2 <= (tmp_34_reg_3770 & ap_const_lv10_0);
    grp_fu_2837_p0 <= sext_ln1116_35_reg_3142(16 - 1 downto 0);
    grp_fu_2837_p2 <= (tmp_35_fu_2243_p4 & ap_const_lv10_0);
    grp_fu_2845_p0 <= sext_ln1116_36_reg_3147(16 - 1 downto 0);
    grp_fu_2845_p2 <= (tmp_36_reg_3775 & ap_const_lv10_0);
    grp_fu_2853_p0 <= sext_ln1116_37_reg_3152(16 - 1 downto 0);
    grp_fu_2853_p2 <= (tmp_37_fu_2282_p4 & ap_const_lv10_0);
    grp_fu_2861_p0 <= sext_ln1116_38_reg_3157(16 - 1 downto 0);
    grp_fu_2861_p2 <= (tmp_38_reg_3825 & ap_const_lv10_0);
    grp_fu_2869_p0 <= sext_ln1116_39_reg_3162(16 - 1 downto 0);
    grp_fu_2869_p2 <= (tmp_39_fu_2321_p4 & ap_const_lv10_0);
    grp_fu_2877_p0 <= sext_ln1116_40_reg_3167(16 - 1 downto 0);
    grp_fu_2877_p2 <= (tmp_40_reg_3865 & ap_const_lv10_0);
    grp_fu_2885_p0 <= sext_ln1116_41_reg_3172(16 - 1 downto 0);
    grp_fu_2885_p2 <= (tmp_41_fu_2360_p4 & ap_const_lv10_0);
    grp_fu_2893_p0 <= sext_ln1116_42_reg_3177(16 - 1 downto 0);
    grp_fu_2893_p2 <= (tmp_42_reg_3870 & ap_const_lv10_0);
    grp_fu_2901_p0 <= sext_ln1116_43_reg_3182(16 - 1 downto 0);
    grp_fu_2901_p2 <= (tmp_43_fu_2399_p4 & ap_const_lv10_0);
    grp_fu_2909_p0 <= sext_ln1116_44_reg_3187(16 - 1 downto 0);
    grp_fu_2909_p2 <= (tmp_44_reg_3875 & ap_const_lv10_0);
    grp_fu_2917_p0 <= sext_ln1116_45_reg_3192(16 - 1 downto 0);
    grp_fu_2917_p2 <= (tmp_45_fu_2438_p4 & ap_const_lv10_0);
    grp_fu_2925_p0 <= sext_ln1116_46_reg_3197(16 - 1 downto 0);
    grp_fu_2925_p2 <= (tmp_46_reg_3905 & ap_const_lv10_0);
    grp_fu_2933_p0 <= sext_ln1116_47_reg_3202(16 - 1 downto 0);
    grp_fu_2933_p2 <= (tmp_47_reg_3925 & ap_const_lv10_0);
    grp_fu_2941_p0 <= sext_ln638_reg_3207(16 - 1 downto 0);
    grp_fu_2941_p2 <= (tmp_48_reg_3930 & ap_const_lv10_0);
    grp_fu_2949_p0 <= sext_ln638_1_reg_3212(16 - 1 downto 0);
    grp_fu_2949_p2 <= (tmp_49_reg_3935 & ap_const_lv10_0);
    i_fu_1501_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_phi_fu_1280_p4) + unsigned(ap_const_lv7_1));
    icmp_ln638_fu_1495_p2 <= "1" when (ap_phi_mux_i_0_phi_fu_1280_p4 = ap_const_lv7_68) else "0";
        sext_ln1116_10_fu_1335_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_6_0_V_read),25));

        sext_ln1116_11_fu_1339_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_6_1_V_read),24));

        sext_ln1116_12_fu_1343_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_7_0_V_read),25));

        sext_ln1116_13_fu_1347_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_7_1_V_read),25));

        sext_ln1116_14_fu_1351_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_8_0_V_read),22));

        sext_ln1116_15_fu_1355_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_8_1_V_read),21));

        sext_ln1116_16_fu_1359_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_9_0_V_read),21));

        sext_ln1116_17_fu_1363_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_9_1_V_read),22));

        sext_ln1116_18_fu_1367_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_10_0_V_read),21));

        sext_ln1116_19_fu_1371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_10_1_V_read),22));

        sext_ln1116_1_fu_1291_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_0_1_V_read),25));

        sext_ln1116_20_fu_1375_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_11_0_V_read),24));

        sext_ln1116_21_fu_1379_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_11_1_V_read),25));

        sext_ln1116_22_fu_1383_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_12_0_V_read),21));

        sext_ln1116_23_fu_1387_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_12_1_V_read),23));

        sext_ln1116_24_fu_1391_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_13_0_V_read),25));

        sext_ln1116_25_fu_1395_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_13_1_V_read),25));

        sext_ln1116_26_fu_1399_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_14_0_V_read),20));

        sext_ln1116_27_fu_1403_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_14_1_V_read),24));

        sext_ln1116_28_fu_1407_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_15_0_V_read),25));

        sext_ln1116_29_fu_1411_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_15_1_V_read),25));

        sext_ln1116_2_fu_1295_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_1_0_V_read),20));

        sext_ln1116_30_fu_1415_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_16_0_V_read),25));

        sext_ln1116_31_fu_1419_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_16_1_V_read),20));

        sext_ln1116_32_fu_1423_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_17_0_V_read),25));

        sext_ln1116_33_fu_1427_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_17_1_V_read),25));

        sext_ln1116_34_fu_1431_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_18_0_V_read),22));

        sext_ln1116_35_fu_1435_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_18_1_V_read),25));

        sext_ln1116_36_fu_1439_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_19_0_V_read),25));

        sext_ln1116_37_fu_1443_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_19_1_V_read),25));

        sext_ln1116_38_fu_1447_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_20_0_V_read),21));

        sext_ln1116_39_fu_1451_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_20_1_V_read),25));

        sext_ln1116_3_fu_1299_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_1_1_V_read),22));

        sext_ln1116_40_fu_1455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_21_0_V_read),25));

        sext_ln1116_41_fu_1459_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_21_1_V_read),25));

        sext_ln1116_42_fu_1463_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_22_0_V_read),21));

        sext_ln1116_43_fu_1467_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_22_1_V_read),24));

        sext_ln1116_44_fu_1471_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_23_0_V_read),22));

        sext_ln1116_45_fu_1475_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_23_1_V_read),21));

        sext_ln1116_46_fu_1479_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_24_0_V_read),24));

        sext_ln1116_47_fu_1483_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_24_1_V_read),25));

        sext_ln1116_4_fu_1303_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_2_0_V_read),25));

        sext_ln1116_5_fu_1307_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_2_1_V_read),24));

        sext_ln1116_6_fu_1311_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_3_0_V_read),24));

        sext_ln1116_7_fu_1315_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_3_1_V_read),24));

        sext_ln1116_8_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_4_0_V_read),24));

        sext_ln1116_9_fu_1323_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_4_1_V_read),25));

        sext_ln1116_fu_1287_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_0_0_V_read),22));

        sext_ln1192_1_fu_1327_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_5_0_V_read),25));

        sext_ln1192_fu_1331_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_5_1_V_read),26));

        sext_ln638_1_fu_1491_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_25_1_V_read),25));

        sext_ln638_fu_1487_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_25_0_V_read),24));

    shl_ln_fu_1523_p3 <= (before_relu_V_reg_3320 & ap_const_lv10_0);
    tmp_11_fu_1775_p4 <= grp_fu_2637_p3(25 downto 10);
    tmp_13_fu_1814_p4 <= grp_fu_2653_p3(25 downto 10);
    tmp_15_fu_1853_p4 <= grp_fu_2669_p3(25 downto 10);
    tmp_17_fu_1892_p4 <= grp_fu_2685_p3(25 downto 10);
    tmp_19_fu_1931_p4 <= grp_fu_2701_p3(25 downto 10);
    tmp_1_fu_1736_p4 <= grp_fu_2621_p3(25 downto 10);
    tmp_21_fu_1970_p4 <= grp_fu_2717_p3(25 downto 10);
    tmp_23_fu_2009_p4 <= grp_fu_2733_p3(25 downto 10);
    tmp_25_fu_2048_p4 <= grp_fu_2749_p3(25 downto 10);
    tmp_27_fu_2087_p4 <= grp_fu_2765_p3(25 downto 10);
    tmp_29_fu_2126_p4 <= grp_fu_2781_p3(25 downto 10);
    tmp_31_fu_2165_p4 <= grp_fu_2797_p3(25 downto 10);
    tmp_33_fu_2204_p4 <= grp_fu_2813_p3(25 downto 10);
    tmp_35_fu_2243_p4 <= grp_fu_2829_p3(25 downto 10);
    tmp_37_fu_2282_p4 <= grp_fu_2845_p3(25 downto 10);
    tmp_39_fu_2321_p4 <= grp_fu_2861_p3(25 downto 10);
    tmp_3_fu_1580_p4 <= grp_fu_2557_p3(25 downto 10);
    tmp_41_fu_2360_p4 <= grp_fu_2877_p3(25 downto 10);
    tmp_43_fu_2399_p4 <= grp_fu_2893_p3(25 downto 10);
    tmp_45_fu_2438_p4 <= grp_fu_2909_p3(25 downto 10);
    tmp_52_fu_1537_p4 <= grp_fu_2541_p3(21 downto 10);
    tmp_53_fu_1546_p3 <= (tmp_52_fu_1537_p4 & ap_const_lv10_0);
    tmp_5_fu_1619_p4 <= grp_fu_2573_p3(25 downto 10);
    tmp_7_fu_1658_p4 <= grp_fu_2589_p3(25 downto 10);
    tmp_9_fu_1697_p4 <= grp_fu_2605_p3(25 downto 10);
    y_L3_V_address0 <= zext_ln642_reg_3226_pp0_iter7_reg(7 - 1 downto 0);

    y_L3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            y_L3_V_ce0 <= ap_const_logic_1;
        else 
            y_L3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    y_L3_V_d0 <= grp_fu_2949_p3(25 downto 10);

    y_L3_V_we0_assign_proc : process(icmp_ln638_reg_3217_pp0_iter7_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln638_reg_3217_pp0_iter7_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            y_L3_V_we0 <= ap_const_logic_1;
        else 
            y_L3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln642_fu_1507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_0_phi_fu_1280_p4),64));
end behav;
