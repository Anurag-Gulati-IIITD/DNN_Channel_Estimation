// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="DNN_wlo_166,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.634000,HLS_SYN_LAT=1077,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=157,HLS_SYN_FF=17794,HLS_SYN_LUT=11271,HLS_VERSION=2019_1}" *)

module DNN_wlo_166 (
        ap_clk,
        ap_rst_n,
        LS_stream_TDATA,
        LS_stream_TVALID,
        LS_stream_TREADY,
        LS_stream_TLAST,
        DNN_out_TDATA,
        DNN_out_TVALID,
        DNN_out_TREADY,
        DNN_out_TLAST
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_pp0_stage0 = 11'd128;
parameter    ap_ST_fsm_state11 = 11'd256;
parameter    ap_ST_fsm_state12 = 11'd512;
parameter    ap_ST_fsm_state13 = 11'd1024;

input   ap_clk;
input   ap_rst_n;
input  [63:0] LS_stream_TDATA;
input   LS_stream_TVALID;
output   LS_stream_TREADY;
input  [0:0] LS_stream_TLAST;
output  [63:0] DNN_out_TDATA;
output   DNN_out_TVALID;
input   DNN_out_TREADY;
output  [0:0] DNN_out_TLAST;

 reg    ap_rst_n_inv;
reg   [63:0] LS_stream_V_data_0_data_out;
wire    LS_stream_V_data_0_vld_in;
wire    LS_stream_V_data_0_vld_out;
wire    LS_stream_V_data_0_ack_in;
reg    LS_stream_V_data_0_ack_out;
reg   [63:0] LS_stream_V_data_0_payload_A;
reg   [63:0] LS_stream_V_data_0_payload_B;
reg    LS_stream_V_data_0_sel_rd;
reg    LS_stream_V_data_0_sel_wr;
wire    LS_stream_V_data_0_sel;
wire    LS_stream_V_data_0_load_A;
wire    LS_stream_V_data_0_load_B;
reg   [1:0] LS_stream_V_data_0_state;
wire    LS_stream_V_data_0_state_cmp_full;
reg   [0:0] LS_stream_V_last_V_0_data_out;
wire    LS_stream_V_last_V_0_vld_in;
wire    LS_stream_V_last_V_0_vld_out;
wire    LS_stream_V_last_V_0_ack_in;
reg    LS_stream_V_last_V_0_ack_out;
reg   [0:0] LS_stream_V_last_V_0_payload_A;
reg   [0:0] LS_stream_V_last_V_0_payload_B;
reg    LS_stream_V_last_V_0_sel_rd;
reg    LS_stream_V_last_V_0_sel_wr;
wire    LS_stream_V_last_V_0_sel;
wire    LS_stream_V_last_V_0_load_A;
wire    LS_stream_V_last_V_0_load_B;
reg   [1:0] LS_stream_V_last_V_0_state;
wire    LS_stream_V_last_V_0_state_cmp_full;
reg   [63:0] DNN_out_V_data_1_data_out;
wire    DNN_out_V_data_1_vld_in;
wire    DNN_out_V_data_1_vld_out;
wire    DNN_out_V_data_1_ack_in;
wire    DNN_out_V_data_1_ack_out;
reg   [63:0] DNN_out_V_data_1_payload_A;
reg   [63:0] DNN_out_V_data_1_payload_B;
reg    DNN_out_V_data_1_sel_rd;
reg    DNN_out_V_data_1_sel_wr;
wire    DNN_out_V_data_1_sel;
wire    DNN_out_V_data_1_load_A;
wire    DNN_out_V_data_1_load_B;
reg   [1:0] DNN_out_V_data_1_state;
wire    DNN_out_V_data_1_state_cmp_full;
reg   [0:0] DNN_out_V_last_V_1_data_out;
wire    DNN_out_V_last_V_1_vld_in;
wire    DNN_out_V_last_V_1_vld_out;
wire    DNN_out_V_last_V_1_ack_in;
wire    DNN_out_V_last_V_1_ack_out;
reg   [0:0] DNN_out_V_last_V_1_payload_A;
reg   [0:0] DNN_out_V_last_V_1_payload_B;
reg    DNN_out_V_last_V_1_sel_rd;
reg    DNN_out_V_last_V_1_sel_wr;
wire    DNN_out_V_last_V_1_sel;
wire    DNN_out_V_last_V_1_load_A;
wire    DNN_out_V_last_V_1_load_B;
reg   [1:0] DNN_out_V_last_V_1_state;
wire    DNN_out_V_last_V_1_state_cmp_full;
wire   [6:0] std_o_V_address0;
reg    std_o_V_ce0;
wire   [9:0] std_o_V_q0;
wire   [6:0] mean_o_V_address0;
reg    mean_o_V_ce0;
wire   [3:0] mean_o_V_q0;
reg   [6:0] i_0_i_reg_460;
reg   [15:0] norm_LS_data_0_0_V_reg_1814;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state5;
wire    grp_normalize_wlo_166_fu_789_ap_ready;
wire    grp_normalize_wlo_166_fu_789_ap_done;
reg   [15:0] norm_LS_data_0_1_V_reg_1819;
reg   [15:0] norm_LS_data_1_0_V_reg_1824;
reg   [15:0] norm_LS_data_1_1_V_reg_1829;
reg   [15:0] norm_LS_data_2_0_V_reg_1834;
reg   [15:0] norm_LS_data_2_1_V_reg_1839;
reg   [15:0] norm_LS_data_3_0_V_reg_1844;
reg   [15:0] norm_LS_data_3_1_V_reg_1849;
reg   [15:0] norm_LS_data_4_0_V_reg_1854;
reg   [15:0] norm_LS_data_4_1_V_reg_1859;
reg   [15:0] norm_LS_data_5_0_V_reg_1864;
reg   [15:0] norm_LS_data_5_1_V_reg_1869;
reg   [15:0] norm_LS_data_6_0_V_reg_1874;
reg   [15:0] norm_LS_data_6_1_V_reg_1879;
reg   [15:0] norm_LS_data_7_0_V_reg_1884;
reg   [15:0] norm_LS_data_7_1_V_reg_1889;
reg   [15:0] norm_LS_data_8_0_V_reg_1894;
reg   [15:0] norm_LS_data_8_1_V_reg_1899;
reg   [15:0] norm_LS_data_9_0_V_reg_1904;
reg   [15:0] norm_LS_data_9_1_V_reg_1909;
reg   [15:0] norm_LS_data_10_0_s_reg_1914;
reg   [15:0] norm_LS_data_10_1_s_reg_1919;
reg   [15:0] norm_LS_data_11_0_s_reg_1924;
reg   [15:0] norm_LS_data_11_1_s_reg_1929;
reg   [15:0] norm_LS_data_12_0_s_reg_1934;
reg   [15:0] norm_LS_data_12_1_s_reg_1939;
reg   [15:0] norm_LS_data_13_0_s_reg_1944;
reg   [15:0] norm_LS_data_13_1_s_reg_1949;
reg   [15:0] norm_LS_data_14_0_s_reg_1954;
reg   [15:0] norm_LS_data_14_1_s_reg_1959;
reg   [15:0] norm_LS_data_15_0_s_reg_1964;
reg   [15:0] norm_LS_data_15_1_s_reg_1969;
reg   [15:0] norm_LS_data_16_0_s_reg_1974;
reg   [15:0] norm_LS_data_16_1_s_reg_1979;
reg   [15:0] norm_LS_data_17_0_s_reg_1984;
reg   [15:0] norm_LS_data_17_1_s_reg_1989;
reg   [15:0] norm_LS_data_18_0_s_reg_1994;
reg   [15:0] norm_LS_data_18_1_s_reg_1999;
reg   [15:0] norm_LS_data_19_0_s_reg_2004;
reg   [15:0] norm_LS_data_19_1_s_reg_2009;
reg   [15:0] norm_LS_data_20_0_s_reg_2014;
reg   [15:0] norm_LS_data_20_1_s_reg_2019;
reg   [15:0] norm_LS_data_21_0_s_reg_2024;
reg   [15:0] norm_LS_data_21_1_s_reg_2029;
reg   [15:0] norm_LS_data_22_0_s_reg_2034;
reg   [15:0] norm_LS_data_22_1_s_reg_2039;
reg   [15:0] norm_LS_data_23_0_s_reg_2044;
reg   [15:0] norm_LS_data_23_1_s_reg_2049;
reg   [15:0] norm_LS_data_24_0_s_reg_2054;
reg   [15:0] norm_LS_data_24_1_s_reg_2059;
reg   [15:0] norm_LS_data_25_0_s_reg_2064;
reg   [15:0] norm_LS_data_25_1_s_reg_2069;
reg   [15:0] norm_LS_data_26_0_s_reg_2074;
reg   [15:0] norm_LS_data_26_1_s_reg_2079;
reg   [15:0] norm_LS_data_27_0_s_reg_2084;
reg   [15:0] norm_LS_data_27_1_s_reg_2089;
reg   [15:0] norm_LS_data_28_0_s_reg_2094;
reg   [15:0] norm_LS_data_28_1_s_reg_2099;
reg   [15:0] norm_LS_data_29_0_s_reg_2104;
reg   [15:0] norm_LS_data_29_1_s_reg_2109;
reg   [15:0] norm_LS_data_30_0_s_reg_2114;
reg   [15:0] norm_LS_data_30_1_s_reg_2119;
reg   [15:0] norm_LS_data_31_0_s_reg_2124;
reg   [15:0] norm_LS_data_31_1_s_reg_2129;
reg   [15:0] norm_LS_data_32_0_s_reg_2134;
reg   [15:0] norm_LS_data_32_1_s_reg_2139;
reg   [15:0] norm_LS_data_33_0_s_reg_2144;
reg   [15:0] norm_LS_data_33_1_s_reg_2149;
reg   [15:0] norm_LS_data_34_0_s_reg_2154;
reg   [15:0] norm_LS_data_34_1_s_reg_2159;
reg   [15:0] norm_LS_data_35_0_s_reg_2164;
reg   [15:0] norm_LS_data_35_1_s_reg_2169;
reg   [15:0] norm_LS_data_36_0_s_reg_2174;
reg   [15:0] norm_LS_data_36_1_s_reg_2179;
reg   [15:0] norm_LS_data_37_0_s_reg_2184;
reg   [15:0] norm_LS_data_37_1_s_reg_2189;
reg   [15:0] norm_LS_data_38_0_s_reg_2194;
reg   [15:0] norm_LS_data_38_1_s_reg_2199;
reg   [15:0] norm_LS_data_39_0_s_reg_2204;
reg   [15:0] norm_LS_data_39_1_s_reg_2209;
reg   [15:0] norm_LS_data_40_0_s_reg_2214;
reg   [15:0] norm_LS_data_40_1_s_reg_2219;
reg   [15:0] norm_LS_data_41_0_s_reg_2224;
reg   [15:0] norm_LS_data_41_1_s_reg_2229;
reg   [15:0] norm_LS_data_42_0_s_reg_2234;
reg   [15:0] norm_LS_data_42_1_s_reg_2239;
reg   [15:0] norm_LS_data_43_0_s_reg_2244;
reg   [15:0] norm_LS_data_43_1_s_reg_2249;
reg   [15:0] norm_LS_data_44_0_s_reg_2254;
reg   [15:0] norm_LS_data_44_1_s_reg_2259;
reg   [15:0] norm_LS_data_45_0_s_reg_2264;
reg   [15:0] norm_LS_data_45_1_s_reg_2269;
reg   [15:0] norm_LS_data_46_0_s_reg_2274;
reg   [15:0] norm_LS_data_46_1_s_reg_2279;
reg   [15:0] norm_LS_data_47_0_s_reg_2284;
reg   [15:0] norm_LS_data_47_1_s_reg_2289;
reg   [15:0] norm_LS_data_48_0_s_reg_2294;
reg   [15:0] norm_LS_data_48_1_s_reg_2299;
reg   [15:0] norm_LS_data_49_0_s_reg_2304;
reg   [15:0] norm_LS_data_49_1_s_reg_2309;
reg   [15:0] norm_LS_data_50_0_s_reg_2314;
reg   [15:0] norm_LS_data_50_1_s_reg_2319;
reg   [15:0] norm_LS_data_51_0_s_reg_2324;
reg   [15:0] norm_LS_data_51_1_s_reg_2329;
reg   [15:0] y_L2_0_0_V_reg_2334;
wire    ap_CS_fsm_state6;
wire    grp_L2_wlo_166_fu_471_ap_ready;
wire    grp_L2_wlo_166_fu_471_ap_done;
reg   [15:0] y_L2_0_1_V_reg_2339;
reg   [15:0] y_L2_1_0_V_reg_2344;
reg   [15:0] y_L2_1_1_V_reg_2349;
reg   [15:0] y_L2_2_0_V_reg_2354;
reg   [15:0] y_L2_2_1_V_reg_2359;
reg   [15:0] y_L2_3_0_V_reg_2364;
reg   [15:0] y_L2_3_1_V_reg_2369;
reg   [15:0] y_L2_4_0_V_reg_2374;
reg   [15:0] y_L2_4_1_V_reg_2379;
reg   [15:0] y_L2_5_0_V_reg_2384;
reg   [15:0] y_L2_5_1_V_reg_2389;
reg   [15:0] y_L2_6_0_V_reg_2394;
reg   [15:0] y_L2_6_1_V_reg_2399;
reg   [15:0] y_L2_7_0_V_reg_2404;
reg   [15:0] y_L2_7_1_V_reg_2409;
reg   [15:0] y_L2_8_0_V_reg_2414;
reg   [15:0] y_L2_8_1_V_reg_2419;
reg   [15:0] y_L2_9_0_V_reg_2424;
reg   [15:0] y_L2_9_1_V_reg_2429;
reg   [15:0] y_L2_10_0_V_reg_2434;
reg   [15:0] y_L2_10_1_V_reg_2439;
reg   [15:0] y_L2_11_0_V_reg_2444;
reg   [15:0] y_L2_11_1_V_reg_2449;
reg   [15:0] y_L2_12_0_V_reg_2454;
reg   [15:0] y_L2_12_1_V_reg_2459;
reg   [15:0] y_L2_13_0_V_reg_2464;
reg   [15:0] y_L2_13_1_V_reg_2469;
reg   [15:0] y_L2_14_0_V_reg_2474;
reg   [15:0] y_L2_14_1_V_reg_2479;
reg   [15:0] y_L2_15_0_V_reg_2484;
reg   [15:0] y_L2_15_1_V_reg_2489;
reg   [15:0] y_L2_16_0_V_reg_2494;
reg   [15:0] y_L2_16_1_V_reg_2499;
reg   [15:0] y_L2_17_0_V_reg_2504;
reg   [15:0] y_L2_17_1_V_reg_2509;
reg   [15:0] y_L2_18_0_V_reg_2514;
reg   [15:0] y_L2_18_1_V_reg_2519;
reg   [15:0] y_L2_19_0_V_reg_2524;
reg   [15:0] y_L2_19_1_V_reg_2529;
reg   [15:0] y_L2_20_0_V_reg_2534;
reg   [15:0] y_L2_20_1_V_reg_2539;
reg   [15:0] y_L2_21_0_V_reg_2544;
reg   [15:0] y_L2_21_1_V_reg_2549;
reg   [15:0] y_L2_22_0_V_reg_2554;
reg   [15:0] y_L2_22_1_V_reg_2559;
reg   [15:0] y_L2_23_0_V_reg_2564;
reg   [15:0] y_L2_23_1_V_reg_2569;
reg   [15:0] y_L2_24_0_V_reg_2574;
reg   [15:0] y_L2_24_1_V_reg_2579;
reg   [15:0] y_L2_25_0_V_reg_2584;
reg   [15:0] y_L2_25_1_V_reg_2589;
wire   [0:0] icmp_ln653_fu_1759_p2;
reg   [0:0] icmp_ln653_reg_2594;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state8_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_state10_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln653_reg_2594_pp0_iter1_reg;
wire   [6:0] i_fu_1765_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln655_fu_1771_p1;
reg   [63:0] zext_ln655_reg_2603;
reg   [63:0] zext_ln655_reg_2603_pp0_iter1_reg;
wire   [15:0] y_L3_V_q0;
reg  signed [15:0] y_L3_V_load_reg_2623;
reg   [9:0] std_o_V_load_reg_2628;
reg   [3:0] p_Val2_12_reg_2633;
wire    ap_CS_fsm_state7;
wire    grp_L3_wlo_166_fu_798_ap_ready;
wire    grp_L3_wlo_166_fu_798_ap_done;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state8;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg   [6:0] LS_data_V_address0;
reg    LS_data_V_ce0;
reg    LS_data_V_we0;
wire   [15:0] LS_data_V_q0;
reg    LS_data_V_ce1;
reg    LS_data_V_we1;
reg   [6:0] y_L3_V_address0;
reg    y_L3_V_ce0;
reg    y_L3_V_we0;
reg   [6:0] denorm_DNN_V_address0;
reg    denorm_DNN_V_ce0;
reg    denorm_DNN_V_we0;
wire   [15:0] denorm_DNN_V_d0;
wire   [15:0] denorm_DNN_V_q0;
reg    denorm_DNN_V_ce1;
wire   [15:0] denorm_DNN_V_q1;
wire    grp_L2_wlo_166_fu_471_ap_start;
wire    grp_L2_wlo_166_fu_471_ap_idle;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_0;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_1;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_2;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_3;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_4;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_5;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_6;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_7;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_8;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_9;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_10;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_11;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_12;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_13;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_14;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_15;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_16;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_17;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_18;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_19;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_20;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_21;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_22;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_23;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_24;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_25;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_26;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_27;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_28;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_29;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_30;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_31;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_32;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_33;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_34;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_35;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_36;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_37;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_38;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_39;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_40;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_41;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_42;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_43;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_44;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_45;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_46;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_47;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_48;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_49;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_50;
wire   [15:0] grp_L2_wlo_166_fu_471_ap_return_51;
wire    grp_normalize_wlo_166_fu_789_ap_start;
wire    grp_normalize_wlo_166_fu_789_ap_idle;
wire   [6:0] grp_normalize_wlo_166_fu_789_LS_data_V_address0;
wire    grp_normalize_wlo_166_fu_789_LS_data_V_ce0;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_0;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_1;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_2;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_3;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_4;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_5;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_6;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_7;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_8;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_9;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_10;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_11;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_12;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_13;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_14;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_15;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_16;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_17;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_18;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_19;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_20;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_21;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_22;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_23;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_24;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_25;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_26;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_27;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_28;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_29;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_30;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_31;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_32;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_33;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_34;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_35;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_36;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_37;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_38;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_39;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_40;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_41;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_42;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_43;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_44;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_45;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_46;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_47;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_48;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_49;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_50;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_51;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_52;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_53;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_54;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_55;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_56;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_57;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_58;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_59;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_60;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_61;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_62;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_63;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_64;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_65;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_66;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_67;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_68;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_69;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_70;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_71;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_72;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_73;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_74;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_75;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_76;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_77;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_78;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_79;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_80;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_81;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_82;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_83;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_84;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_85;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_86;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_87;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_88;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_89;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_90;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_91;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_92;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_93;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_94;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_95;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_96;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_97;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_98;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_99;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_100;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_101;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_102;
wire   [15:0] grp_normalize_wlo_166_fu_789_ap_return_103;
wire    grp_L3_wlo_166_fu_798_ap_start;
wire    grp_L3_wlo_166_fu_798_ap_idle;
wire   [6:0] grp_L3_wlo_166_fu_798_y_L3_V_address0;
wire    grp_L3_wlo_166_fu_798_y_L3_V_ce0;
wire    grp_L3_wlo_166_fu_798_y_L3_V_we0;
wire   [15:0] grp_L3_wlo_166_fu_798_y_L3_V_d0;
wire    grp_separate_complex_wlo_fu_961_ap_start;
wire    grp_separate_complex_wlo_fu_961_ap_done;
wire    grp_separate_complex_wlo_fu_961_ap_idle;
wire    grp_separate_complex_wlo_fu_961_ap_ready;
wire    grp_separate_complex_wlo_fu_961_LS_stream_TVALID;
wire    grp_separate_complex_wlo_fu_961_LS_stream_TREADY;
wire   [6:0] grp_separate_complex_wlo_fu_961_sep_V_address0;
wire    grp_separate_complex_wlo_fu_961_sep_V_ce0;
wire    grp_separate_complex_wlo_fu_961_sep_V_we0;
wire   [15:0] grp_separate_complex_wlo_fu_961_sep_V_d0;
wire   [6:0] grp_separate_complex_wlo_fu_961_sep_V_address1;
wire    grp_separate_complex_wlo_fu_961_sep_V_ce1;
wire    grp_separate_complex_wlo_fu_961_sep_V_we1;
wire   [15:0] grp_separate_complex_wlo_fu_961_sep_V_d1;
wire    grp_reconstruct_complex_s_fu_970_ap_start;
wire    grp_reconstruct_complex_s_fu_970_ap_done;
wire    grp_reconstruct_complex_s_fu_970_ap_idle;
wire    grp_reconstruct_complex_s_fu_970_ap_ready;
wire   [6:0] grp_reconstruct_complex_s_fu_970_y_L3_V_address0;
wire    grp_reconstruct_complex_s_fu_970_y_L3_V_ce0;
wire   [6:0] grp_reconstruct_complex_s_fu_970_y_L3_V_address1;
wire    grp_reconstruct_complex_s_fu_970_y_L3_V_ce1;
wire   [63:0] grp_reconstruct_complex_s_fu_970_DNN_out_TDATA;
wire    grp_reconstruct_complex_s_fu_970_DNN_out_TVALID;
wire    grp_reconstruct_complex_s_fu_970_DNN_out_TREADY;
wire   [0:0] grp_reconstruct_complex_s_fu_970_DNN_out_TLAST;
reg    grp_L2_wlo_166_fu_471_ap_start_reg;
reg    grp_normalize_wlo_166_fu_789_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    grp_L3_wlo_166_fu_798_ap_start_reg;
reg    grp_separate_complex_wlo_fu_961_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    grp_reconstruct_complex_s_fu_970_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_block_pp0_stage0;
wire  signed [13:0] rhs_V_fu_1784_p3;
wire  signed [25:0] grp_fu_1805_p3;
wire   [9:0] grp_fu_1805_p0;
reg   [10:0] ap_NS_fsm;
wire    ap_CS_fsm_state13;
reg    ap_block_state13;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [25:0] grp_fu_1805_p00;

// power-on initialization
initial begin
#0 LS_stream_V_data_0_sel_rd = 1'b0;
#0 LS_stream_V_data_0_sel_wr = 1'b0;
#0 LS_stream_V_data_0_state = 2'd0;
#0 LS_stream_V_last_V_0_sel_rd = 1'b0;
#0 LS_stream_V_last_V_0_sel_wr = 1'b0;
#0 LS_stream_V_last_V_0_state = 2'd0;
#0 DNN_out_V_data_1_sel_rd = 1'b0;
#0 DNN_out_V_data_1_sel_wr = 1'b0;
#0 DNN_out_V_data_1_state = 2'd0;
#0 DNN_out_V_last_V_1_sel_rd = 1'b0;
#0 DNN_out_V_last_V_1_sel_wr = 1'b0;
#0 DNN_out_V_last_V_1_state = 2'd0;
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 grp_L2_wlo_166_fu_471_ap_start_reg = 1'b0;
#0 grp_normalize_wlo_166_fu_789_ap_start_reg = 1'b0;
#0 grp_L3_wlo_166_fu_798_ap_start_reg = 1'b0;
#0 grp_separate_complex_wlo_fu_961_ap_start_reg = 1'b0;
#0 grp_reconstruct_complex_s_fu_970_ap_start_reg = 1'b0;
end

DNN_wlo_166_std_o_V #(
    .DataWidth( 10 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
std_o_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(std_o_V_address0),
    .ce0(std_o_V_ce0),
    .q0(std_o_V_q0)
);

DNN_wlo_166_mean_cZC #(
    .DataWidth( 4 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
mean_o_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mean_o_V_address0),
    .ce0(mean_o_V_ce0),
    .q0(mean_o_V_q0)
);

DNN_wlo_166_LS_dac0C #(
    .DataWidth( 16 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
LS_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LS_data_V_address0),
    .ce0(LS_data_V_ce0),
    .we0(LS_data_V_we0),
    .d0(grp_separate_complex_wlo_fu_961_sep_V_d0),
    .q0(LS_data_V_q0),
    .address1(grp_separate_complex_wlo_fu_961_sep_V_address1),
    .ce1(LS_data_V_ce1),
    .we1(LS_data_V_we1),
    .d1(grp_separate_complex_wlo_fu_961_sep_V_d1)
);

DNN_wlo_166_y_L3_V #(
    .DataWidth( 16 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
y_L3_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(y_L3_V_address0),
    .ce0(y_L3_V_ce0),
    .we0(y_L3_V_we0),
    .d0(grp_L3_wlo_166_fu_798_y_L3_V_d0),
    .q0(y_L3_V_q0)
);

DNN_wlo_166_denorc1C #(
    .DataWidth( 16 ),
    .AddressRange( 104 ),
    .AddressWidth( 7 ))
denorm_DNN_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(denorm_DNN_V_address0),
    .ce0(denorm_DNN_V_ce0),
    .we0(denorm_DNN_V_we0),
    .d0(denorm_DNN_V_d0),
    .q0(denorm_DNN_V_q0),
    .address1(grp_reconstruct_complex_s_fu_970_y_L3_V_address1),
    .ce1(denorm_DNN_V_ce1),
    .q1(denorm_DNN_V_q1)
);

L2_wlo_166 grp_L2_wlo_166_fu_471(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_L2_wlo_166_fu_471_ap_start),
    .ap_done(grp_L2_wlo_166_fu_471_ap_done),
    .ap_idle(grp_L2_wlo_166_fu_471_ap_idle),
    .ap_ready(grp_L2_wlo_166_fu_471_ap_ready),
    .x_0_0_V_read(norm_LS_data_0_0_V_reg_1814),
    .x_0_1_V_read(norm_LS_data_0_1_V_reg_1819),
    .x_1_0_V_read(norm_LS_data_1_0_V_reg_1824),
    .x_1_1_V_read(norm_LS_data_1_1_V_reg_1829),
    .x_2_0_V_read(norm_LS_data_2_0_V_reg_1834),
    .x_2_1_V_read(norm_LS_data_2_1_V_reg_1839),
    .x_3_0_V_read(norm_LS_data_3_0_V_reg_1844),
    .x_3_1_V_read(norm_LS_data_3_1_V_reg_1849),
    .x_4_0_V_read(norm_LS_data_4_0_V_reg_1854),
    .x_4_1_V_read(norm_LS_data_4_1_V_reg_1859),
    .x_5_0_V_read(norm_LS_data_5_0_V_reg_1864),
    .x_5_1_V_read(norm_LS_data_5_1_V_reg_1869),
    .x_6_0_V_read(norm_LS_data_6_0_V_reg_1874),
    .x_6_1_V_read(norm_LS_data_6_1_V_reg_1879),
    .x_7_0_V_read(norm_LS_data_7_0_V_reg_1884),
    .x_7_1_V_read(norm_LS_data_7_1_V_reg_1889),
    .x_8_0_V_read(norm_LS_data_8_0_V_reg_1894),
    .x_8_1_V_read(norm_LS_data_8_1_V_reg_1899),
    .x_9_0_V_read(norm_LS_data_9_0_V_reg_1904),
    .x_9_1_V_read(norm_LS_data_9_1_V_reg_1909),
    .x_10_0_V_read(norm_LS_data_10_0_s_reg_1914),
    .x_10_1_V_read(norm_LS_data_10_1_s_reg_1919),
    .x_11_0_V_read(norm_LS_data_11_0_s_reg_1924),
    .x_11_1_V_read(norm_LS_data_11_1_s_reg_1929),
    .x_12_0_V_read(norm_LS_data_12_0_s_reg_1934),
    .x_12_1_V_read(norm_LS_data_12_1_s_reg_1939),
    .x_13_0_V_read(norm_LS_data_13_0_s_reg_1944),
    .x_13_1_V_read(norm_LS_data_13_1_s_reg_1949),
    .x_14_0_V_read(norm_LS_data_14_0_s_reg_1954),
    .x_14_1_V_read(norm_LS_data_14_1_s_reg_1959),
    .x_15_0_V_read(norm_LS_data_15_0_s_reg_1964),
    .x_15_1_V_read(norm_LS_data_15_1_s_reg_1969),
    .x_16_0_V_read(norm_LS_data_16_0_s_reg_1974),
    .x_16_1_V_read(norm_LS_data_16_1_s_reg_1979),
    .x_17_0_V_read(norm_LS_data_17_0_s_reg_1984),
    .x_17_1_V_read(norm_LS_data_17_1_s_reg_1989),
    .x_18_0_V_read(norm_LS_data_18_0_s_reg_1994),
    .x_18_1_V_read(norm_LS_data_18_1_s_reg_1999),
    .x_19_0_V_read(norm_LS_data_19_0_s_reg_2004),
    .x_19_1_V_read(norm_LS_data_19_1_s_reg_2009),
    .x_20_0_V_read(norm_LS_data_20_0_s_reg_2014),
    .x_20_1_V_read(norm_LS_data_20_1_s_reg_2019),
    .x_21_0_V_read(norm_LS_data_21_0_s_reg_2024),
    .x_21_1_V_read(norm_LS_data_21_1_s_reg_2029),
    .x_22_0_V_read(norm_LS_data_22_0_s_reg_2034),
    .x_22_1_V_read(norm_LS_data_22_1_s_reg_2039),
    .x_23_0_V_read(norm_LS_data_23_0_s_reg_2044),
    .x_23_1_V_read(norm_LS_data_23_1_s_reg_2049),
    .x_24_0_V_read(norm_LS_data_24_0_s_reg_2054),
    .x_24_1_V_read(norm_LS_data_24_1_s_reg_2059),
    .x_25_0_V_read(norm_LS_data_25_0_s_reg_2064),
    .x_25_1_V_read(norm_LS_data_25_1_s_reg_2069),
    .x_26_0_V_read(norm_LS_data_26_0_s_reg_2074),
    .x_26_1_V_read(norm_LS_data_26_1_s_reg_2079),
    .x_27_0_V_read(norm_LS_data_27_0_s_reg_2084),
    .x_27_1_V_read(norm_LS_data_27_1_s_reg_2089),
    .x_28_0_V_read(norm_LS_data_28_0_s_reg_2094),
    .x_28_1_V_read(norm_LS_data_28_1_s_reg_2099),
    .x_29_0_V_read(norm_LS_data_29_0_s_reg_2104),
    .x_29_1_V_read(norm_LS_data_29_1_s_reg_2109),
    .x_30_0_V_read(norm_LS_data_30_0_s_reg_2114),
    .x_30_1_V_read(norm_LS_data_30_1_s_reg_2119),
    .x_31_0_V_read(norm_LS_data_31_0_s_reg_2124),
    .x_31_1_V_read(norm_LS_data_31_1_s_reg_2129),
    .x_32_0_V_read(norm_LS_data_32_0_s_reg_2134),
    .x_32_1_V_read(norm_LS_data_32_1_s_reg_2139),
    .x_33_0_V_read(norm_LS_data_33_0_s_reg_2144),
    .x_33_1_V_read(norm_LS_data_33_1_s_reg_2149),
    .x_34_0_V_read(norm_LS_data_34_0_s_reg_2154),
    .x_34_1_V_read(norm_LS_data_34_1_s_reg_2159),
    .x_35_0_V_read(norm_LS_data_35_0_s_reg_2164),
    .x_35_1_V_read(norm_LS_data_35_1_s_reg_2169),
    .x_36_0_V_read(norm_LS_data_36_0_s_reg_2174),
    .x_36_1_V_read(norm_LS_data_36_1_s_reg_2179),
    .x_37_0_V_read(norm_LS_data_37_0_s_reg_2184),
    .x_37_1_V_read(norm_LS_data_37_1_s_reg_2189),
    .x_38_0_V_read(norm_LS_data_38_0_s_reg_2194),
    .x_38_1_V_read(norm_LS_data_38_1_s_reg_2199),
    .x_39_0_V_read(norm_LS_data_39_0_s_reg_2204),
    .x_39_1_V_read(norm_LS_data_39_1_s_reg_2209),
    .x_40_0_V_read(norm_LS_data_40_0_s_reg_2214),
    .x_40_1_V_read(norm_LS_data_40_1_s_reg_2219),
    .x_41_0_V_read(norm_LS_data_41_0_s_reg_2224),
    .x_41_1_V_read(norm_LS_data_41_1_s_reg_2229),
    .x_42_0_V_read(norm_LS_data_42_0_s_reg_2234),
    .x_42_1_V_read(norm_LS_data_42_1_s_reg_2239),
    .x_43_0_V_read(norm_LS_data_43_0_s_reg_2244),
    .x_43_1_V_read(norm_LS_data_43_1_s_reg_2249),
    .x_44_0_V_read(norm_LS_data_44_0_s_reg_2254),
    .x_44_1_V_read(norm_LS_data_44_1_s_reg_2259),
    .x_45_0_V_read(norm_LS_data_45_0_s_reg_2264),
    .x_45_1_V_read(norm_LS_data_45_1_s_reg_2269),
    .x_46_0_V_read(norm_LS_data_46_0_s_reg_2274),
    .x_46_1_V_read(norm_LS_data_46_1_s_reg_2279),
    .x_47_0_V_read(norm_LS_data_47_0_s_reg_2284),
    .x_47_1_V_read(norm_LS_data_47_1_s_reg_2289),
    .x_48_0_V_read(norm_LS_data_48_0_s_reg_2294),
    .x_48_1_V_read(norm_LS_data_48_1_s_reg_2299),
    .x_49_0_V_read(norm_LS_data_49_0_s_reg_2304),
    .x_49_1_V_read(norm_LS_data_49_1_s_reg_2309),
    .x_50_0_V_read(norm_LS_data_50_0_s_reg_2314),
    .x_50_1_V_read(norm_LS_data_50_1_s_reg_2319),
    .x_51_0_V_read(norm_LS_data_51_0_s_reg_2324),
    .x_51_1_V_read(norm_LS_data_51_1_s_reg_2329),
    .ap_return_0(grp_L2_wlo_166_fu_471_ap_return_0),
    .ap_return_1(grp_L2_wlo_166_fu_471_ap_return_1),
    .ap_return_2(grp_L2_wlo_166_fu_471_ap_return_2),
    .ap_return_3(grp_L2_wlo_166_fu_471_ap_return_3),
    .ap_return_4(grp_L2_wlo_166_fu_471_ap_return_4),
    .ap_return_5(grp_L2_wlo_166_fu_471_ap_return_5),
    .ap_return_6(grp_L2_wlo_166_fu_471_ap_return_6),
    .ap_return_7(grp_L2_wlo_166_fu_471_ap_return_7),
    .ap_return_8(grp_L2_wlo_166_fu_471_ap_return_8),
    .ap_return_9(grp_L2_wlo_166_fu_471_ap_return_9),
    .ap_return_10(grp_L2_wlo_166_fu_471_ap_return_10),
    .ap_return_11(grp_L2_wlo_166_fu_471_ap_return_11),
    .ap_return_12(grp_L2_wlo_166_fu_471_ap_return_12),
    .ap_return_13(grp_L2_wlo_166_fu_471_ap_return_13),
    .ap_return_14(grp_L2_wlo_166_fu_471_ap_return_14),
    .ap_return_15(grp_L2_wlo_166_fu_471_ap_return_15),
    .ap_return_16(grp_L2_wlo_166_fu_471_ap_return_16),
    .ap_return_17(grp_L2_wlo_166_fu_471_ap_return_17),
    .ap_return_18(grp_L2_wlo_166_fu_471_ap_return_18),
    .ap_return_19(grp_L2_wlo_166_fu_471_ap_return_19),
    .ap_return_20(grp_L2_wlo_166_fu_471_ap_return_20),
    .ap_return_21(grp_L2_wlo_166_fu_471_ap_return_21),
    .ap_return_22(grp_L2_wlo_166_fu_471_ap_return_22),
    .ap_return_23(grp_L2_wlo_166_fu_471_ap_return_23),
    .ap_return_24(grp_L2_wlo_166_fu_471_ap_return_24),
    .ap_return_25(grp_L2_wlo_166_fu_471_ap_return_25),
    .ap_return_26(grp_L2_wlo_166_fu_471_ap_return_26),
    .ap_return_27(grp_L2_wlo_166_fu_471_ap_return_27),
    .ap_return_28(grp_L2_wlo_166_fu_471_ap_return_28),
    .ap_return_29(grp_L2_wlo_166_fu_471_ap_return_29),
    .ap_return_30(grp_L2_wlo_166_fu_471_ap_return_30),
    .ap_return_31(grp_L2_wlo_166_fu_471_ap_return_31),
    .ap_return_32(grp_L2_wlo_166_fu_471_ap_return_32),
    .ap_return_33(grp_L2_wlo_166_fu_471_ap_return_33),
    .ap_return_34(grp_L2_wlo_166_fu_471_ap_return_34),
    .ap_return_35(grp_L2_wlo_166_fu_471_ap_return_35),
    .ap_return_36(grp_L2_wlo_166_fu_471_ap_return_36),
    .ap_return_37(grp_L2_wlo_166_fu_471_ap_return_37),
    .ap_return_38(grp_L2_wlo_166_fu_471_ap_return_38),
    .ap_return_39(grp_L2_wlo_166_fu_471_ap_return_39),
    .ap_return_40(grp_L2_wlo_166_fu_471_ap_return_40),
    .ap_return_41(grp_L2_wlo_166_fu_471_ap_return_41),
    .ap_return_42(grp_L2_wlo_166_fu_471_ap_return_42),
    .ap_return_43(grp_L2_wlo_166_fu_471_ap_return_43),
    .ap_return_44(grp_L2_wlo_166_fu_471_ap_return_44),
    .ap_return_45(grp_L2_wlo_166_fu_471_ap_return_45),
    .ap_return_46(grp_L2_wlo_166_fu_471_ap_return_46),
    .ap_return_47(grp_L2_wlo_166_fu_471_ap_return_47),
    .ap_return_48(grp_L2_wlo_166_fu_471_ap_return_48),
    .ap_return_49(grp_L2_wlo_166_fu_471_ap_return_49),
    .ap_return_50(grp_L2_wlo_166_fu_471_ap_return_50),
    .ap_return_51(grp_L2_wlo_166_fu_471_ap_return_51)
);

normalize_wlo_166 grp_normalize_wlo_166_fu_789(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_normalize_wlo_166_fu_789_ap_start),
    .ap_done(grp_normalize_wlo_166_fu_789_ap_done),
    .ap_idle(grp_normalize_wlo_166_fu_789_ap_idle),
    .ap_ready(grp_normalize_wlo_166_fu_789_ap_ready),
    .LS_data_V_address0(grp_normalize_wlo_166_fu_789_LS_data_V_address0),
    .LS_data_V_ce0(grp_normalize_wlo_166_fu_789_LS_data_V_ce0),
    .LS_data_V_q0(LS_data_V_q0),
    .ap_return_0(grp_normalize_wlo_166_fu_789_ap_return_0),
    .ap_return_1(grp_normalize_wlo_166_fu_789_ap_return_1),
    .ap_return_2(grp_normalize_wlo_166_fu_789_ap_return_2),
    .ap_return_3(grp_normalize_wlo_166_fu_789_ap_return_3),
    .ap_return_4(grp_normalize_wlo_166_fu_789_ap_return_4),
    .ap_return_5(grp_normalize_wlo_166_fu_789_ap_return_5),
    .ap_return_6(grp_normalize_wlo_166_fu_789_ap_return_6),
    .ap_return_7(grp_normalize_wlo_166_fu_789_ap_return_7),
    .ap_return_8(grp_normalize_wlo_166_fu_789_ap_return_8),
    .ap_return_9(grp_normalize_wlo_166_fu_789_ap_return_9),
    .ap_return_10(grp_normalize_wlo_166_fu_789_ap_return_10),
    .ap_return_11(grp_normalize_wlo_166_fu_789_ap_return_11),
    .ap_return_12(grp_normalize_wlo_166_fu_789_ap_return_12),
    .ap_return_13(grp_normalize_wlo_166_fu_789_ap_return_13),
    .ap_return_14(grp_normalize_wlo_166_fu_789_ap_return_14),
    .ap_return_15(grp_normalize_wlo_166_fu_789_ap_return_15),
    .ap_return_16(grp_normalize_wlo_166_fu_789_ap_return_16),
    .ap_return_17(grp_normalize_wlo_166_fu_789_ap_return_17),
    .ap_return_18(grp_normalize_wlo_166_fu_789_ap_return_18),
    .ap_return_19(grp_normalize_wlo_166_fu_789_ap_return_19),
    .ap_return_20(grp_normalize_wlo_166_fu_789_ap_return_20),
    .ap_return_21(grp_normalize_wlo_166_fu_789_ap_return_21),
    .ap_return_22(grp_normalize_wlo_166_fu_789_ap_return_22),
    .ap_return_23(grp_normalize_wlo_166_fu_789_ap_return_23),
    .ap_return_24(grp_normalize_wlo_166_fu_789_ap_return_24),
    .ap_return_25(grp_normalize_wlo_166_fu_789_ap_return_25),
    .ap_return_26(grp_normalize_wlo_166_fu_789_ap_return_26),
    .ap_return_27(grp_normalize_wlo_166_fu_789_ap_return_27),
    .ap_return_28(grp_normalize_wlo_166_fu_789_ap_return_28),
    .ap_return_29(grp_normalize_wlo_166_fu_789_ap_return_29),
    .ap_return_30(grp_normalize_wlo_166_fu_789_ap_return_30),
    .ap_return_31(grp_normalize_wlo_166_fu_789_ap_return_31),
    .ap_return_32(grp_normalize_wlo_166_fu_789_ap_return_32),
    .ap_return_33(grp_normalize_wlo_166_fu_789_ap_return_33),
    .ap_return_34(grp_normalize_wlo_166_fu_789_ap_return_34),
    .ap_return_35(grp_normalize_wlo_166_fu_789_ap_return_35),
    .ap_return_36(grp_normalize_wlo_166_fu_789_ap_return_36),
    .ap_return_37(grp_normalize_wlo_166_fu_789_ap_return_37),
    .ap_return_38(grp_normalize_wlo_166_fu_789_ap_return_38),
    .ap_return_39(grp_normalize_wlo_166_fu_789_ap_return_39),
    .ap_return_40(grp_normalize_wlo_166_fu_789_ap_return_40),
    .ap_return_41(grp_normalize_wlo_166_fu_789_ap_return_41),
    .ap_return_42(grp_normalize_wlo_166_fu_789_ap_return_42),
    .ap_return_43(grp_normalize_wlo_166_fu_789_ap_return_43),
    .ap_return_44(grp_normalize_wlo_166_fu_789_ap_return_44),
    .ap_return_45(grp_normalize_wlo_166_fu_789_ap_return_45),
    .ap_return_46(grp_normalize_wlo_166_fu_789_ap_return_46),
    .ap_return_47(grp_normalize_wlo_166_fu_789_ap_return_47),
    .ap_return_48(grp_normalize_wlo_166_fu_789_ap_return_48),
    .ap_return_49(grp_normalize_wlo_166_fu_789_ap_return_49),
    .ap_return_50(grp_normalize_wlo_166_fu_789_ap_return_50),
    .ap_return_51(grp_normalize_wlo_166_fu_789_ap_return_51),
    .ap_return_52(grp_normalize_wlo_166_fu_789_ap_return_52),
    .ap_return_53(grp_normalize_wlo_166_fu_789_ap_return_53),
    .ap_return_54(grp_normalize_wlo_166_fu_789_ap_return_54),
    .ap_return_55(grp_normalize_wlo_166_fu_789_ap_return_55),
    .ap_return_56(grp_normalize_wlo_166_fu_789_ap_return_56),
    .ap_return_57(grp_normalize_wlo_166_fu_789_ap_return_57),
    .ap_return_58(grp_normalize_wlo_166_fu_789_ap_return_58),
    .ap_return_59(grp_normalize_wlo_166_fu_789_ap_return_59),
    .ap_return_60(grp_normalize_wlo_166_fu_789_ap_return_60),
    .ap_return_61(grp_normalize_wlo_166_fu_789_ap_return_61),
    .ap_return_62(grp_normalize_wlo_166_fu_789_ap_return_62),
    .ap_return_63(grp_normalize_wlo_166_fu_789_ap_return_63),
    .ap_return_64(grp_normalize_wlo_166_fu_789_ap_return_64),
    .ap_return_65(grp_normalize_wlo_166_fu_789_ap_return_65),
    .ap_return_66(grp_normalize_wlo_166_fu_789_ap_return_66),
    .ap_return_67(grp_normalize_wlo_166_fu_789_ap_return_67),
    .ap_return_68(grp_normalize_wlo_166_fu_789_ap_return_68),
    .ap_return_69(grp_normalize_wlo_166_fu_789_ap_return_69),
    .ap_return_70(grp_normalize_wlo_166_fu_789_ap_return_70),
    .ap_return_71(grp_normalize_wlo_166_fu_789_ap_return_71),
    .ap_return_72(grp_normalize_wlo_166_fu_789_ap_return_72),
    .ap_return_73(grp_normalize_wlo_166_fu_789_ap_return_73),
    .ap_return_74(grp_normalize_wlo_166_fu_789_ap_return_74),
    .ap_return_75(grp_normalize_wlo_166_fu_789_ap_return_75),
    .ap_return_76(grp_normalize_wlo_166_fu_789_ap_return_76),
    .ap_return_77(grp_normalize_wlo_166_fu_789_ap_return_77),
    .ap_return_78(grp_normalize_wlo_166_fu_789_ap_return_78),
    .ap_return_79(grp_normalize_wlo_166_fu_789_ap_return_79),
    .ap_return_80(grp_normalize_wlo_166_fu_789_ap_return_80),
    .ap_return_81(grp_normalize_wlo_166_fu_789_ap_return_81),
    .ap_return_82(grp_normalize_wlo_166_fu_789_ap_return_82),
    .ap_return_83(grp_normalize_wlo_166_fu_789_ap_return_83),
    .ap_return_84(grp_normalize_wlo_166_fu_789_ap_return_84),
    .ap_return_85(grp_normalize_wlo_166_fu_789_ap_return_85),
    .ap_return_86(grp_normalize_wlo_166_fu_789_ap_return_86),
    .ap_return_87(grp_normalize_wlo_166_fu_789_ap_return_87),
    .ap_return_88(grp_normalize_wlo_166_fu_789_ap_return_88),
    .ap_return_89(grp_normalize_wlo_166_fu_789_ap_return_89),
    .ap_return_90(grp_normalize_wlo_166_fu_789_ap_return_90),
    .ap_return_91(grp_normalize_wlo_166_fu_789_ap_return_91),
    .ap_return_92(grp_normalize_wlo_166_fu_789_ap_return_92),
    .ap_return_93(grp_normalize_wlo_166_fu_789_ap_return_93),
    .ap_return_94(grp_normalize_wlo_166_fu_789_ap_return_94),
    .ap_return_95(grp_normalize_wlo_166_fu_789_ap_return_95),
    .ap_return_96(grp_normalize_wlo_166_fu_789_ap_return_96),
    .ap_return_97(grp_normalize_wlo_166_fu_789_ap_return_97),
    .ap_return_98(grp_normalize_wlo_166_fu_789_ap_return_98),
    .ap_return_99(grp_normalize_wlo_166_fu_789_ap_return_99),
    .ap_return_100(grp_normalize_wlo_166_fu_789_ap_return_100),
    .ap_return_101(grp_normalize_wlo_166_fu_789_ap_return_101),
    .ap_return_102(grp_normalize_wlo_166_fu_789_ap_return_102),
    .ap_return_103(grp_normalize_wlo_166_fu_789_ap_return_103)
);

L3_wlo_166 grp_L3_wlo_166_fu_798(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_L3_wlo_166_fu_798_ap_start),
    .ap_done(grp_L3_wlo_166_fu_798_ap_done),
    .ap_idle(grp_L3_wlo_166_fu_798_ap_idle),
    .ap_ready(grp_L3_wlo_166_fu_798_ap_ready),
    .x_0_0_V_read(y_L2_0_0_V_reg_2334),
    .x_0_1_V_read(y_L2_0_1_V_reg_2339),
    .x_1_0_V_read(y_L2_1_0_V_reg_2344),
    .x_1_1_V_read(y_L2_1_1_V_reg_2349),
    .x_2_0_V_read(y_L2_2_0_V_reg_2354),
    .x_2_1_V_read(y_L2_2_1_V_reg_2359),
    .x_3_0_V_read(y_L2_3_0_V_reg_2364),
    .x_3_1_V_read(y_L2_3_1_V_reg_2369),
    .x_4_0_V_read(y_L2_4_0_V_reg_2374),
    .x_4_1_V_read(y_L2_4_1_V_reg_2379),
    .x_5_0_V_read(y_L2_5_0_V_reg_2384),
    .x_5_1_V_read(y_L2_5_1_V_reg_2389),
    .x_6_0_V_read(y_L2_6_0_V_reg_2394),
    .x_6_1_V_read(y_L2_6_1_V_reg_2399),
    .x_7_0_V_read(y_L2_7_0_V_reg_2404),
    .x_7_1_V_read(y_L2_7_1_V_reg_2409),
    .x_8_0_V_read(y_L2_8_0_V_reg_2414),
    .x_8_1_V_read(y_L2_8_1_V_reg_2419),
    .x_9_0_V_read(y_L2_9_0_V_reg_2424),
    .x_9_1_V_read(y_L2_9_1_V_reg_2429),
    .x_10_0_V_read(y_L2_10_0_V_reg_2434),
    .x_10_1_V_read(y_L2_10_1_V_reg_2439),
    .x_11_0_V_read(y_L2_11_0_V_reg_2444),
    .x_11_1_V_read(y_L2_11_1_V_reg_2449),
    .x_12_0_V_read(y_L2_12_0_V_reg_2454),
    .x_12_1_V_read(y_L2_12_1_V_reg_2459),
    .x_13_0_V_read(y_L2_13_0_V_reg_2464),
    .x_13_1_V_read(y_L2_13_1_V_reg_2469),
    .x_14_0_V_read(y_L2_14_0_V_reg_2474),
    .x_14_1_V_read(y_L2_14_1_V_reg_2479),
    .x_15_0_V_read(y_L2_15_0_V_reg_2484),
    .x_15_1_V_read(y_L2_15_1_V_reg_2489),
    .x_16_0_V_read(y_L2_16_0_V_reg_2494),
    .x_16_1_V_read(y_L2_16_1_V_reg_2499),
    .x_17_0_V_read(y_L2_17_0_V_reg_2504),
    .x_17_1_V_read(y_L2_17_1_V_reg_2509),
    .x_18_0_V_read(y_L2_18_0_V_reg_2514),
    .x_18_1_V_read(y_L2_18_1_V_reg_2519),
    .x_19_0_V_read(y_L2_19_0_V_reg_2524),
    .x_19_1_V_read(y_L2_19_1_V_reg_2529),
    .x_20_0_V_read(y_L2_20_0_V_reg_2534),
    .x_20_1_V_read(y_L2_20_1_V_reg_2539),
    .x_21_0_V_read(y_L2_21_0_V_reg_2544),
    .x_21_1_V_read(y_L2_21_1_V_reg_2549),
    .x_22_0_V_read(y_L2_22_0_V_reg_2554),
    .x_22_1_V_read(y_L2_22_1_V_reg_2559),
    .x_23_0_V_read(y_L2_23_0_V_reg_2564),
    .x_23_1_V_read(y_L2_23_1_V_reg_2569),
    .x_24_0_V_read(y_L2_24_0_V_reg_2574),
    .x_24_1_V_read(y_L2_24_1_V_reg_2579),
    .x_25_0_V_read(y_L2_25_0_V_reg_2584),
    .x_25_1_V_read(y_L2_25_1_V_reg_2589),
    .y_L3_V_address0(grp_L3_wlo_166_fu_798_y_L3_V_address0),
    .y_L3_V_ce0(grp_L3_wlo_166_fu_798_y_L3_V_ce0),
    .y_L3_V_we0(grp_L3_wlo_166_fu_798_y_L3_V_we0),
    .y_L3_V_d0(grp_L3_wlo_166_fu_798_y_L3_V_d0)
);

separate_complex_wlo grp_separate_complex_wlo_fu_961(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_separate_complex_wlo_fu_961_ap_start),
    .ap_done(grp_separate_complex_wlo_fu_961_ap_done),
    .ap_idle(grp_separate_complex_wlo_fu_961_ap_idle),
    .ap_ready(grp_separate_complex_wlo_fu_961_ap_ready),
    .LS_stream_TDATA(LS_stream_V_data_0_data_out),
    .LS_stream_TVALID(grp_separate_complex_wlo_fu_961_LS_stream_TVALID),
    .LS_stream_TREADY(grp_separate_complex_wlo_fu_961_LS_stream_TREADY),
    .LS_stream_TLAST(LS_stream_V_last_V_0_data_out),
    .sep_V_address0(grp_separate_complex_wlo_fu_961_sep_V_address0),
    .sep_V_ce0(grp_separate_complex_wlo_fu_961_sep_V_ce0),
    .sep_V_we0(grp_separate_complex_wlo_fu_961_sep_V_we0),
    .sep_V_d0(grp_separate_complex_wlo_fu_961_sep_V_d0),
    .sep_V_address1(grp_separate_complex_wlo_fu_961_sep_V_address1),
    .sep_V_ce1(grp_separate_complex_wlo_fu_961_sep_V_ce1),
    .sep_V_we1(grp_separate_complex_wlo_fu_961_sep_V_we1),
    .sep_V_d1(grp_separate_complex_wlo_fu_961_sep_V_d1)
);

reconstruct_complex_s grp_reconstruct_complex_s_fu_970(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_reconstruct_complex_s_fu_970_ap_start),
    .ap_done(grp_reconstruct_complex_s_fu_970_ap_done),
    .ap_idle(grp_reconstruct_complex_s_fu_970_ap_idle),
    .ap_ready(grp_reconstruct_complex_s_fu_970_ap_ready),
    .y_L3_V_address0(grp_reconstruct_complex_s_fu_970_y_L3_V_address0),
    .y_L3_V_ce0(grp_reconstruct_complex_s_fu_970_y_L3_V_ce0),
    .y_L3_V_q0(denorm_DNN_V_q0),
    .y_L3_V_address1(grp_reconstruct_complex_s_fu_970_y_L3_V_address1),
    .y_L3_V_ce1(grp_reconstruct_complex_s_fu_970_y_L3_V_ce1),
    .y_L3_V_q1(denorm_DNN_V_q1),
    .DNN_out_TDATA(grp_reconstruct_complex_s_fu_970_DNN_out_TDATA),
    .DNN_out_TVALID(grp_reconstruct_complex_s_fu_970_DNN_out_TVALID),
    .DNN_out_TREADY(grp_reconstruct_complex_s_fu_970_DNN_out_TREADY),
    .DNN_out_TLAST(grp_reconstruct_complex_s_fu_970_DNN_out_TLAST)
);

DNN_wlo_166_mac_mc2C #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 26 ))
DNN_wlo_166_mac_mc2C_U500(
    .din0(grp_fu_1805_p0),
    .din1(y_L3_V_load_reg_2623),
    .din2(rhs_V_fu_1784_p3),
    .dout(grp_fu_1805_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        DNN_out_V_data_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == DNN_out_V_data_1_ack_out) & (1'b1 == DNN_out_V_data_1_vld_out))) begin
            DNN_out_V_data_1_sel_rd <= ~DNN_out_V_data_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        DNN_out_V_data_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == DNN_out_V_data_1_ack_in) & (1'b1 == DNN_out_V_data_1_vld_in))) begin
            DNN_out_V_data_1_sel_wr <= ~DNN_out_V_data_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        DNN_out_V_data_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == DNN_out_V_data_1_state) & (1'b0 == DNN_out_V_data_1_vld_in)) | ((2'd3 == DNN_out_V_data_1_state) & (1'b0 == DNN_out_V_data_1_vld_in) & (1'b1 == DNN_out_V_data_1_ack_out)))) begin
            DNN_out_V_data_1_state <= 2'd2;
        end else if ((((2'd1 == DNN_out_V_data_1_state) & (1'b0 == DNN_out_TREADY)) | ((2'd3 == DNN_out_V_data_1_state) & (1'b0 == DNN_out_TREADY) & (1'b1 == DNN_out_V_data_1_vld_in)))) begin
            DNN_out_V_data_1_state <= 2'd1;
        end else if (((~((1'b0 == DNN_out_V_data_1_vld_in) & (1'b1 == DNN_out_V_data_1_ack_out)) & ~((1'b0 == DNN_out_TREADY) & (1'b1 == DNN_out_V_data_1_vld_in)) & (2'd3 == DNN_out_V_data_1_state)) | ((2'd1 == DNN_out_V_data_1_state) & (1'b1 == DNN_out_V_data_1_ack_out)) | ((2'd2 == DNN_out_V_data_1_state) & (1'b1 == DNN_out_V_data_1_vld_in)))) begin
            DNN_out_V_data_1_state <= 2'd3;
        end else begin
            DNN_out_V_data_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        DNN_out_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == DNN_out_V_last_V_1_ack_out) & (1'b1 == DNN_out_V_last_V_1_vld_out))) begin
            DNN_out_V_last_V_1_sel_rd <= ~DNN_out_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        DNN_out_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == DNN_out_V_last_V_1_ack_in) & (1'b1 == DNN_out_V_last_V_1_vld_in))) begin
            DNN_out_V_last_V_1_sel_wr <= ~DNN_out_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        DNN_out_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((2'd2 == DNN_out_V_last_V_1_state) & (1'b0 == DNN_out_V_last_V_1_vld_in)) | ((2'd3 == DNN_out_V_last_V_1_state) & (1'b0 == DNN_out_V_last_V_1_vld_in) & (1'b1 == DNN_out_V_last_V_1_ack_out)))) begin
            DNN_out_V_last_V_1_state <= 2'd2;
        end else if ((((2'd1 == DNN_out_V_last_V_1_state) & (1'b0 == DNN_out_TREADY)) | ((2'd3 == DNN_out_V_last_V_1_state) & (1'b0 == DNN_out_TREADY) & (1'b1 == DNN_out_V_last_V_1_vld_in)))) begin
            DNN_out_V_last_V_1_state <= 2'd1;
        end else if (((~((1'b0 == DNN_out_V_last_V_1_vld_in) & (1'b1 == DNN_out_V_last_V_1_ack_out)) & ~((1'b0 == DNN_out_TREADY) & (1'b1 == DNN_out_V_last_V_1_vld_in)) & (2'd3 == DNN_out_V_last_V_1_state)) | ((2'd1 == DNN_out_V_last_V_1_state) & (1'b1 == DNN_out_V_last_V_1_ack_out)) | ((2'd2 == DNN_out_V_last_V_1_state) & (1'b1 == DNN_out_V_last_V_1_vld_in)))) begin
            DNN_out_V_last_V_1_state <= 2'd3;
        end else begin
            DNN_out_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        LS_stream_V_data_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == LS_stream_V_data_0_ack_out) & (1'b1 == LS_stream_V_data_0_vld_out))) begin
            LS_stream_V_data_0_sel_rd <= ~LS_stream_V_data_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        LS_stream_V_data_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == LS_stream_V_data_0_ack_in) & (1'b1 == LS_stream_V_data_0_vld_in))) begin
            LS_stream_V_data_0_sel_wr <= ~LS_stream_V_data_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        LS_stream_V_data_0_state <= 2'd0;
    end else begin
        if ((((2'd2 == LS_stream_V_data_0_state) & (1'b0 == LS_stream_V_data_0_vld_in)) | ((2'd3 == LS_stream_V_data_0_state) & (1'b0 == LS_stream_V_data_0_vld_in) & (1'b1 == LS_stream_V_data_0_ack_out)))) begin
            LS_stream_V_data_0_state <= 2'd2;
        end else if ((((2'd1 == LS_stream_V_data_0_state) & (1'b0 == LS_stream_V_data_0_ack_out)) | ((2'd3 == LS_stream_V_data_0_state) & (1'b0 == LS_stream_V_data_0_ack_out) & (1'b1 == LS_stream_V_data_0_vld_in)))) begin
            LS_stream_V_data_0_state <= 2'd1;
        end else if (((~((1'b0 == LS_stream_V_data_0_vld_in) & (1'b1 == LS_stream_V_data_0_ack_out)) & ~((1'b0 == LS_stream_V_data_0_ack_out) & (1'b1 == LS_stream_V_data_0_vld_in)) & (2'd3 == LS_stream_V_data_0_state)) | ((2'd1 == LS_stream_V_data_0_state) & (1'b1 == LS_stream_V_data_0_ack_out)) | ((2'd2 == LS_stream_V_data_0_state) & (1'b1 == LS_stream_V_data_0_vld_in)))) begin
            LS_stream_V_data_0_state <= 2'd3;
        end else begin
            LS_stream_V_data_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        LS_stream_V_last_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == LS_stream_V_last_V_0_ack_out) & (1'b1 == LS_stream_V_last_V_0_vld_out))) begin
            LS_stream_V_last_V_0_sel_rd <= ~LS_stream_V_last_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        LS_stream_V_last_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == LS_stream_V_last_V_0_ack_in) & (1'b1 == LS_stream_V_last_V_0_vld_in))) begin
            LS_stream_V_last_V_0_sel_wr <= ~LS_stream_V_last_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        LS_stream_V_last_V_0_state <= 2'd0;
    end else begin
        if ((((2'd2 == LS_stream_V_last_V_0_state) & (1'b0 == LS_stream_V_last_V_0_vld_in)) | ((2'd3 == LS_stream_V_last_V_0_state) & (1'b0 == LS_stream_V_last_V_0_vld_in) & (1'b1 == LS_stream_V_last_V_0_ack_out)))) begin
            LS_stream_V_last_V_0_state <= 2'd2;
        end else if ((((2'd1 == LS_stream_V_last_V_0_state) & (1'b0 == LS_stream_V_last_V_0_ack_out)) | ((2'd3 == LS_stream_V_last_V_0_state) & (1'b0 == LS_stream_V_last_V_0_ack_out) & (1'b1 == LS_stream_V_last_V_0_vld_in)))) begin
            LS_stream_V_last_V_0_state <= 2'd1;
        end else if (((~((1'b0 == LS_stream_V_last_V_0_vld_in) & (1'b1 == LS_stream_V_last_V_0_ack_out)) & ~((1'b0 == LS_stream_V_last_V_0_ack_out) & (1'b1 == LS_stream_V_last_V_0_vld_in)) & (2'd3 == LS_stream_V_last_V_0_state)) | ((2'd1 == LS_stream_V_last_V_0_state) & (1'b1 == LS_stream_V_last_V_0_ack_out)) | ((2'd2 == LS_stream_V_last_V_0_state) & (1'b1 == LS_stream_V_last_V_0_vld_in)))) begin
            LS_stream_V_last_V_0_state <= 2'd3;
        end else begin
            LS_stream_V_last_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_L3_wlo_166_fu_798_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state8)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state8);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((grp_L3_wlo_166_fu_798_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_L2_wlo_166_fu_471_ap_start_reg <= 1'b0;
    end else begin
        if (((grp_normalize_wlo_166_fu_789_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            grp_L2_wlo_166_fu_471_ap_start_reg <= 1'b1;
        end else if ((grp_L2_wlo_166_fu_471_ap_ready == 1'b1)) begin
            grp_L2_wlo_166_fu_471_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_L3_wlo_166_fu_798_ap_start_reg <= 1'b0;
    end else begin
        if (((grp_L2_wlo_166_fu_471_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
            grp_L3_wlo_166_fu_798_ap_start_reg <= 1'b1;
        end else if ((grp_L3_wlo_166_fu_798_ap_ready == 1'b1)) begin
            grp_L3_wlo_166_fu_798_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_normalize_wlo_166_fu_789_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_normalize_wlo_166_fu_789_ap_start_reg <= 1'b1;
        end else if ((grp_normalize_wlo_166_fu_789_ap_ready == 1'b1)) begin
            grp_normalize_wlo_166_fu_789_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_reconstruct_complex_s_fu_970_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_reconstruct_complex_s_fu_970_ap_start_reg <= 1'b1;
        end else if ((grp_reconstruct_complex_s_fu_970_ap_ready == 1'b1)) begin
            grp_reconstruct_complex_s_fu_970_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_separate_complex_wlo_fu_961_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_separate_complex_wlo_fu_961_ap_start_reg <= 1'b1;
        end else if ((grp_separate_complex_wlo_fu_961_ap_ready == 1'b1)) begin
            grp_separate_complex_wlo_fu_961_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln653_fu_1759_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_i_reg_460 <= i_fu_1765_p2;
    end else if (((grp_L3_wlo_166_fu_798_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        i_0_i_reg_460 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == DNN_out_V_data_1_load_A)) begin
        DNN_out_V_data_1_payload_A <= grp_reconstruct_complex_s_fu_970_DNN_out_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == DNN_out_V_data_1_load_B)) begin
        DNN_out_V_data_1_payload_B <= grp_reconstruct_complex_s_fu_970_DNN_out_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == DNN_out_V_last_V_1_load_A)) begin
        DNN_out_V_last_V_1_payload_A <= grp_reconstruct_complex_s_fu_970_DNN_out_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == DNN_out_V_last_V_1_load_B)) begin
        DNN_out_V_last_V_1_payload_B <= grp_reconstruct_complex_s_fu_970_DNN_out_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == LS_stream_V_data_0_load_A)) begin
        LS_stream_V_data_0_payload_A <= LS_stream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == LS_stream_V_data_0_load_B)) begin
        LS_stream_V_data_0_payload_B <= LS_stream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == LS_stream_V_last_V_0_load_A)) begin
        LS_stream_V_last_V_0_payload_A <= LS_stream_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == LS_stream_V_last_V_0_load_B)) begin
        LS_stream_V_last_V_0_payload_B <= LS_stream_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln653_reg_2594 <= icmp_ln653_fu_1759_p2;
        icmp_ln653_reg_2594_pp0_iter1_reg <= icmp_ln653_reg_2594;
        zext_ln655_reg_2603_pp0_iter1_reg[6 : 0] <= zext_ln655_reg_2603[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_normalize_wlo_166_fu_789_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        norm_LS_data_0_0_V_reg_1814 <= grp_normalize_wlo_166_fu_789_ap_return_0;
        norm_LS_data_0_1_V_reg_1819 <= grp_normalize_wlo_166_fu_789_ap_return_1;
        norm_LS_data_10_0_s_reg_1914 <= grp_normalize_wlo_166_fu_789_ap_return_20;
        norm_LS_data_10_1_s_reg_1919 <= grp_normalize_wlo_166_fu_789_ap_return_21;
        norm_LS_data_11_0_s_reg_1924 <= grp_normalize_wlo_166_fu_789_ap_return_22;
        norm_LS_data_11_1_s_reg_1929 <= grp_normalize_wlo_166_fu_789_ap_return_23;
        norm_LS_data_12_0_s_reg_1934 <= grp_normalize_wlo_166_fu_789_ap_return_24;
        norm_LS_data_12_1_s_reg_1939 <= grp_normalize_wlo_166_fu_789_ap_return_25;
        norm_LS_data_13_0_s_reg_1944 <= grp_normalize_wlo_166_fu_789_ap_return_26;
        norm_LS_data_13_1_s_reg_1949 <= grp_normalize_wlo_166_fu_789_ap_return_27;
        norm_LS_data_14_0_s_reg_1954 <= grp_normalize_wlo_166_fu_789_ap_return_28;
        norm_LS_data_14_1_s_reg_1959 <= grp_normalize_wlo_166_fu_789_ap_return_29;
        norm_LS_data_15_0_s_reg_1964 <= grp_normalize_wlo_166_fu_789_ap_return_30;
        norm_LS_data_15_1_s_reg_1969 <= grp_normalize_wlo_166_fu_789_ap_return_31;
        norm_LS_data_16_0_s_reg_1974 <= grp_normalize_wlo_166_fu_789_ap_return_32;
        norm_LS_data_16_1_s_reg_1979 <= grp_normalize_wlo_166_fu_789_ap_return_33;
        norm_LS_data_17_0_s_reg_1984 <= grp_normalize_wlo_166_fu_789_ap_return_34;
        norm_LS_data_17_1_s_reg_1989 <= grp_normalize_wlo_166_fu_789_ap_return_35;
        norm_LS_data_18_0_s_reg_1994 <= grp_normalize_wlo_166_fu_789_ap_return_36;
        norm_LS_data_18_1_s_reg_1999 <= grp_normalize_wlo_166_fu_789_ap_return_37;
        norm_LS_data_19_0_s_reg_2004 <= grp_normalize_wlo_166_fu_789_ap_return_38;
        norm_LS_data_19_1_s_reg_2009 <= grp_normalize_wlo_166_fu_789_ap_return_39;
        norm_LS_data_1_0_V_reg_1824 <= grp_normalize_wlo_166_fu_789_ap_return_2;
        norm_LS_data_1_1_V_reg_1829 <= grp_normalize_wlo_166_fu_789_ap_return_3;
        norm_LS_data_20_0_s_reg_2014 <= grp_normalize_wlo_166_fu_789_ap_return_40;
        norm_LS_data_20_1_s_reg_2019 <= grp_normalize_wlo_166_fu_789_ap_return_41;
        norm_LS_data_21_0_s_reg_2024 <= grp_normalize_wlo_166_fu_789_ap_return_42;
        norm_LS_data_21_1_s_reg_2029 <= grp_normalize_wlo_166_fu_789_ap_return_43;
        norm_LS_data_22_0_s_reg_2034 <= grp_normalize_wlo_166_fu_789_ap_return_44;
        norm_LS_data_22_1_s_reg_2039 <= grp_normalize_wlo_166_fu_789_ap_return_45;
        norm_LS_data_23_0_s_reg_2044 <= grp_normalize_wlo_166_fu_789_ap_return_46;
        norm_LS_data_23_1_s_reg_2049 <= grp_normalize_wlo_166_fu_789_ap_return_47;
        norm_LS_data_24_0_s_reg_2054 <= grp_normalize_wlo_166_fu_789_ap_return_48;
        norm_LS_data_24_1_s_reg_2059 <= grp_normalize_wlo_166_fu_789_ap_return_49;
        norm_LS_data_25_0_s_reg_2064 <= grp_normalize_wlo_166_fu_789_ap_return_50;
        norm_LS_data_25_1_s_reg_2069 <= grp_normalize_wlo_166_fu_789_ap_return_51;
        norm_LS_data_26_0_s_reg_2074 <= grp_normalize_wlo_166_fu_789_ap_return_52;
        norm_LS_data_26_1_s_reg_2079 <= grp_normalize_wlo_166_fu_789_ap_return_53;
        norm_LS_data_27_0_s_reg_2084 <= grp_normalize_wlo_166_fu_789_ap_return_54;
        norm_LS_data_27_1_s_reg_2089 <= grp_normalize_wlo_166_fu_789_ap_return_55;
        norm_LS_data_28_0_s_reg_2094 <= grp_normalize_wlo_166_fu_789_ap_return_56;
        norm_LS_data_28_1_s_reg_2099 <= grp_normalize_wlo_166_fu_789_ap_return_57;
        norm_LS_data_29_0_s_reg_2104 <= grp_normalize_wlo_166_fu_789_ap_return_58;
        norm_LS_data_29_1_s_reg_2109 <= grp_normalize_wlo_166_fu_789_ap_return_59;
        norm_LS_data_2_0_V_reg_1834 <= grp_normalize_wlo_166_fu_789_ap_return_4;
        norm_LS_data_2_1_V_reg_1839 <= grp_normalize_wlo_166_fu_789_ap_return_5;
        norm_LS_data_30_0_s_reg_2114 <= grp_normalize_wlo_166_fu_789_ap_return_60;
        norm_LS_data_30_1_s_reg_2119 <= grp_normalize_wlo_166_fu_789_ap_return_61;
        norm_LS_data_31_0_s_reg_2124 <= grp_normalize_wlo_166_fu_789_ap_return_62;
        norm_LS_data_31_1_s_reg_2129 <= grp_normalize_wlo_166_fu_789_ap_return_63;
        norm_LS_data_32_0_s_reg_2134 <= grp_normalize_wlo_166_fu_789_ap_return_64;
        norm_LS_data_32_1_s_reg_2139 <= grp_normalize_wlo_166_fu_789_ap_return_65;
        norm_LS_data_33_0_s_reg_2144 <= grp_normalize_wlo_166_fu_789_ap_return_66;
        norm_LS_data_33_1_s_reg_2149 <= grp_normalize_wlo_166_fu_789_ap_return_67;
        norm_LS_data_34_0_s_reg_2154 <= grp_normalize_wlo_166_fu_789_ap_return_68;
        norm_LS_data_34_1_s_reg_2159 <= grp_normalize_wlo_166_fu_789_ap_return_69;
        norm_LS_data_35_0_s_reg_2164 <= grp_normalize_wlo_166_fu_789_ap_return_70;
        norm_LS_data_35_1_s_reg_2169 <= grp_normalize_wlo_166_fu_789_ap_return_71;
        norm_LS_data_36_0_s_reg_2174 <= grp_normalize_wlo_166_fu_789_ap_return_72;
        norm_LS_data_36_1_s_reg_2179 <= grp_normalize_wlo_166_fu_789_ap_return_73;
        norm_LS_data_37_0_s_reg_2184 <= grp_normalize_wlo_166_fu_789_ap_return_74;
        norm_LS_data_37_1_s_reg_2189 <= grp_normalize_wlo_166_fu_789_ap_return_75;
        norm_LS_data_38_0_s_reg_2194 <= grp_normalize_wlo_166_fu_789_ap_return_76;
        norm_LS_data_38_1_s_reg_2199 <= grp_normalize_wlo_166_fu_789_ap_return_77;
        norm_LS_data_39_0_s_reg_2204 <= grp_normalize_wlo_166_fu_789_ap_return_78;
        norm_LS_data_39_1_s_reg_2209 <= grp_normalize_wlo_166_fu_789_ap_return_79;
        norm_LS_data_3_0_V_reg_1844 <= grp_normalize_wlo_166_fu_789_ap_return_6;
        norm_LS_data_3_1_V_reg_1849 <= grp_normalize_wlo_166_fu_789_ap_return_7;
        norm_LS_data_40_0_s_reg_2214 <= grp_normalize_wlo_166_fu_789_ap_return_80;
        norm_LS_data_40_1_s_reg_2219 <= grp_normalize_wlo_166_fu_789_ap_return_81;
        norm_LS_data_41_0_s_reg_2224 <= grp_normalize_wlo_166_fu_789_ap_return_82;
        norm_LS_data_41_1_s_reg_2229 <= grp_normalize_wlo_166_fu_789_ap_return_83;
        norm_LS_data_42_0_s_reg_2234 <= grp_normalize_wlo_166_fu_789_ap_return_84;
        norm_LS_data_42_1_s_reg_2239 <= grp_normalize_wlo_166_fu_789_ap_return_85;
        norm_LS_data_43_0_s_reg_2244 <= grp_normalize_wlo_166_fu_789_ap_return_86;
        norm_LS_data_43_1_s_reg_2249 <= grp_normalize_wlo_166_fu_789_ap_return_87;
        norm_LS_data_44_0_s_reg_2254 <= grp_normalize_wlo_166_fu_789_ap_return_88;
        norm_LS_data_44_1_s_reg_2259 <= grp_normalize_wlo_166_fu_789_ap_return_89;
        norm_LS_data_45_0_s_reg_2264 <= grp_normalize_wlo_166_fu_789_ap_return_90;
        norm_LS_data_45_1_s_reg_2269 <= grp_normalize_wlo_166_fu_789_ap_return_91;
        norm_LS_data_46_0_s_reg_2274 <= grp_normalize_wlo_166_fu_789_ap_return_92;
        norm_LS_data_46_1_s_reg_2279 <= grp_normalize_wlo_166_fu_789_ap_return_93;
        norm_LS_data_47_0_s_reg_2284 <= grp_normalize_wlo_166_fu_789_ap_return_94;
        norm_LS_data_47_1_s_reg_2289 <= grp_normalize_wlo_166_fu_789_ap_return_95;
        norm_LS_data_48_0_s_reg_2294 <= grp_normalize_wlo_166_fu_789_ap_return_96;
        norm_LS_data_48_1_s_reg_2299 <= grp_normalize_wlo_166_fu_789_ap_return_97;
        norm_LS_data_49_0_s_reg_2304 <= grp_normalize_wlo_166_fu_789_ap_return_98;
        norm_LS_data_49_1_s_reg_2309 <= grp_normalize_wlo_166_fu_789_ap_return_99;
        norm_LS_data_4_0_V_reg_1854 <= grp_normalize_wlo_166_fu_789_ap_return_8;
        norm_LS_data_4_1_V_reg_1859 <= grp_normalize_wlo_166_fu_789_ap_return_9;
        norm_LS_data_50_0_s_reg_2314 <= grp_normalize_wlo_166_fu_789_ap_return_100;
        norm_LS_data_50_1_s_reg_2319 <= grp_normalize_wlo_166_fu_789_ap_return_101;
        norm_LS_data_51_0_s_reg_2324 <= grp_normalize_wlo_166_fu_789_ap_return_102;
        norm_LS_data_51_1_s_reg_2329 <= grp_normalize_wlo_166_fu_789_ap_return_103;
        norm_LS_data_5_0_V_reg_1864 <= grp_normalize_wlo_166_fu_789_ap_return_10;
        norm_LS_data_5_1_V_reg_1869 <= grp_normalize_wlo_166_fu_789_ap_return_11;
        norm_LS_data_6_0_V_reg_1874 <= grp_normalize_wlo_166_fu_789_ap_return_12;
        norm_LS_data_6_1_V_reg_1879 <= grp_normalize_wlo_166_fu_789_ap_return_13;
        norm_LS_data_7_0_V_reg_1884 <= grp_normalize_wlo_166_fu_789_ap_return_14;
        norm_LS_data_7_1_V_reg_1889 <= grp_normalize_wlo_166_fu_789_ap_return_15;
        norm_LS_data_8_0_V_reg_1894 <= grp_normalize_wlo_166_fu_789_ap_return_16;
        norm_LS_data_8_1_V_reg_1899 <= grp_normalize_wlo_166_fu_789_ap_return_17;
        norm_LS_data_9_0_V_reg_1904 <= grp_normalize_wlo_166_fu_789_ap_return_18;
        norm_LS_data_9_1_V_reg_1909 <= grp_normalize_wlo_166_fu_789_ap_return_19;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln653_reg_2594 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_12_reg_2633 <= mean_o_V_q0;
        std_o_V_load_reg_2628 <= std_o_V_q0;
        y_L3_V_load_reg_2623 <= y_L3_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_L2_wlo_166_fu_471_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        y_L2_0_0_V_reg_2334 <= grp_L2_wlo_166_fu_471_ap_return_0;
        y_L2_0_1_V_reg_2339 <= grp_L2_wlo_166_fu_471_ap_return_1;
        y_L2_10_0_V_reg_2434 <= grp_L2_wlo_166_fu_471_ap_return_20;
        y_L2_10_1_V_reg_2439 <= grp_L2_wlo_166_fu_471_ap_return_21;
        y_L2_11_0_V_reg_2444 <= grp_L2_wlo_166_fu_471_ap_return_22;
        y_L2_11_1_V_reg_2449 <= grp_L2_wlo_166_fu_471_ap_return_23;
        y_L2_12_0_V_reg_2454 <= grp_L2_wlo_166_fu_471_ap_return_24;
        y_L2_12_1_V_reg_2459 <= grp_L2_wlo_166_fu_471_ap_return_25;
        y_L2_13_0_V_reg_2464 <= grp_L2_wlo_166_fu_471_ap_return_26;
        y_L2_13_1_V_reg_2469 <= grp_L2_wlo_166_fu_471_ap_return_27;
        y_L2_14_0_V_reg_2474 <= grp_L2_wlo_166_fu_471_ap_return_28;
        y_L2_14_1_V_reg_2479 <= grp_L2_wlo_166_fu_471_ap_return_29;
        y_L2_15_0_V_reg_2484 <= grp_L2_wlo_166_fu_471_ap_return_30;
        y_L2_15_1_V_reg_2489 <= grp_L2_wlo_166_fu_471_ap_return_31;
        y_L2_16_0_V_reg_2494 <= grp_L2_wlo_166_fu_471_ap_return_32;
        y_L2_16_1_V_reg_2499 <= grp_L2_wlo_166_fu_471_ap_return_33;
        y_L2_17_0_V_reg_2504 <= grp_L2_wlo_166_fu_471_ap_return_34;
        y_L2_17_1_V_reg_2509 <= grp_L2_wlo_166_fu_471_ap_return_35;
        y_L2_18_0_V_reg_2514 <= grp_L2_wlo_166_fu_471_ap_return_36;
        y_L2_18_1_V_reg_2519 <= grp_L2_wlo_166_fu_471_ap_return_37;
        y_L2_19_0_V_reg_2524 <= grp_L2_wlo_166_fu_471_ap_return_38;
        y_L2_19_1_V_reg_2529 <= grp_L2_wlo_166_fu_471_ap_return_39;
        y_L2_1_0_V_reg_2344 <= grp_L2_wlo_166_fu_471_ap_return_2;
        y_L2_1_1_V_reg_2349 <= grp_L2_wlo_166_fu_471_ap_return_3;
        y_L2_20_0_V_reg_2534 <= grp_L2_wlo_166_fu_471_ap_return_40;
        y_L2_20_1_V_reg_2539 <= grp_L2_wlo_166_fu_471_ap_return_41;
        y_L2_21_0_V_reg_2544 <= grp_L2_wlo_166_fu_471_ap_return_42;
        y_L2_21_1_V_reg_2549 <= grp_L2_wlo_166_fu_471_ap_return_43;
        y_L2_22_0_V_reg_2554 <= grp_L2_wlo_166_fu_471_ap_return_44;
        y_L2_22_1_V_reg_2559 <= grp_L2_wlo_166_fu_471_ap_return_45;
        y_L2_23_0_V_reg_2564 <= grp_L2_wlo_166_fu_471_ap_return_46;
        y_L2_23_1_V_reg_2569 <= grp_L2_wlo_166_fu_471_ap_return_47;
        y_L2_24_0_V_reg_2574 <= grp_L2_wlo_166_fu_471_ap_return_48;
        y_L2_24_1_V_reg_2579 <= grp_L2_wlo_166_fu_471_ap_return_49;
        y_L2_25_0_V_reg_2584 <= grp_L2_wlo_166_fu_471_ap_return_50;
        y_L2_25_1_V_reg_2589 <= grp_L2_wlo_166_fu_471_ap_return_51;
        y_L2_2_0_V_reg_2354 <= grp_L2_wlo_166_fu_471_ap_return_4;
        y_L2_2_1_V_reg_2359 <= grp_L2_wlo_166_fu_471_ap_return_5;
        y_L2_3_0_V_reg_2364 <= grp_L2_wlo_166_fu_471_ap_return_6;
        y_L2_3_1_V_reg_2369 <= grp_L2_wlo_166_fu_471_ap_return_7;
        y_L2_4_0_V_reg_2374 <= grp_L2_wlo_166_fu_471_ap_return_8;
        y_L2_4_1_V_reg_2379 <= grp_L2_wlo_166_fu_471_ap_return_9;
        y_L2_5_0_V_reg_2384 <= grp_L2_wlo_166_fu_471_ap_return_10;
        y_L2_5_1_V_reg_2389 <= grp_L2_wlo_166_fu_471_ap_return_11;
        y_L2_6_0_V_reg_2394 <= grp_L2_wlo_166_fu_471_ap_return_12;
        y_L2_6_1_V_reg_2399 <= grp_L2_wlo_166_fu_471_ap_return_13;
        y_L2_7_0_V_reg_2404 <= grp_L2_wlo_166_fu_471_ap_return_14;
        y_L2_7_1_V_reg_2409 <= grp_L2_wlo_166_fu_471_ap_return_15;
        y_L2_8_0_V_reg_2414 <= grp_L2_wlo_166_fu_471_ap_return_16;
        y_L2_8_1_V_reg_2419 <= grp_L2_wlo_166_fu_471_ap_return_17;
        y_L2_9_0_V_reg_2424 <= grp_L2_wlo_166_fu_471_ap_return_18;
        y_L2_9_1_V_reg_2429 <= grp_L2_wlo_166_fu_471_ap_return_19;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln653_fu_1759_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln655_reg_2603[6 : 0] <= zext_ln655_fu_1771_p1[6 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == DNN_out_V_data_1_sel)) begin
        DNN_out_V_data_1_data_out = DNN_out_V_data_1_payload_B;
    end else begin
        DNN_out_V_data_1_data_out = DNN_out_V_data_1_payload_A;
    end
end

always @ (*) begin
    if ((1'b1 == DNN_out_V_last_V_1_sel)) begin
        DNN_out_V_last_V_1_data_out = DNN_out_V_last_V_1_payload_B;
    end else begin
        DNN_out_V_last_V_1_data_out = DNN_out_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        LS_data_V_address0 = grp_separate_complex_wlo_fu_961_sep_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        LS_data_V_address0 = grp_normalize_wlo_166_fu_789_LS_data_V_address0;
    end else begin
        LS_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        LS_data_V_ce0 = grp_separate_complex_wlo_fu_961_sep_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        LS_data_V_ce0 = grp_normalize_wlo_166_fu_789_LS_data_V_ce0;
    end else begin
        LS_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        LS_data_V_ce1 = grp_separate_complex_wlo_fu_961_sep_V_ce1;
    end else begin
        LS_data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        LS_data_V_we0 = grp_separate_complex_wlo_fu_961_sep_V_we0;
    end else begin
        LS_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        LS_data_V_we1 = grp_separate_complex_wlo_fu_961_sep_V_we1;
    end else begin
        LS_data_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        LS_stream_V_data_0_ack_out = grp_separate_complex_wlo_fu_961_LS_stream_TREADY;
    end else begin
        LS_stream_V_data_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == LS_stream_V_data_0_sel)) begin
        LS_stream_V_data_0_data_out = LS_stream_V_data_0_payload_B;
    end else begin
        LS_stream_V_data_0_data_out = LS_stream_V_data_0_payload_A;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        LS_stream_V_last_V_0_ack_out = grp_separate_complex_wlo_fu_961_LS_stream_TREADY;
    end else begin
        LS_stream_V_last_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == LS_stream_V_last_V_0_sel)) begin
        LS_stream_V_last_V_0_data_out = LS_stream_V_last_V_0_payload_B;
    end else begin
        LS_stream_V_last_V_0_data_out = LS_stream_V_last_V_0_payload_A;
    end
end

always @ (*) begin
    if ((icmp_ln653_fu_1759_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        denorm_DNN_V_address0 = zext_ln655_reg_2603_pp0_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        denorm_DNN_V_address0 = grp_reconstruct_complex_s_fu_970_y_L3_V_address0;
    end else begin
        denorm_DNN_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        denorm_DNN_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        denorm_DNN_V_ce0 = grp_reconstruct_complex_s_fu_970_y_L3_V_ce0;
    end else begin
        denorm_DNN_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        denorm_DNN_V_ce1 = grp_reconstruct_complex_s_fu_970_y_L3_V_ce1;
    end else begin
        denorm_DNN_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln653_reg_2594_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        denorm_DNN_V_we0 = 1'b1;
    end else begin
        denorm_DNN_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mean_o_V_ce0 = 1'b1;
    end else begin
        mean_o_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        std_o_V_ce0 = 1'b1;
    end else begin
        std_o_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_L3_V_address0 = zext_ln655_fu_1771_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        y_L3_V_address0 = grp_L3_wlo_166_fu_798_y_L3_V_address0;
    end else begin
        y_L3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_L3_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        y_L3_V_ce0 = grp_L3_wlo_166_fu_798_y_L3_V_ce0;
    end else begin
        y_L3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        y_L3_V_we0 = grp_L3_wlo_166_fu_798_y_L3_V_we0;
    end else begin
        y_L3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_separate_complex_wlo_fu_961_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_normalize_wlo_166_fu_789_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((grp_L2_wlo_166_fu_471_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((grp_L3_wlo_166_fu_798_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln653_fu_1759_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln653_fu_1759_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (grp_reconstruct_complex_s_fu_970_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if ((~((2'd1 == DNN_out_V_last_V_1_state) | (2'd1 == DNN_out_V_data_1_state) | ((2'd3 == DNN_out_V_last_V_1_state) & (1'b0 == DNN_out_TREADY)) | ((2'd3 == DNN_out_V_data_1_state) & (1'b0 == DNN_out_TREADY))) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DNN_out_TDATA = DNN_out_V_data_1_data_out;

assign DNN_out_TLAST = DNN_out_V_last_V_1_data_out;

assign DNN_out_TVALID = DNN_out_V_last_V_1_state[1'd0];

assign DNN_out_V_data_1_ack_in = DNN_out_V_data_1_state[1'd1];

assign DNN_out_V_data_1_ack_out = DNN_out_TREADY;

assign DNN_out_V_data_1_load_A = (~DNN_out_V_data_1_sel_wr & DNN_out_V_data_1_state_cmp_full);

assign DNN_out_V_data_1_load_B = (DNN_out_V_data_1_state_cmp_full & DNN_out_V_data_1_sel_wr);

assign DNN_out_V_data_1_sel = DNN_out_V_data_1_sel_rd;

assign DNN_out_V_data_1_state_cmp_full = ((DNN_out_V_data_1_state != 2'd1) ? 1'b1 : 1'b0);

assign DNN_out_V_data_1_vld_in = grp_reconstruct_complex_s_fu_970_DNN_out_TVALID;

assign DNN_out_V_data_1_vld_out = DNN_out_V_data_1_state[1'd0];

assign DNN_out_V_last_V_1_ack_in = DNN_out_V_last_V_1_state[1'd1];

assign DNN_out_V_last_V_1_ack_out = DNN_out_TREADY;

assign DNN_out_V_last_V_1_load_A = (~DNN_out_V_last_V_1_sel_wr & DNN_out_V_last_V_1_state_cmp_full);

assign DNN_out_V_last_V_1_load_B = (DNN_out_V_last_V_1_state_cmp_full & DNN_out_V_last_V_1_sel_wr);

assign DNN_out_V_last_V_1_sel = DNN_out_V_last_V_1_sel_rd;

assign DNN_out_V_last_V_1_state_cmp_full = ((DNN_out_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign DNN_out_V_last_V_1_vld_in = grp_reconstruct_complex_s_fu_970_DNN_out_TVALID;

assign DNN_out_V_last_V_1_vld_out = DNN_out_V_last_V_1_state[1'd0];

assign LS_stream_TREADY = LS_stream_V_last_V_0_state[1'd1];

assign LS_stream_V_data_0_ack_in = LS_stream_V_data_0_state[1'd1];

assign LS_stream_V_data_0_load_A = (~LS_stream_V_data_0_sel_wr & LS_stream_V_data_0_state_cmp_full);

assign LS_stream_V_data_0_load_B = (LS_stream_V_data_0_state_cmp_full & LS_stream_V_data_0_sel_wr);

assign LS_stream_V_data_0_sel = LS_stream_V_data_0_sel_rd;

assign LS_stream_V_data_0_state_cmp_full = ((LS_stream_V_data_0_state != 2'd1) ? 1'b1 : 1'b0);

assign LS_stream_V_data_0_vld_in = LS_stream_TVALID;

assign LS_stream_V_data_0_vld_out = LS_stream_V_data_0_state[1'd0];

assign LS_stream_V_last_V_0_ack_in = LS_stream_V_last_V_0_state[1'd1];

assign LS_stream_V_last_V_0_load_A = (~LS_stream_V_last_V_0_sel_wr & LS_stream_V_last_V_0_state_cmp_full);

assign LS_stream_V_last_V_0_load_B = (LS_stream_V_last_V_0_state_cmp_full & LS_stream_V_last_V_0_sel_wr);

assign LS_stream_V_last_V_0_sel = LS_stream_V_last_V_0_sel_rd;

assign LS_stream_V_last_V_0_state_cmp_full = ((LS_stream_V_last_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign LS_stream_V_last_V_0_vld_in = LS_stream_TVALID;

assign LS_stream_V_last_V_0_vld_out = LS_stream_V_last_V_0_state[1'd0];

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13 = ((2'd1 == DNN_out_V_last_V_1_state) | (2'd1 == DNN_out_V_data_1_state) | ((2'd3 == DNN_out_V_last_V_1_state) & (1'b0 == DNN_out_TREADY)) | ((2'd3 == DNN_out_V_data_1_state) & (1'b0 == DNN_out_TREADY)));
end

assign ap_block_state8_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign denorm_DNN_V_d0 = {{grp_fu_1805_p3[25:10]}};

assign grp_L2_wlo_166_fu_471_ap_start = grp_L2_wlo_166_fu_471_ap_start_reg;

assign grp_L3_wlo_166_fu_798_ap_start = grp_L3_wlo_166_fu_798_ap_start_reg;

assign grp_fu_1805_p0 = grp_fu_1805_p00;

assign grp_fu_1805_p00 = std_o_V_load_reg_2628;

assign grp_normalize_wlo_166_fu_789_ap_start = grp_normalize_wlo_166_fu_789_ap_start_reg;

assign grp_reconstruct_complex_s_fu_970_DNN_out_TREADY = ((ap_CS_fsm_state12 & DNN_out_V_last_V_1_ack_in) | (ap_CS_fsm_state12 & DNN_out_V_data_1_ack_in));

assign grp_reconstruct_complex_s_fu_970_ap_start = grp_reconstruct_complex_s_fu_970_ap_start_reg;

assign grp_separate_complex_wlo_fu_961_LS_stream_TVALID = LS_stream_V_last_V_0_state[1'd0];

assign grp_separate_complex_wlo_fu_961_ap_start = grp_separate_complex_wlo_fu_961_ap_start_reg;

assign i_fu_1765_p2 = (i_0_i_reg_460 + 7'd1);

assign icmp_ln653_fu_1759_p2 = ((i_0_i_reg_460 == 7'd104) ? 1'b1 : 1'b0);

assign mean_o_V_address0 = zext_ln655_fu_1771_p1;

assign rhs_V_fu_1784_p3 = {{p_Val2_12_reg_2633}, {10'd0}};

assign std_o_V_address0 = zext_ln655_fu_1771_p1;

assign zext_ln655_fu_1771_p1 = i_0_i_reg_460;

always @ (posedge ap_clk) begin
    zext_ln655_reg_2603[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln655_reg_2603_pp0_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //DNN_wlo_166
