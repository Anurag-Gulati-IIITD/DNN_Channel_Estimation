-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity separate_complex_wlo is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    LS_stream_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    LS_stream_TVALID : IN STD_LOGIC;
    LS_stream_TREADY : OUT STD_LOGIC;
    LS_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    sep_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    sep_V_ce0 : OUT STD_LOGIC;
    sep_V_we0 : OUT STD_LOGIC;
    sep_V_d0 : OUT STD_LOGIC_VECTOR (20 downto 0);
    sep_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    sep_V_ce1 : OUT STD_LOGIC;
    sep_V_we1 : OUT STD_LOGIC;
    sep_V_d1 : OUT STD_LOGIC_VECTOR (20 downto 0) );
end;


architecture behav of separate_complex_wlo is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_34 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_D : STD_LOGIC_VECTOR (11 downto 0) := "000000001101";
    constant ap_const_lv12_FF3 : STD_LOGIC_VECTOR (11 downto 0) := "111111110011";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv12_15 : STD_LOGIC_VECTOR (11 downto 0) := "000000010101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv21_1FFFFF : STD_LOGIC_VECTOR (20 downto 0) := "111111111111111111111";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv7_34 : STD_LOGIC_VECTOR (6 downto 0) := "0110100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal LS_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln730_fu_135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_reg_117 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_0_reg_117_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_0_reg_117_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln730_reg_721 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln730_reg_721_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln730_reg_721_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_141_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_725 : STD_LOGIC_VECTOR (5 downto 0);
    signal LS_stream_V_data_val_reg_730 : STD_LOGIC_VECTOR (63 downto 0);
    signal LS_stream_V_data_val_reg_730_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal LS_stream_V_data_val_reg_730_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal man_V_2_fu_227_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_746 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln571_fu_235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_751 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_fu_247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_reg_757 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_265_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_763 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_reg_770 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_fu_279_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln583_reg_776 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln583_reg_776_pp0_iter2_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal man_V_5_fu_335_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_5_reg_782 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln571_1_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_1_reg_787 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_1_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_1_reg_793 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_1_fu_373_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_reg_799 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_1_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_1_reg_806 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_1_fu_387_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln583_1_reg_812 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln583_1_reg_812_pp0_iter2_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln581_fu_391_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_reg_818 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln603_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_reg_823 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_reg_828 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_1_fu_483_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln603_1_reg_833 : STD_LOGIC_VECTOR (20 downto 0);
    signal or_ln603_2_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_2_reg_838 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_1_fu_502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_1_reg_843 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln603_1_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_1_reg_848 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_3_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_3_reg_853 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_5_fu_594_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln603_5_reg_858 : STD_LOGIC_VECTOR (20 downto 0);
    signal or_ln603_5_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_5_reg_863 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_phi_mux_i_0_phi_fu_121_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln733_fu_617_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln734_fu_672_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_129_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_132_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln24_fu_151_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_assign_1_new8_fu_160_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_129_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_175_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_191_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_fu_205_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_1_fu_209_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_1_fu_217_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_s_fu_183_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_1_fu_221_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_fu_179_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_fu_201_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_241_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_fu_253_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_259_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_132_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_1_fu_283_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_1_fu_299_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_1_fu_313_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_2_fu_317_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_3_fu_325_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_2_fu_291_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_4_fu_329_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_1_fu_287_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_1_fu_309_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_fu_349_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_1_fu_361_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_1_fu_367_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln586_fu_404_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_fu_408_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal xor_ln571_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_1_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln586_fu_413_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal and_ln582_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_1_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln586_1_fu_515_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_1_fu_519_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal xor_ln571_1_fu_528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_1_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_1_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_1_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_1_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_1_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_1_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_1_fu_510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_1_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_3_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_2_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln586_1_fu_524_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal and_ln582_1_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_4_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_622_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581cast_fu_637_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln604_fu_640_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln588_fu_629_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln603_fu_645_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln603_2_fu_652_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln730_fu_613_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln734_fu_666_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_6_fu_677_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_1cast_fu_692_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln604_1_fu_695_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln588_1_fu_684_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln603_4_fu_700_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln603_6_fu_707_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_129_ce : STD_LOGIC;
    signal grp_fu_132_ce : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component DNN_wlo_218_fpextbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    DNN_wlo_218_fpextbkb_U1 : component DNN_wlo_218_fpextbkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_129_p0,
        ce => grp_fu_129_ce,
        dout => grp_fu_129_p1);

    DNN_wlo_218_fpextbkb_U2 : component DNN_wlo_218_fpextbkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_132_p0,
        ce => grp_fu_132_ce,
        dout => grp_fu_132_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_117_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln730_reg_721 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                i_0_reg_117 <= i_reg_725;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_117 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln730_fu_135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                LS_stream_V_data_val_reg_730 <= LS_stream_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                LS_stream_V_data_val_reg_730_pp0_iter1_reg <= LS_stream_V_data_val_reg_730;
                i_0_reg_117_pp0_iter1_reg <= i_0_reg_117;
                icmp_ln730_reg_721 <= icmp_ln730_fu_135_p2;
                icmp_ln730_reg_721_pp0_iter1_reg <= icmp_ln730_reg_721;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                LS_stream_V_data_val_reg_730_pp0_iter2_reg <= LS_stream_V_data_val_reg_730_pp0_iter1_reg;
                i_0_reg_117_pp0_iter2_reg <= i_0_reg_117_pp0_iter1_reg;
                icmp_ln730_reg_721_pp0_iter2_reg <= icmp_ln730_reg_721_pp0_iter1_reg;
                trunc_ln583_1_reg_812_pp0_iter2_reg <= trunc_ln583_1_reg_812;
                trunc_ln583_reg_776_pp0_iter2_reg <= trunc_ln583_reg_776;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln730_reg_721_pp0_iter1_reg = ap_const_lv1_0))) then
                and_ln603_1_reg_848 <= and_ln603_1_fu_582_p2;
                and_ln603_reg_823 <= and_ln603_fu_471_p2;
                or_ln603_2_reg_838 <= or_ln603_2_fu_496_p2;
                or_ln603_3_reg_853 <= or_ln603_3_fu_588_p2;
                or_ln603_5_reg_863 <= or_ln603_5_fu_607_p2;
                or_ln603_reg_828 <= or_ln603_fu_477_p2;
                select_ln603_1_reg_833 <= select_ln603_1_fu_483_p3;
                select_ln603_5_reg_858 <= select_ln603_5_fu_594_p3;
                sext_ln581_1_reg_843 <= sext_ln581_1_fu_502_p1;
                sext_ln581_reg_818 <= sext_ln581_fu_391_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_reg_725 <= i_fu_141_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln730_reg_721 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln571_1_reg_787 <= icmp_ln571_1_fu_343_p2;
                icmp_ln571_reg_751 <= icmp_ln571_fu_235_p2;
                icmp_ln581_1_reg_793 <= icmp_ln581_1_fu_355_p2;
                icmp_ln581_reg_757 <= icmp_ln581_fu_247_p2;
                icmp_ln582_1_reg_806 <= icmp_ln582_1_fu_381_p2;
                icmp_ln582_reg_770 <= icmp_ln582_fu_273_p2;
                man_V_2_reg_746 <= man_V_2_fu_227_p3;
                man_V_5_reg_782 <= man_V_5_fu_335_p3;
                sh_amt_1_reg_799 <= sh_amt_1_fu_373_p3;
                sh_amt_reg_763 <= sh_amt_fu_265_p3;
                trunc_ln583_1_reg_812 <= trunc_ln583_1_fu_387_p1;
                trunc_ln583_reg_776 <= trunc_ln583_fu_279_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln730_fu_135_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln730_fu_135_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((icmp_ln730_fu_135_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    F2_1_fu_349_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_1_fu_309_p1));
    F2_fu_241_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_fu_201_p1));

    LS_stream_TDATA_blk_n_assign_proc : process(LS_stream_TVALID, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln730_fu_135_p2)
    begin
        if (((icmp_ln730_fu_135_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            LS_stream_TDATA_blk_n <= LS_stream_TVALID;
        else 
            LS_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    LS_stream_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln730_fu_135_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln730_fu_135_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            LS_stream_TREADY <= ap_const_logic_1;
        else 
            LS_stream_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    add_ln581_1_fu_361_p2 <= std_logic_vector(signed(ap_const_lv12_FF3) + signed(F2_1_fu_349_p2));
    add_ln581_fu_253_p2 <= std_logic_vector(signed(ap_const_lv12_FF3) + signed(F2_fu_241_p2));
    add_ln734_fu_666_p2 <= std_logic_vector(unsigned(ap_const_lv7_34) + unsigned(zext_ln730_fu_613_p1));
    and_ln581_1_fu_548_p2 <= (xor_ln582_1_fu_542_p2 and icmp_ln581_1_reg_793);
    and_ln581_fu_437_p2 <= (xor_ln582_fu_431_p2 and icmp_ln581_reg_757);
    and_ln582_1_fu_533_p2 <= (xor_ln571_1_fu_528_p2 and icmp_ln582_1_reg_806);
    and_ln582_fu_422_p2 <= (xor_ln571_fu_417_p2 and icmp_ln582_reg_770);
    and_ln585_1_fu_454_p2 <= (xor_ln585_fu_448_p2 and and_ln581_fu_437_p2);
    and_ln585_2_fu_553_p2 <= (icmp_ln585_1_fu_505_p2 and and_ln581_1_fu_548_p2);
    and_ln585_3_fu_565_p2 <= (xor_ln585_1_fu_559_p2 and and_ln581_1_fu_548_p2);
    and_ln585_fu_442_p2 <= (icmp_ln585_fu_394_p2 and and_ln581_fu_437_p2);
    and_ln603_1_fu_582_p2 <= (xor_ln581_1_fu_576_p2 and icmp_ln603_1_fu_510_p2);
    and_ln603_fu_471_p2 <= (xor_ln581_fu_465_p2 and icmp_ln603_fu_399_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(LS_stream_TVALID, ap_enable_reg_pp0_iter0, icmp_ln730_fu_135_p2)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln730_fu_135_p2 = ap_const_lv1_0) and (ap_const_logic_0 = LS_stream_TVALID) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(LS_stream_TVALID, ap_enable_reg_pp0_iter0, icmp_ln730_fu_135_p2)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln730_fu_135_p2 = ap_const_lv1_0) and (ap_const_logic_0 = LS_stream_TVALID) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(LS_stream_TVALID, icmp_ln730_fu_135_p2)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((icmp_ln730_fu_135_p2 = ap_const_lv1_0) and (ap_const_logic_0 = LS_stream_TVALID));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln730_fu_135_p2)
    begin
        if ((icmp_ln730_fu_135_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_0_phi_fu_121_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_0_reg_117, icmp_ln730_reg_721, i_reg_725, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln730_reg_721 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_i_0_phi_fu_121_p4 <= i_reg_725;
        else 
            ap_phi_mux_i_0_phi_fu_121_p4 <= i_0_reg_117;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln586_1_fu_519_p2 <= std_logic_vector(shift_right(signed(man_V_5_reg_782),to_integer(unsigned('0' & zext_ln586_1_fu_515_p1(31-1 downto 0)))));
    ashr_ln586_fu_408_p2 <= std_logic_vector(shift_right(signed(man_V_2_reg_746),to_integer(unsigned('0' & zext_ln586_fu_404_p1(31-1 downto 0)))));
    exp_tmp_V_1_fu_299_p4 <= ireg_V_1_fu_283_p1(62 downto 52);
    exp_tmp_V_fu_191_p4 <= ireg_V_fu_175_p1(62 downto 52);

    grp_fu_129_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_129_ce <= ap_const_logic_1;
        else 
            grp_fu_129_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_129_p0 <= trunc_ln24_fu_151_p1;

    grp_fu_132_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_132_ce <= ap_const_logic_1;
        else 
            grp_fu_132_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_132_p0 <= v_assign_1_new8_fu_160_p4;
    i_fu_141_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_phi_fu_121_p4) + unsigned(ap_const_lv6_1));
    icmp_ln571_1_fu_343_p2 <= "1" when (trunc_ln556_1_fu_287_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_fu_235_p2 <= "1" when (trunc_ln556_fu_179_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_1_fu_355_p2 <= "1" when (signed(F2_1_fu_349_p2) > signed(ap_const_lv12_D)) else "0";
    icmp_ln581_fu_247_p2 <= "1" when (signed(F2_fu_241_p2) > signed(ap_const_lv12_D)) else "0";
    icmp_ln582_1_fu_381_p2 <= "1" when (F2_1_fu_349_p2 = ap_const_lv12_D) else "0";
    icmp_ln582_fu_273_p2 <= "1" when (F2_fu_241_p2 = ap_const_lv12_D) else "0";
    icmp_ln585_1_fu_505_p2 <= "1" when (unsigned(sh_amt_1_reg_799) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_fu_394_p2 <= "1" when (unsigned(sh_amt_reg_763) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln603_1_fu_510_p2 <= "1" when (unsigned(sh_amt_1_reg_799) < unsigned(ap_const_lv12_15)) else "0";
    icmp_ln603_fu_399_p2 <= "1" when (unsigned(sh_amt_reg_763) < unsigned(ap_const_lv12_15)) else "0";
    icmp_ln730_fu_135_p2 <= "1" when (ap_phi_mux_i_0_phi_fu_121_p4 = ap_const_lv6_34) else "0";
    ireg_V_1_fu_283_p1 <= grp_fu_132_p1;
    ireg_V_fu_175_p1 <= grp_fu_129_p1;
    man_V_1_fu_221_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_1_fu_217_p1));
    man_V_2_fu_227_p3 <= 
        man_V_1_fu_221_p2 when (p_Result_s_fu_183_p3(0) = '1') else 
        p_Result_1_fu_217_p1;
    man_V_4_fu_329_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_3_fu_325_p1));
    man_V_5_fu_335_p3 <= 
        man_V_4_fu_329_p2 when (p_Result_2_fu_291_p3(0) = '1') else 
        p_Result_3_fu_325_p1;
    or_ln581_1_fu_571_p2 <= (or_ln582_1_fu_538_p2 or icmp_ln581_1_reg_793);
    or_ln581_fu_460_p2 <= (or_ln582_fu_427_p2 or icmp_ln581_reg_757);
    or_ln582_1_fu_538_p2 <= (icmp_ln582_1_reg_806 or icmp_ln571_1_reg_787);
    or_ln582_fu_427_p2 <= (icmp_ln582_reg_770 or icmp_ln571_reg_751);
    or_ln603_1_fu_490_p2 <= (and_ln585_fu_442_p2 or and_ln582_fu_422_p2);
    or_ln603_2_fu_496_p2 <= (or_ln603_fu_477_p2 or or_ln603_1_fu_490_p2);
    or_ln603_3_fu_588_p2 <= (and_ln603_1_fu_582_p2 or and_ln585_3_fu_565_p2);
    or_ln603_4_fu_601_p2 <= (and_ln585_2_fu_553_p2 or and_ln582_1_fu_533_p2);
    or_ln603_5_fu_607_p2 <= (or_ln603_4_fu_601_p2 or or_ln603_3_fu_588_p2);
    or_ln603_fu_477_p2 <= (and_ln603_fu_471_p2 or and_ln585_1_fu_454_p2);
    p_Result_1_fu_217_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_209_p3),54));
    p_Result_2_fu_291_p3 <= ireg_V_1_fu_283_p1(63 downto 63);
    p_Result_3_fu_325_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_317_p3),54));
    p_Result_s_fu_183_p3 <= ireg_V_fu_175_p1(63 downto 63);
    select_ln588_1_fu_684_p3 <= 
        ap_const_lv21_1FFFFF when (tmp_6_fu_677_p3(0) = '1') else 
        ap_const_lv21_0;
    select_ln588_fu_629_p3 <= 
        ap_const_lv21_1FFFFF when (tmp_4_fu_622_p3(0) = '1') else 
        ap_const_lv21_0;
    select_ln603_1_fu_483_p3 <= 
        trunc_ln586_fu_413_p1 when (and_ln585_fu_442_p2(0) = '1') else 
        trunc_ln583_reg_776;
    select_ln603_2_fu_652_p3 <= 
        select_ln603_fu_645_p3 when (or_ln603_reg_828(0) = '1') else 
        select_ln603_1_reg_833;
    select_ln603_4_fu_700_p3 <= 
        shl_ln604_1_fu_695_p2 when (and_ln603_1_reg_848(0) = '1') else 
        select_ln588_1_fu_684_p3;
    select_ln603_5_fu_594_p3 <= 
        trunc_ln586_1_fu_524_p1 when (and_ln585_2_fu_553_p2(0) = '1') else 
        trunc_ln583_1_reg_812;
    select_ln603_6_fu_707_p3 <= 
        select_ln603_4_fu_700_p3 when (or_ln603_3_reg_853(0) = '1') else 
        select_ln603_5_reg_858;
    select_ln603_fu_645_p3 <= 
        shl_ln604_fu_640_p2 when (and_ln603_reg_823(0) = '1') else 
        select_ln588_fu_629_p3;
    sep_V_address0 <= zext_ln733_fu_617_p1(7 - 1 downto 0);
    sep_V_address1 <= zext_ln734_fu_672_p1(7 - 1 downto 0);

    sep_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            sep_V_ce0 <= ap_const_logic_1;
        else 
            sep_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sep_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            sep_V_ce1 <= ap_const_logic_1;
        else 
            sep_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    sep_V_d0 <= 
        select_ln603_2_fu_652_p3 when (or_ln603_2_reg_838(0) = '1') else 
        ap_const_lv21_0;
    sep_V_d1 <= 
        select_ln603_6_fu_707_p3 when (or_ln603_5_reg_863(0) = '1') else 
        ap_const_lv21_0;

    sep_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln730_reg_721_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln730_reg_721_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            sep_V_we0 <= ap_const_logic_1;
        else 
            sep_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sep_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln730_reg_721_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln730_reg_721_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            sep_V_we1 <= ap_const_logic_1;
        else 
            sep_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln581_1_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_reg_799),32));

    sext_ln581_1cast_fu_692_p1 <= sext_ln581_1_reg_843(21 - 1 downto 0);
        sext_ln581_fu_391_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_763),32));

    sext_ln581cast_fu_637_p1 <= sext_ln581_reg_818(21 - 1 downto 0);
    sh_amt_1_fu_373_p3 <= 
        add_ln581_1_fu_361_p2 when (icmp_ln581_1_fu_355_p2(0) = '1') else 
        sub_ln581_1_fu_367_p2;
    sh_amt_fu_265_p3 <= 
        add_ln581_fu_253_p2 when (icmp_ln581_fu_247_p2(0) = '1') else 
        sub_ln581_fu_259_p2;
    shl_ln604_1_fu_695_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_1_reg_812_pp0_iter2_reg),to_integer(unsigned('0' & sext_ln581_1cast_fu_692_p1(21-1 downto 0)))));
    shl_ln604_fu_640_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_reg_776_pp0_iter2_reg),to_integer(unsigned('0' & sext_ln581cast_fu_637_p1(21-1 downto 0)))));
    sub_ln581_1_fu_367_p2 <= std_logic_vector(unsigned(ap_const_lv12_D) - unsigned(F2_1_fu_349_p2));
    sub_ln581_fu_259_p2 <= std_logic_vector(unsigned(ap_const_lv12_D) - unsigned(F2_fu_241_p2));
    tmp_1_fu_209_p3 <= (ap_const_lv1_1 & trunc_ln565_fu_205_p1);
    tmp_2_fu_317_p3 <= (ap_const_lv1_1 & trunc_ln565_1_fu_313_p1);
    tmp_4_fu_622_p3 <= LS_stream_V_data_val_reg_730_pp0_iter2_reg(31 downto 31);
    tmp_6_fu_677_p3 <= LS_stream_V_data_val_reg_730_pp0_iter2_reg(63 downto 63);
    trunc_ln24_fu_151_p1 <= LS_stream_TDATA(32 - 1 downto 0);
    trunc_ln556_1_fu_287_p1 <= ireg_V_1_fu_283_p1(63 - 1 downto 0);
    trunc_ln556_fu_179_p1 <= ireg_V_fu_175_p1(63 - 1 downto 0);
    trunc_ln565_1_fu_313_p1 <= ireg_V_1_fu_283_p1(52 - 1 downto 0);
    trunc_ln565_fu_205_p1 <= ireg_V_fu_175_p1(52 - 1 downto 0);
    trunc_ln583_1_fu_387_p1 <= man_V_5_fu_335_p3(21 - 1 downto 0);
    trunc_ln583_fu_279_p1 <= man_V_2_fu_227_p3(21 - 1 downto 0);
    trunc_ln586_1_fu_524_p1 <= ashr_ln586_1_fu_519_p2(21 - 1 downto 0);
    trunc_ln586_fu_413_p1 <= ashr_ln586_fu_408_p2(21 - 1 downto 0);
    v_assign_1_new8_fu_160_p4 <= LS_stream_TDATA(63 downto 32);
    xor_ln571_1_fu_528_p2 <= (icmp_ln571_1_reg_787 xor ap_const_lv1_1);
    xor_ln571_fu_417_p2 <= (icmp_ln571_reg_751 xor ap_const_lv1_1);
    xor_ln581_1_fu_576_p2 <= (or_ln581_1_fu_571_p2 xor ap_const_lv1_1);
    xor_ln581_fu_465_p2 <= (or_ln581_fu_460_p2 xor ap_const_lv1_1);
    xor_ln582_1_fu_542_p2 <= (or_ln582_1_fu_538_p2 xor ap_const_lv1_1);
    xor_ln582_fu_431_p2 <= (or_ln582_fu_427_p2 xor ap_const_lv1_1);
    xor_ln585_1_fu_559_p2 <= (icmp_ln585_1_fu_505_p2 xor ap_const_lv1_1);
    xor_ln585_fu_448_p2 <= (icmp_ln585_fu_394_p2 xor ap_const_lv1_1);
    zext_ln461_1_fu_309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_1_fu_299_p4),12));
    zext_ln461_fu_201_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_191_p4),12));
    zext_ln586_1_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_1_fu_502_p1),54));
    zext_ln586_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_fu_391_p1),54));
    zext_ln730_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_117_pp0_iter2_reg),7));
    zext_ln733_fu_617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_117_pp0_iter2_reg),64));
    zext_ln734_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln734_fu_666_p2),64));
end behav;
