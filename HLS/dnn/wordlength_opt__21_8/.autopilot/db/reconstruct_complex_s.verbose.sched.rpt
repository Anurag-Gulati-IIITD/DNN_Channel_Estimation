

================================================================
== Vivado HLS Report for 'reconstruct_complex_s'
================================================================
* Date:           Wed Aug 17 14:59:24 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        dnn
* Solution:       wordlength_opt__21_8
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.502|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   57|   57|   57|   57|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                  |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name    | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- reconstruction  |   55|   55|         5|          1|          1|    52|    yes   |
        +------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 1
  Pipeline-0 : II = 1, D = 5, States = { 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 7 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 2 
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %DNN_out_V_data, i1* %DNN_out_V_last_V, [5 x i8]* @p_str18, i32 0, i32 0, [5 x i8]* @p_str19, i32 0, i32 0, [1 x i8]* @p_str9, [1 x i8]* @p_str9, [1 x i8]* @p_str9, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str9, [1 x i8]* @p_str9) nounwind"   --->   Operation 8 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (1.76ns)   --->   "br label %1" [dnn/dnn.cpp:787]   --->   Operation 9 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 5.12>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%i_0 = phi i6 [ 0, %0 ], [ %i, %reconstruction ]"   --->   Operation 10 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (1.42ns)   --->   "%icmp_ln787 = icmp eq i6 %i_0, -12" [dnn/dnn.cpp:787]   --->   Operation 11 'icmp' 'icmp_ln787' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 52, i64 52, i64 52)"   --->   Operation 12 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (1.82ns)   --->   "%i = add i6 %i_0, 1" [dnn/dnn.cpp:787]   --->   Operation 13 'add' 'i' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "br i1 %icmp_ln787, label %2, label %reconstruction" [dnn/dnn.cpp:787]   --->   Operation 14 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln787 = zext i6 %i_0 to i7" [dnn/dnn.cpp:787]   --->   Operation 15 'zext' 'zext_ln787' <Predicate = (!icmp_ln787)> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln792 = zext i6 %i_0 to i64" [dnn/dnn.cpp:792]   --->   Operation 16 'zext' 'zext_ln792' <Predicate = (!icmp_ln787)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%y_L3_V_addr = getelementptr [104 x i21]* %y_L3_V, i64 0, i64 %zext_ln792" [dnn/dnn.cpp:792]   --->   Operation 17 'getelementptr' 'y_L3_V_addr' <Predicate = (!icmp_ln787)> <Delay = 0.00>
ST_2 : Operation 18 [2/2] (3.25ns)   --->   "%tmp_V_6 = load i21* %y_L3_V_addr, align 4" [dnn/dnn.cpp:792]   --->   Operation 18 'load' 'tmp_V_6' <Predicate = (!icmp_ln787)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 21> <Depth = 104> <RAM>
ST_2 : Operation 19 [1/1] (1.87ns)   --->   "%add_ln792 = add i7 52, %zext_ln787" [dnn/dnn.cpp:792]   --->   Operation 19 'add' 'add_ln792' <Predicate = (!icmp_ln787)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln792_1 = zext i7 %add_ln792 to i64" [dnn/dnn.cpp:792]   --->   Operation 20 'zext' 'zext_ln792_1' <Predicate = (!icmp_ln787)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%y_L3_V_addr_1 = getelementptr [104 x i21]* %y_L3_V, i64 0, i64 %zext_ln792_1" [dnn/dnn.cpp:792]   --->   Operation 21 'getelementptr' 'y_L3_V_addr_1' <Predicate = (!icmp_ln787)> <Delay = 0.00>
ST_2 : Operation 22 [2/2] (3.25ns)   --->   "%tmp_V_8 = load i21* %y_L3_V_addr_1, align 4" [dnn/dnn.cpp:792]   --->   Operation 22 'load' 'tmp_V_8' <Predicate = (!icmp_ln787)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 21> <Depth = 104> <RAM>
ST_2 : Operation 23 [1/1] (1.42ns)   --->   "%tmp_last_V = icmp eq i6 %i_0, -13" [dnn/dnn.cpp:798]   --->   Operation 23 'icmp' 'tmp_last_V' <Predicate = (!icmp_ln787)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 6.18>
ST_3 : Operation 24 [1/2] (3.25ns)   --->   "%tmp_V_6 = load i21* %y_L3_V_addr, align 4" [dnn/dnn.cpp:792]   --->   Operation 24 'load' 'tmp_V_6' <Predicate = (!icmp_ln787)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 21> <Depth = 104> <RAM>
ST_3 : Operation 25 [1/1] (2.44ns)   --->   "%icmp_ln935 = icmp eq i21 %tmp_V_6, 0" [dnn/dnn.cpp:792]   --->   Operation 25 'icmp' 'icmp_ln935' <Predicate = (!icmp_ln787)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%p_Result_15 = call i1 @_ssdm_op_BitSelect.i1.i21.i32(i21 %tmp_V_6, i32 20)" [dnn/dnn.cpp:792]   --->   Operation 26 'bitselect' 'p_Result_15' <Predicate = (!icmp_ln787)> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (2.22ns)   --->   "%tmp_V = sub i21 0, %tmp_V_6" [dnn/dnn.cpp:792]   --->   Operation 27 'sub' 'tmp_V' <Predicate = (!icmp_ln787)> <Delay = 2.22> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [1/1] (0.70ns)   --->   "%tmp_V_7 = select i1 %p_Result_15, i21 %tmp_V, i21 %tmp_V_6" [dnn/dnn.cpp:792]   --->   Operation 28 'select' 'tmp_V_7' <Predicate = (!icmp_ln787)> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%p_Result_s = call i21 @llvm.part.select.i21(i21 %tmp_V_7, i32 20, i32 0) nounwind" [dnn/dnn.cpp:792]   --->   Operation 29 'partselect' 'p_Result_s' <Predicate = (!icmp_ln787)> <Delay = 0.00>
ST_3 : Operation 30 [1/2] (3.25ns)   --->   "%tmp_V_8 = load i21* %y_L3_V_addr_1, align 4" [dnn/dnn.cpp:792]   --->   Operation 30 'load' 'tmp_V_8' <Predicate = (!icmp_ln787)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 21> <Depth = 104> <RAM>
ST_3 : Operation 31 [1/1] (2.44ns)   --->   "%icmp_ln935_1 = icmp eq i21 %tmp_V_8, 0" [dnn/dnn.cpp:792]   --->   Operation 31 'icmp' 'icmp_ln935_1' <Predicate = (!icmp_ln787)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%p_Result_18 = call i1 @_ssdm_op_BitSelect.i1.i21.i32(i21 %tmp_V_8, i32 20)" [dnn/dnn.cpp:792]   --->   Operation 32 'bitselect' 'p_Result_18' <Predicate = (!icmp_ln787)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (2.22ns)   --->   "%tmp_V_4 = sub i21 0, %tmp_V_8" [dnn/dnn.cpp:792]   --->   Operation 33 'sub' 'tmp_V_4' <Predicate = (!icmp_ln787)> <Delay = 2.22> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.70ns)   --->   "%tmp_V_9 = select i1 %p_Result_18, i21 %tmp_V_4, i21 %tmp_V_8" [dnn/dnn.cpp:792]   --->   Operation 34 'select' 'tmp_V_9' <Predicate = (!icmp_ln787)> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%p_Result_10 = call i21 @llvm.part.select.i21(i21 %tmp_V_9, i32 20, i32 0) nounwind" [dnn/dnn.cpp:792]   --->   Operation 35 'partselect' 'p_Result_10' <Predicate = (!icmp_ln787)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 8.50>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%p_Result_16 = call i32 @_ssdm_op_BitConcatenate.i32.i11.i21(i11 -1, i21 %p_Result_s)" [dnn/dnn.cpp:792]   --->   Operation 36 'bitconcatenate' 'p_Result_16' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 37 [1/1] (3.39ns)   --->   "%l = call i32 @llvm.cttz.i32(i32 %p_Result_16, i1 true) nounwind" [dnn/dnn.cpp:792]   --->   Operation 37 'cttz' 'l' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 3.39> <Core = "CTTZ">   --->   Core 64 'CTTZ' <Latency = 0> <II = 1> <Delay = 3.39> <FuncUnit> <Opcode : 'cttz'> <InPorts = 1> <OutPorts = 1>
ST_4 : Operation 38 [1/1] (2.55ns)   --->   "%sub_ln944 = sub nsw i32 21, %l" [dnn/dnn.cpp:792]   --->   Operation 38 'sub' 'sub_ln944' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%trunc_ln944 = trunc i32 %sub_ln944 to i21" [dnn/dnn.cpp:792]   --->   Operation 39 'trunc' 'trunc_ln944' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (2.55ns)   --->   "%lsb_index = add nsw i32 -24, %sub_ln944" [dnn/dnn.cpp:792]   --->   Operation 40 'add' 'lsb_index' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%tmp_8 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %lsb_index, i32 1, i32 31)" [dnn/dnn.cpp:792]   --->   Operation 41 'partselect' 'tmp_8' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%trunc_ln947 = trunc i32 %sub_ln944 to i5" [dnn/dnn.cpp:792]   --->   Operation 42 'trunc' 'trunc_ln947' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (1.78ns)   --->   "%sub_ln947 = sub i5 14, %trunc_ln947" [dnn/dnn.cpp:792]   --->   Operation 43 'sub' 'sub_ln947' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%trunc_ln943 = trunc i32 %l to i8" [dnn/dnn.cpp:792]   --->   Operation 44 'trunc' 'trunc_ln943' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%p_Result_19 = call i32 @_ssdm_op_BitConcatenate.i32.i11.i21(i11 -1, i21 %p_Result_10)" [dnn/dnn.cpp:792]   --->   Operation 45 'bitconcatenate' 'p_Result_19' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (3.39ns)   --->   "%l_1 = call i32 @llvm.cttz.i32(i32 %p_Result_19, i1 true) nounwind" [dnn/dnn.cpp:792]   --->   Operation 46 'cttz' 'l_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 3.39> <Core = "CTTZ">   --->   Core 64 'CTTZ' <Latency = 0> <II = 1> <Delay = 3.39> <FuncUnit> <Opcode : 'cttz'> <InPorts = 1> <OutPorts = 1>
ST_4 : Operation 47 [1/1] (2.55ns)   --->   "%sub_ln944_1 = sub nsw i32 21, %l_1" [dnn/dnn.cpp:792]   --->   Operation 47 'sub' 'sub_ln944_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%trunc_ln944_1 = trunc i32 %sub_ln944_1 to i21" [dnn/dnn.cpp:792]   --->   Operation 48 'trunc' 'trunc_ln944_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (2.55ns)   --->   "%lsb_index_1 = add nsw i32 -24, %sub_ln944_1" [dnn/dnn.cpp:792]   --->   Operation 49 'add' 'lsb_index_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_12 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %lsb_index_1, i32 1, i32 31)" [dnn/dnn.cpp:792]   --->   Operation 50 'partselect' 'tmp_12' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%trunc_ln947_1 = trunc i32 %sub_ln944_1 to i5" [dnn/dnn.cpp:792]   --->   Operation 51 'trunc' 'trunc_ln947_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (1.78ns)   --->   "%sub_ln947_1 = sub i5 14, %trunc_ln947_1" [dnn/dnn.cpp:792]   --->   Operation 52 'sub' 'sub_ln947_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln943_1 = trunc i32 %l_1 to i8" [dnn/dnn.cpp:792]   --->   Operation 53 'trunc' 'trunc_ln943_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 8.06>
ST_5 : Operation 54 [1/1] (2.47ns)   --->   "%icmp_ln947 = icmp sgt i31 %tmp_8, 0" [dnn/dnn.cpp:792]   --->   Operation 54 'icmp' 'icmp_ln947' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%zext_ln947 = zext i5 %sub_ln947 to i21" [dnn/dnn.cpp:792]   --->   Operation 55 'zext' 'zext_ln947' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%lshr_ln947 = lshr i21 -1, %zext_ln947" [dnn/dnn.cpp:792]   --->   Operation 56 'lshr' 'lshr_ln947' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%p_Result_6 = and i21 %tmp_V_7, %lshr_ln947" [dnn/dnn.cpp:792]   --->   Operation 57 'and' 'p_Result_6' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/1] (2.66ns) (out node of the LUT)   --->   "%icmp_ln947_1 = icmp ne i21 %p_Result_6, 0" [dnn/dnn.cpp:792]   --->   Operation 58 'icmp' 'icmp_ln947_1' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 2.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%a = and i1 %icmp_ln947, %icmp_ln947_1" [dnn/dnn.cpp:792]   --->   Operation 59 'and' 'a' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%tmp_9 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %lsb_index, i32 31)" [dnn/dnn.cpp:792]   --->   Operation 60 'bitselect' 'tmp_9' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%xor_ln949 = xor i1 %tmp_9, true" [dnn/dnn.cpp:792]   --->   Operation 61 'xor' 'xor_ln949' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (2.22ns)   --->   "%add_ln949 = add i21 -24, %trunc_ln944" [dnn/dnn.cpp:792]   --->   Operation 62 'add' 'add_ln949' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 2.22> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%p_Result_7 = call i1 @_ssdm_op_BitSelect.i1.i21.i21(i21 %tmp_V_7, i21 %add_ln949)" [dnn/dnn.cpp:792]   --->   Operation 63 'bitselect' 'p_Result_7' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%and_ln949 = and i1 %p_Result_7, %xor_ln949" [dnn/dnn.cpp:792]   --->   Operation 64 'and' 'and_ln949' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%or_ln949_2 = or i1 %and_ln949, %a" [dnn/dnn.cpp:792]   --->   Operation 65 'or' 'or_ln949_2' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 0, i1 %or_ln949_2)" [dnn/dnn.cpp:792]   --->   Operation 66 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.97>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%m = zext i21 %tmp_V_7 to i32" [dnn/dnn.cpp:792]   --->   Operation 67 'zext' 'm' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (2.47ns)   --->   "%icmp_ln958 = icmp sgt i32 %lsb_index, 0" [dnn/dnn.cpp:792]   --->   Operation 68 'icmp' 'icmp_ln958' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (2.55ns)   --->   "%add_ln958 = add nsw i32 -25, %sub_ln944" [dnn/dnn.cpp:792]   --->   Operation 69 'add' 'add_ln958' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%lshr_ln958 = lshr i32 %m, %add_ln958" [dnn/dnn.cpp:792]   --->   Operation 70 'lshr' 'lshr_ln958' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 71 [1/1] (2.55ns)   --->   "%sub_ln958 = sub i32 25, %sub_ln944" [dnn/dnn.cpp:792]   --->   Operation 71 'sub' 'sub_ln958' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%shl_ln958 = shl i32 %m, %sub_ln958" [dnn/dnn.cpp:792]   --->   Operation 72 'shl' 'shl_ln958' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%m_1 = select i1 %icmp_ln958, i32 %lshr_ln958, i32 %shl_ln958" [dnn/dnn.cpp:792]   --->   Operation 73 'select' 'm_1' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 74 [1/1] (4.42ns) (out node of the LUT)   --->   "%m_2 = add i32 %m_1, %or_ln" [dnn/dnn.cpp:792]   --->   Operation 74 'add' 'm_2' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 4.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "%m_s = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %m_2, i32 1, i32 31)" [dnn/dnn.cpp:792]   --->   Operation 75 'partselect' 'm_s' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00>
ST_5 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %m_2, i32 25)" [dnn/dnn.cpp:792]   --->   Operation 76 'bitselect' 'tmp_10' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00>
ST_5 : Operation 77 [1/1] (2.47ns)   --->   "%icmp_ln947_2 = icmp sgt i31 %tmp_12, 0" [dnn/dnn.cpp:792]   --->   Operation 77 'icmp' 'icmp_ln947_2' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_3)   --->   "%zext_ln947_1 = zext i5 %sub_ln947_1 to i21" [dnn/dnn.cpp:792]   --->   Operation 78 'zext' 'zext_ln947_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00>
ST_5 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_3)   --->   "%lshr_ln947_1 = lshr i21 -1, %zext_ln947_1" [dnn/dnn.cpp:792]   --->   Operation 79 'lshr' 'lshr_ln947_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_3)   --->   "%p_Result_12 = and i21 %tmp_V_9, %lshr_ln947_1" [dnn/dnn.cpp:792]   --->   Operation 80 'and' 'p_Result_12' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 81 [1/1] (2.66ns) (out node of the LUT)   --->   "%icmp_ln947_3 = icmp ne i21 %p_Result_12, 0" [dnn/dnn.cpp:792]   --->   Operation 81 'icmp' 'icmp_ln947_3' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 2.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node or_ln949_1)   --->   "%a_1 = and i1 %icmp_ln947_2, %icmp_ln947_3" [dnn/dnn.cpp:792]   --->   Operation 82 'and' 'a_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node or_ln949_1)   --->   "%tmp_13 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %lsb_index_1, i32 31)" [dnn/dnn.cpp:792]   --->   Operation 83 'bitselect' 'tmp_13' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node or_ln949_1)   --->   "%xor_ln949_1 = xor i1 %tmp_13, true" [dnn/dnn.cpp:792]   --->   Operation 84 'xor' 'xor_ln949_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 85 [1/1] (2.22ns)   --->   "%add_ln949_1 = add i21 -24, %trunc_ln944_1" [dnn/dnn.cpp:792]   --->   Operation 85 'add' 'add_ln949_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 2.22> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node or_ln949_1)   --->   "%p_Result_13 = call i1 @_ssdm_op_BitSelect.i1.i21.i21(i21 %tmp_V_9, i21 %add_ln949_1)" [dnn/dnn.cpp:792]   --->   Operation 86 'bitselect' 'p_Result_13' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00>
ST_5 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node or_ln949_1)   --->   "%and_ln949_1 = and i1 %p_Result_13, %xor_ln949_1" [dnn/dnn.cpp:792]   --->   Operation 87 'and' 'and_ln949_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node or_ln949_1)   --->   "%or_ln949 = or i1 %and_ln949_1, %a_1" [dnn/dnn.cpp:792]   --->   Operation 88 'or' 'or_ln949' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 89 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln949_1 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 0, i1 %or_ln949)" [dnn/dnn.cpp:792]   --->   Operation 89 'bitconcatenate' 'or_ln949_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.97>
ST_5 : Operation 90 [1/1] (0.00ns)   --->   "%m_9 = zext i21 %tmp_V_9 to i32" [dnn/dnn.cpp:792]   --->   Operation 90 'zext' 'm_9' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00>
ST_5 : Operation 91 [1/1] (2.47ns)   --->   "%icmp_ln958_1 = icmp sgt i32 %lsb_index_1, 0" [dnn/dnn.cpp:792]   --->   Operation 91 'icmp' 'icmp_ln958_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 92 [1/1] (2.55ns)   --->   "%add_ln958_1 = add nsw i32 -25, %sub_ln944_1" [dnn/dnn.cpp:792]   --->   Operation 92 'add' 'add_ln958_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node m_12)   --->   "%lshr_ln958_1 = lshr i32 %m_9, %add_ln958_1" [dnn/dnn.cpp:792]   --->   Operation 93 'lshr' 'lshr_ln958_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 94 [1/1] (2.55ns)   --->   "%sub_ln958_1 = sub i32 25, %sub_ln944_1" [dnn/dnn.cpp:792]   --->   Operation 94 'sub' 'sub_ln958_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node m_12)   --->   "%shl_ln958_1 = shl i32 %m_9, %sub_ln958_1" [dnn/dnn.cpp:792]   --->   Operation 95 'shl' 'shl_ln958_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node m_12)   --->   "%m_10 = select i1 %icmp_ln958_1, i32 %lshr_ln958_1, i32 %shl_ln958_1" [dnn/dnn.cpp:792]   --->   Operation 96 'select' 'm_10' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 97 [1/1] (4.42ns) (out node of the LUT)   --->   "%m_12 = add i32 %m_10, %or_ln949_1" [dnn/dnn.cpp:792]   --->   Operation 97 'add' 'm_12' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 4.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 98 [1/1] (0.00ns)   --->   "%m_3 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %m_12, i32 1, i32 31)" [dnn/dnn.cpp:792]   --->   Operation 98 'partselect' 'm_3' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_14 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %m_12, i32 25)" [dnn/dnn.cpp:792]   --->   Operation 99 'bitselect' 'tmp_14' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 5.61>
ST_6 : Operation 100 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str16) nounwind" [dnn/dnn.cpp:787]   --->   Operation 100 'specloopname' <Predicate = (!icmp_ln787)> <Delay = 0.00>
ST_6 : Operation 101 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str16)" [dnn/dnn.cpp:787]   --->   Operation 101 'specregionbegin' 'tmp' <Predicate = (!icmp_ln787)> <Delay = 0.00>
ST_6 : Operation 102 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str9) nounwind" [dnn/dnn.cpp:789]   --->   Operation 102 'specpipeline' <Predicate = (!icmp_ln787)> <Delay = 0.00>
ST_6 : Operation 103 [1/1] (0.00ns)   --->   "%m_15 = zext i31 %m_s to i32" [dnn/dnn.cpp:792]   --->   Operation 103 'zext' 'm_15' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00>
ST_6 : Operation 104 [1/1] (1.24ns)   --->   "%select_ln964 = select i1 %tmp_10, i8 127, i8 126" [dnn/dnn.cpp:792]   --->   Operation 104 'select' 'select_ln964' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 105 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln964 = sub i8 8, %trunc_ln943" [dnn/dnn.cpp:792]   --->   Operation 105 'sub' 'sub_ln964' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 106 [1/1] (3.66ns) (root node of TernaryAdder)   --->   "%add_ln964 = add i8 %select_ln964, %sub_ln964" [dnn/dnn.cpp:792]   --->   Operation 106 'add' 'add_ln964' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 3.66> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 107 [1/1] (0.00ns)   --->   "%tmp_4 = call i9 @_ssdm_op_BitConcatenate.i9.i1.i8(i1 %p_Result_15, i8 %add_ln964)" [dnn/dnn.cpp:792]   --->   Operation 107 'bitconcatenate' 'tmp_4' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00>
ST_6 : Operation 108 [1/1] (0.00ns)   --->   "%p_Result_17 = call i32 @_ssdm_op_PartSet.i32.i32.i9.i32.i32(i32 %m_15, i9 %tmp_4, i32 23, i32 31)" [dnn/dnn.cpp:792]   --->   Operation 108 'partset' 'p_Result_17' <Predicate = (!icmp_ln787 & !icmp_ln935)> <Delay = 0.00>
ST_6 : Operation 109 [1/1] (0.00ns)   --->   "%m_16 = zext i31 %m_3 to i32" [dnn/dnn.cpp:792]   --->   Operation 109 'zext' 'm_16' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00>
ST_6 : Operation 110 [1/1] (1.24ns)   --->   "%select_ln964_1 = select i1 %tmp_14, i8 127, i8 126" [dnn/dnn.cpp:792]   --->   Operation 110 'select' 'select_ln964_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 111 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln964_1 = sub i8 8, %trunc_ln943_1" [dnn/dnn.cpp:792]   --->   Operation 111 'sub' 'sub_ln964_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 112 [1/1] (3.66ns) (root node of TernaryAdder)   --->   "%add_ln964_1 = add i8 %select_ln964_1, %sub_ln964_1" [dnn/dnn.cpp:792]   --->   Operation 112 'add' 'add_ln964_1' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 3.66> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 113 [1/1] (0.00ns)   --->   "%tmp_6 = call i9 @_ssdm_op_BitConcatenate.i9.i1.i8(i1 %p_Result_18, i8 %add_ln964_1)" [dnn/dnn.cpp:792]   --->   Operation 113 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00>
ST_6 : Operation 114 [1/1] (0.00ns)   --->   "%p_Result_20 = call i32 @_ssdm_op_PartSet.i32.i32.i9.i32.i32(i32 %m_16, i9 %tmp_6, i32 23, i32 31)" [dnn/dnn.cpp:792]   --->   Operation 114 'partset' 'p_Result_20' <Predicate = (!icmp_ln787 & !icmp_ln935_1)> <Delay = 0.00>
ST_6 : Operation 115 [1/1] (0.69ns)   --->   "%select_ln162 = select i1 %icmp_ln935, i32 0, i32 %p_Result_17" [dnn/dnn.cpp:801]   --->   Operation 115 'select' 'select_ln162' <Predicate = (!icmp_ln787)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 116 [1/1] (0.69ns)   --->   "%select_ln162_1 = select i1 %icmp_ln935_1, i32 0, i32 %p_Result_20" [dnn/dnn.cpp:801]   --->   Operation 116 'select' 'select_ln162_1' <Predicate = (!icmp_ln787)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 117 [1/1] (0.00ns)   --->   "%tmp_data = call i64 @_ssdm_op_BitConcatenate.i64.i32.i32(i32 %select_ln162_1, i32 %select_ln162)" [dnn/dnn.cpp:801]   --->   Operation 117 'bitconcatenate' 'tmp_data' <Predicate = (!icmp_ln787)> <Delay = 0.00>
ST_6 : Operation 118 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P.i1P(i64* %DNN_out_V_data, i1* %DNN_out_V_last_V, i64 %tmp_data, i1 %tmp_last_V)" [dnn/dnn.cpp:801]   --->   Operation 118 'write' <Predicate = (!icmp_ln787)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_6 : Operation 119 [1/1] (0.00ns)   --->   "%empty_25 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str16, i32 %tmp)" [dnn/dnn.cpp:802]   --->   Operation 119 'specregionend' 'empty_25' <Predicate = (!icmp_ln787)> <Delay = 0.00>
ST_6 : Operation 120 [1/1] (0.00ns)   --->   "br label %1" [dnn/dnn.cpp:787]   --->   Operation 120 'br' <Predicate = (!icmp_ln787)> <Delay = 0.00>

State 7 <SV = 2> <Delay = 0.00>
ST_7 : Operation 121 [1/1] (0.00ns)   --->   "ret void" [dnn/dnn.cpp:804]   --->   Operation 121 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', dnn/dnn.cpp:787) [7]  (1.77 ns)

 <State 2>: 5.12ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', dnn/dnn.cpp:787) [7]  (0 ns)
	'add' operation ('add_ln792', dnn/dnn.cpp:792) [63]  (1.87 ns)
	'getelementptr' operation ('y_L3_V_addr_1', dnn/dnn.cpp:792) [65]  (0 ns)
	'load' operation ('tmp.V', dnn/dnn.cpp:792) on array 'y_L3_V' [66]  (3.25 ns)

 <State 3>: 6.18ns
The critical path consists of the following:
	'load' operation ('tmp.V', dnn/dnn.cpp:792) on array 'y_L3_V' [19]  (3.25 ns)
	'sub' operation ('tmp.V', dnn/dnn.cpp:792) [22]  (2.23 ns)
	'select' operation ('tmp.V', dnn/dnn.cpp:792) [23]  (0.704 ns)

 <State 4>: 8.5ns
The critical path consists of the following:
	'cttz' operation ('l', dnn/dnn.cpp:792) [26]  (3.4 ns)
	'sub' operation ('sub_ln944', dnn/dnn.cpp:792) [27]  (2.55 ns)
	'add' operation ('lsb_index', dnn/dnn.cpp:792) [29]  (2.55 ns)

 <State 5>: 8.07ns
The critical path consists of the following:
	'lshr' operation ('lshr_ln947', dnn/dnn.cpp:792) [35]  (0 ns)
	'and' operation ('__Result__', dnn/dnn.cpp:792) [36]  (0 ns)
	'icmp' operation ('icmp_ln947_1', dnn/dnn.cpp:792) [37]  (2.67 ns)
	'and' operation ('a', dnn/dnn.cpp:792) [38]  (0 ns)
	'or' operation ('or_ln949_2', dnn/dnn.cpp:792) [44]  (0 ns)
	'add' operation ('m', dnn/dnn.cpp:792) [53]  (4.42 ns)
	blocking operation 0.978 ns on control path)

 <State 6>: 5.62ns
The critical path consists of the following:
	'select' operation ('select_ln964', dnn/dnn.cpp:792) [57]  (1.25 ns)
	'add' operation ('add_ln964', dnn/dnn.cpp:792) [60]  (3.67 ns)
	'select' operation ('select_ln162', dnn/dnn.cpp:801) [111]  (0.698 ns)

 <State 7>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
