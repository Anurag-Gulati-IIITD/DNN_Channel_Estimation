// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module reconstruct_complex_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        y_L3_V_address0,
        y_L3_V_ce0,
        y_L3_V_q0,
        y_L3_V_address1,
        y_L3_V_ce1,
        y_L3_V_q1,
        DNN_out_TDATA,
        DNN_out_TVALID,
        DNN_out_TREADY,
        DNN_out_TLAST
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] y_L3_V_address0;
output   y_L3_V_ce0;
input  [20:0] y_L3_V_q0;
output  [6:0] y_L3_V_address1;
output   y_L3_V_ce1;
input  [20:0] y_L3_V_q1;
output  [63:0] DNN_out_TDATA;
output   DNN_out_TVALID;
input   DNN_out_TREADY;
output  [0:0] DNN_out_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg y_L3_V_ce0;
reg y_L3_V_ce1;
reg DNN_out_TVALID;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    DNN_out_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln787_reg_753;
reg   [0:0] icmp_ln787_reg_753_pp0_iter3_reg;
reg   [5:0] i_0_reg_139;
wire   [0:0] icmp_ln787_fu_150_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_state6_io;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln787_reg_753_pp0_iter1_reg;
reg   [0:0] icmp_ln787_reg_753_pp0_iter2_reg;
wire   [5:0] i_fu_156_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_last_V_fu_182_p2;
reg   [0:0] tmp_last_V_reg_772;
reg   [0:0] tmp_last_V_reg_772_pp0_iter1_reg;
reg   [0:0] tmp_last_V_reg_772_pp0_iter2_reg;
reg   [0:0] tmp_last_V_reg_772_pp0_iter3_reg;
wire   [0:0] icmp_ln935_fu_188_p2;
reg   [0:0] icmp_ln935_reg_777;
reg   [0:0] icmp_ln935_reg_777_pp0_iter2_reg;
reg   [0:0] icmp_ln935_reg_777_pp0_iter3_reg;
wire   [0:0] p_Result_15_fu_194_p3;
reg   [0:0] p_Result_15_reg_782;
reg   [0:0] p_Result_15_reg_782_pp0_iter2_reg;
reg   [0:0] p_Result_15_reg_782_pp0_iter3_reg;
wire   [20:0] tmp_V_7_fu_208_p3;
reg   [20:0] tmp_V_7_reg_787;
reg   [20:0] tmp_V_7_reg_787_pp0_iter2_reg;
reg   [20:0] p_Result_s_fu_216_p4;
reg   [20:0] p_Result_s_reg_794;
wire   [0:0] icmp_ln935_1_fu_226_p2;
reg   [0:0] icmp_ln935_1_reg_799;
reg   [0:0] icmp_ln935_1_reg_799_pp0_iter2_reg;
reg   [0:0] icmp_ln935_1_reg_799_pp0_iter3_reg;
wire   [0:0] p_Result_18_fu_232_p3;
reg   [0:0] p_Result_18_reg_804;
reg   [0:0] p_Result_18_reg_804_pp0_iter2_reg;
reg   [0:0] p_Result_18_reg_804_pp0_iter3_reg;
wire   [20:0] tmp_V_9_fu_246_p3;
reg   [20:0] tmp_V_9_reg_809;
reg   [20:0] tmp_V_9_reg_809_pp0_iter2_reg;
reg   [20:0] p_Result_10_fu_254_p4;
reg   [20:0] p_Result_10_reg_816;
wire   [31:0] sub_ln944_fu_279_p2;
reg   [31:0] sub_ln944_reg_821;
wire   [20:0] trunc_ln944_fu_285_p1;
reg   [20:0] trunc_ln944_reg_827;
wire   [31:0] lsb_index_fu_289_p2;
reg   [31:0] lsb_index_reg_832;
reg   [30:0] tmp_8_reg_838;
wire   [4:0] sub_ln947_fu_309_p2;
reg   [4:0] sub_ln947_reg_843;
wire   [7:0] trunc_ln943_fu_315_p1;
reg   [7:0] trunc_ln943_reg_848;
reg   [7:0] trunc_ln943_reg_848_pp0_iter3_reg;
wire   [31:0] sub_ln944_1_fu_334_p2;
reg   [31:0] sub_ln944_1_reg_853;
wire   [20:0] trunc_ln944_1_fu_340_p1;
reg   [20:0] trunc_ln944_1_reg_859;
wire   [31:0] lsb_index_1_fu_344_p2;
reg   [31:0] lsb_index_1_reg_864;
reg   [30:0] tmp_12_reg_870;
wire   [4:0] sub_ln947_1_fu_364_p2;
reg   [4:0] sub_ln947_1_reg_875;
wire   [7:0] trunc_ln943_1_fu_370_p1;
reg   [7:0] trunc_ln943_1_reg_880;
reg   [7:0] trunc_ln943_1_reg_880_pp0_iter3_reg;
reg   [30:0] m_s_reg_885;
reg   [0:0] tmp_10_reg_890;
reg   [30:0] m_3_reg_895;
reg   [0:0] tmp_14_reg_900;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire   [63:0] zext_ln792_fu_166_p1;
wire   [63:0] zext_ln792_1_fu_177_p1;
wire    ap_block_pp0_stage0_01001;
wire   [6:0] zext_ln787_fu_162_p1;
wire   [6:0] add_ln792_fu_171_p2;
wire   [20:0] tmp_V_fu_202_p2;
wire   [20:0] tmp_V_4_fu_240_p2;
wire   [31:0] p_Result_16_fu_264_p3;
reg   [31:0] l_fu_271_p3;
wire   [4:0] trunc_ln947_fu_305_p1;
wire   [31:0] p_Result_19_fu_319_p3;
reg   [31:0] l_1_fu_326_p3;
wire   [4:0] trunc_ln947_1_fu_360_p1;
wire   [20:0] zext_ln947_fu_379_p1;
wire   [20:0] lshr_ln947_fu_382_p2;
wire   [20:0] p_Result_6_fu_388_p2;
wire   [0:0] icmp_ln947_fu_374_p2;
wire   [0:0] icmp_ln947_1_fu_393_p2;
wire   [0:0] tmp_9_fu_405_p3;
wire   [20:0] add_ln949_fu_418_p2;
wire   [0:0] p_Result_7_fu_423_p3;
wire   [0:0] xor_ln949_fu_412_p2;
wire   [0:0] and_ln949_fu_430_p2;
wire   [0:0] a_fu_399_p2;
wire   [0:0] or_ln949_2_fu_436_p2;
wire   [31:0] m_fu_450_p1;
wire   [31:0] add_ln958_fu_458_p2;
wire   [31:0] sub_ln958_fu_469_p2;
wire   [0:0] icmp_ln958_fu_453_p2;
wire   [31:0] lshr_ln958_fu_463_p2;
wire   [31:0] shl_ln958_fu_474_p2;
wire   [31:0] m_1_fu_480_p3;
wire   [31:0] or_ln_fu_442_p3;
wire   [31:0] m_2_fu_488_p2;
wire   [20:0] zext_ln947_1_fu_517_p1;
wire   [20:0] lshr_ln947_1_fu_520_p2;
wire   [20:0] p_Result_12_fu_526_p2;
wire   [0:0] icmp_ln947_2_fu_512_p2;
wire   [0:0] icmp_ln947_3_fu_531_p2;
wire   [0:0] tmp_13_fu_543_p3;
wire   [20:0] add_ln949_1_fu_556_p2;
wire   [0:0] p_Result_13_fu_561_p3;
wire   [0:0] xor_ln949_1_fu_550_p2;
wire   [0:0] and_ln949_1_fu_568_p2;
wire   [0:0] a_1_fu_537_p2;
wire   [0:0] or_ln949_fu_574_p2;
wire   [31:0] m_9_fu_588_p1;
wire   [31:0] add_ln958_1_fu_596_p2;
wire   [31:0] sub_ln958_1_fu_607_p2;
wire   [0:0] icmp_ln958_1_fu_591_p2;
wire   [31:0] lshr_ln958_1_fu_601_p2;
wire   [31:0] shl_ln958_1_fu_612_p2;
wire   [31:0] m_10_fu_618_p3;
wire   [31:0] or_ln949_1_fu_580_p3;
wire   [31:0] m_12_fu_626_p2;
wire   [7:0] select_ln964_fu_653_p3;
wire   [7:0] sub_ln964_fu_660_p2;
wire   [7:0] add_ln964_fu_665_p2;
wire   [31:0] m_15_fu_650_p1;
wire   [8:0] tmp_4_fu_671_p3;
wire   [7:0] select_ln964_1_fu_693_p3;
wire   [7:0] sub_ln964_1_fu_700_p2;
wire   [7:0] add_ln964_1_fu_705_p2;
wire   [31:0] m_16_fu_690_p1;
wire   [8:0] tmp_6_fu_711_p3;
wire   [31:0] p_Result_17_fu_678_p5;
wire   [31:0] p_Result_20_fu_718_p5;
wire   [31:0] select_ln162_1_fu_737_p3;
wire   [31:0] select_ln162_fu_730_p3;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln787_fu_150_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_139 <= i_fu_156_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_139 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln787_reg_753 <= icmp_ln787_fu_150_p2;
        icmp_ln787_reg_753_pp0_iter1_reg <= icmp_ln787_reg_753;
        tmp_last_V_reg_772_pp0_iter1_reg <= tmp_last_V_reg_772;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln787_reg_753_pp0_iter2_reg <= icmp_ln787_reg_753_pp0_iter1_reg;
        icmp_ln787_reg_753_pp0_iter3_reg <= icmp_ln787_reg_753_pp0_iter2_reg;
        icmp_ln935_1_reg_799_pp0_iter2_reg <= icmp_ln935_1_reg_799;
        icmp_ln935_1_reg_799_pp0_iter3_reg <= icmp_ln935_1_reg_799_pp0_iter2_reg;
        icmp_ln935_reg_777_pp0_iter2_reg <= icmp_ln935_reg_777;
        icmp_ln935_reg_777_pp0_iter3_reg <= icmp_ln935_reg_777_pp0_iter2_reg;
        p_Result_15_reg_782_pp0_iter2_reg <= p_Result_15_reg_782;
        p_Result_15_reg_782_pp0_iter3_reg <= p_Result_15_reg_782_pp0_iter2_reg;
        p_Result_18_reg_804_pp0_iter2_reg <= p_Result_18_reg_804;
        p_Result_18_reg_804_pp0_iter3_reg <= p_Result_18_reg_804_pp0_iter2_reg;
        tmp_V_7_reg_787_pp0_iter2_reg <= tmp_V_7_reg_787;
        tmp_V_9_reg_809_pp0_iter2_reg <= tmp_V_9_reg_809;
        tmp_last_V_reg_772_pp0_iter2_reg <= tmp_last_V_reg_772_pp0_iter1_reg;
        tmp_last_V_reg_772_pp0_iter3_reg <= tmp_last_V_reg_772_pp0_iter2_reg;
        trunc_ln943_1_reg_880_pp0_iter3_reg <= trunc_ln943_1_reg_880;
        trunc_ln943_reg_848_pp0_iter3_reg <= trunc_ln943_reg_848;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln787_reg_753 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln935_1_reg_799 <= icmp_ln935_1_fu_226_p2;
        icmp_ln935_reg_777 <= icmp_ln935_fu_188_p2;
        p_Result_10_reg_816 <= p_Result_10_fu_254_p4;
        p_Result_15_reg_782 <= y_L3_V_q0[32'd20];
        p_Result_18_reg_804 <= y_L3_V_q1[32'd20];
        p_Result_s_reg_794 <= p_Result_s_fu_216_p4;
        tmp_V_7_reg_787 <= tmp_V_7_fu_208_p3;
        tmp_V_9_reg_809 <= tmp_V_9_fu_246_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln787_reg_753_pp0_iter1_reg == 1'd0) & (icmp_ln935_1_reg_799 == 1'd0))) begin
        lsb_index_1_reg_864 <= lsb_index_1_fu_344_p2;
        sub_ln944_1_reg_853 <= sub_ln944_1_fu_334_p2;
        sub_ln947_1_reg_875 <= sub_ln947_1_fu_364_p2;
        tmp_12_reg_870 <= {{lsb_index_1_fu_344_p2[31:1]}};
        trunc_ln943_1_reg_880 <= trunc_ln943_1_fu_370_p1;
        trunc_ln944_1_reg_859 <= trunc_ln944_1_fu_340_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln935_reg_777 == 1'd0) & (icmp_ln787_reg_753_pp0_iter1_reg == 1'd0))) begin
        lsb_index_reg_832 <= lsb_index_fu_289_p2;
        sub_ln944_reg_821 <= sub_ln944_fu_279_p2;
        sub_ln947_reg_843 <= sub_ln947_fu_309_p2;
        tmp_8_reg_838 <= {{lsb_index_fu_289_p2[31:1]}};
        trunc_ln943_reg_848 <= trunc_ln943_fu_315_p1;
        trunc_ln944_reg_827 <= trunc_ln944_fu_285_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln787_reg_753_pp0_iter2_reg == 1'd0) & (icmp_ln935_1_reg_799_pp0_iter2_reg == 1'd0))) begin
        m_3_reg_895 <= {{m_12_fu_626_p2[31:1]}};
        tmp_14_reg_900 <= m_12_fu_626_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln935_reg_777_pp0_iter2_reg == 1'd0) & (icmp_ln787_reg_753_pp0_iter2_reg == 1'd0))) begin
        m_s_reg_885 <= {{m_2_fu_488_p2[31:1]}};
        tmp_10_reg_890 <= m_2_fu_488_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln787_fu_150_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_last_V_reg_772 <= tmp_last_V_fu_182_p2;
    end
end

always @ (*) begin
    if (((icmp_ln787_reg_753_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        DNN_out_TDATA_blk_n = DNN_out_TREADY;
    end else begin
        DNN_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln787_reg_753_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        DNN_out_TVALID = 1'b1;
    end else begin
        DNN_out_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln787_fu_150_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_L3_V_ce0 = 1'b1;
    end else begin
        y_L3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_L3_V_ce1 = 1'b1;
    end else begin
        y_L3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln787_fu_150_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln787_fu_150_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DNN_out_TDATA = {{select_ln162_1_fu_737_p3}, {select_ln162_fu_730_p3}};

assign DNN_out_TLAST = tmp_last_V_reg_772_pp0_iter3_reg;

assign a_1_fu_537_p2 = (icmp_ln947_3_fu_531_p2 & icmp_ln947_2_fu_512_p2);

assign a_fu_399_p2 = (icmp_ln947_fu_374_p2 & icmp_ln947_1_fu_393_p2);

assign add_ln792_fu_171_p2 = (7'd52 + zext_ln787_fu_162_p1);

assign add_ln949_1_fu_556_p2 = ($signed(21'd2097128) + $signed(trunc_ln944_1_reg_859));

assign add_ln949_fu_418_p2 = ($signed(21'd2097128) + $signed(trunc_ln944_reg_827));

assign add_ln958_1_fu_596_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_1_reg_853));

assign add_ln958_fu_458_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_821));

assign add_ln964_1_fu_705_p2 = (select_ln964_1_fu_693_p3 + sub_ln964_1_fu_700_p2);

assign add_ln964_fu_665_p2 = (select_ln964_fu_653_p3 + sub_ln964_fu_660_p2);

assign and_ln949_1_fu_568_p2 = (xor_ln949_1_fu_550_p2 & p_Result_13_fu_561_p3);

assign and_ln949_fu_430_p2 = (xor_ln949_fu_412_p2 & p_Result_7_fu_423_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state6_io));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state6_io));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((icmp_ln787_reg_753_pp0_iter3_reg == 1'd0) & (1'b0 == DNN_out_TREADY));
end

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign i_fu_156_p2 = (i_0_reg_139 + 6'd1);

assign icmp_ln787_fu_150_p2 = ((i_0_reg_139 == 6'd52) ? 1'b1 : 1'b0);

assign icmp_ln935_1_fu_226_p2 = ((y_L3_V_q1 == 21'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_188_p2 = ((y_L3_V_q0 == 21'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_393_p2 = ((p_Result_6_fu_388_p2 != 21'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_2_fu_512_p2 = (($signed(tmp_12_reg_870) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln947_3_fu_531_p2 = ((p_Result_12_fu_526_p2 != 21'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_374_p2 = (($signed(tmp_8_reg_838) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_1_fu_591_p2 = (($signed(lsb_index_1_reg_864) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_453_p2 = (($signed(lsb_index_reg_832) > $signed(32'd0)) ? 1'b1 : 1'b0);


always @ (p_Result_19_fu_319_p3) begin
    if (p_Result_19_fu_319_p3[0] == 1'b1) begin
        l_1_fu_326_p3 = 32'd0;
    end else if (p_Result_19_fu_319_p3[1] == 1'b1) begin
        l_1_fu_326_p3 = 32'd1;
    end else if (p_Result_19_fu_319_p3[2] == 1'b1) begin
        l_1_fu_326_p3 = 32'd2;
    end else if (p_Result_19_fu_319_p3[3] == 1'b1) begin
        l_1_fu_326_p3 = 32'd3;
    end else if (p_Result_19_fu_319_p3[4] == 1'b1) begin
        l_1_fu_326_p3 = 32'd4;
    end else if (p_Result_19_fu_319_p3[5] == 1'b1) begin
        l_1_fu_326_p3 = 32'd5;
    end else if (p_Result_19_fu_319_p3[6] == 1'b1) begin
        l_1_fu_326_p3 = 32'd6;
    end else if (p_Result_19_fu_319_p3[7] == 1'b1) begin
        l_1_fu_326_p3 = 32'd7;
    end else if (p_Result_19_fu_319_p3[8] == 1'b1) begin
        l_1_fu_326_p3 = 32'd8;
    end else if (p_Result_19_fu_319_p3[9] == 1'b1) begin
        l_1_fu_326_p3 = 32'd9;
    end else if (p_Result_19_fu_319_p3[10] == 1'b1) begin
        l_1_fu_326_p3 = 32'd10;
    end else if (p_Result_19_fu_319_p3[11] == 1'b1) begin
        l_1_fu_326_p3 = 32'd11;
    end else if (p_Result_19_fu_319_p3[12] == 1'b1) begin
        l_1_fu_326_p3 = 32'd12;
    end else if (p_Result_19_fu_319_p3[13] == 1'b1) begin
        l_1_fu_326_p3 = 32'd13;
    end else if (p_Result_19_fu_319_p3[14] == 1'b1) begin
        l_1_fu_326_p3 = 32'd14;
    end else if (p_Result_19_fu_319_p3[15] == 1'b1) begin
        l_1_fu_326_p3 = 32'd15;
    end else if (p_Result_19_fu_319_p3[16] == 1'b1) begin
        l_1_fu_326_p3 = 32'd16;
    end else if (p_Result_19_fu_319_p3[17] == 1'b1) begin
        l_1_fu_326_p3 = 32'd17;
    end else if (p_Result_19_fu_319_p3[18] == 1'b1) begin
        l_1_fu_326_p3 = 32'd18;
    end else if (p_Result_19_fu_319_p3[19] == 1'b1) begin
        l_1_fu_326_p3 = 32'd19;
    end else if (p_Result_19_fu_319_p3[20] == 1'b1) begin
        l_1_fu_326_p3 = 32'd20;
    end else if (p_Result_19_fu_319_p3[21] == 1'b1) begin
        l_1_fu_326_p3 = 32'd21;
    end else if (p_Result_19_fu_319_p3[22] == 1'b1) begin
        l_1_fu_326_p3 = 32'd22;
    end else if (p_Result_19_fu_319_p3[23] == 1'b1) begin
        l_1_fu_326_p3 = 32'd23;
    end else if (p_Result_19_fu_319_p3[24] == 1'b1) begin
        l_1_fu_326_p3 = 32'd24;
    end else if (p_Result_19_fu_319_p3[25] == 1'b1) begin
        l_1_fu_326_p3 = 32'd25;
    end else if (p_Result_19_fu_319_p3[26] == 1'b1) begin
        l_1_fu_326_p3 = 32'd26;
    end else if (p_Result_19_fu_319_p3[27] == 1'b1) begin
        l_1_fu_326_p3 = 32'd27;
    end else if (p_Result_19_fu_319_p3[28] == 1'b1) begin
        l_1_fu_326_p3 = 32'd28;
    end else if (p_Result_19_fu_319_p3[29] == 1'b1) begin
        l_1_fu_326_p3 = 32'd29;
    end else if (p_Result_19_fu_319_p3[30] == 1'b1) begin
        l_1_fu_326_p3 = 32'd30;
    end else if (p_Result_19_fu_319_p3[31] == 1'b1) begin
        l_1_fu_326_p3 = 32'd31;
    end else begin
        l_1_fu_326_p3 = 32'd32;
    end
end


always @ (p_Result_16_fu_264_p3) begin
    if (p_Result_16_fu_264_p3[0] == 1'b1) begin
        l_fu_271_p3 = 32'd0;
    end else if (p_Result_16_fu_264_p3[1] == 1'b1) begin
        l_fu_271_p3 = 32'd1;
    end else if (p_Result_16_fu_264_p3[2] == 1'b1) begin
        l_fu_271_p3 = 32'd2;
    end else if (p_Result_16_fu_264_p3[3] == 1'b1) begin
        l_fu_271_p3 = 32'd3;
    end else if (p_Result_16_fu_264_p3[4] == 1'b1) begin
        l_fu_271_p3 = 32'd4;
    end else if (p_Result_16_fu_264_p3[5] == 1'b1) begin
        l_fu_271_p3 = 32'd5;
    end else if (p_Result_16_fu_264_p3[6] == 1'b1) begin
        l_fu_271_p3 = 32'd6;
    end else if (p_Result_16_fu_264_p3[7] == 1'b1) begin
        l_fu_271_p3 = 32'd7;
    end else if (p_Result_16_fu_264_p3[8] == 1'b1) begin
        l_fu_271_p3 = 32'd8;
    end else if (p_Result_16_fu_264_p3[9] == 1'b1) begin
        l_fu_271_p3 = 32'd9;
    end else if (p_Result_16_fu_264_p3[10] == 1'b1) begin
        l_fu_271_p3 = 32'd10;
    end else if (p_Result_16_fu_264_p3[11] == 1'b1) begin
        l_fu_271_p3 = 32'd11;
    end else if (p_Result_16_fu_264_p3[12] == 1'b1) begin
        l_fu_271_p3 = 32'd12;
    end else if (p_Result_16_fu_264_p3[13] == 1'b1) begin
        l_fu_271_p3 = 32'd13;
    end else if (p_Result_16_fu_264_p3[14] == 1'b1) begin
        l_fu_271_p3 = 32'd14;
    end else if (p_Result_16_fu_264_p3[15] == 1'b1) begin
        l_fu_271_p3 = 32'd15;
    end else if (p_Result_16_fu_264_p3[16] == 1'b1) begin
        l_fu_271_p3 = 32'd16;
    end else if (p_Result_16_fu_264_p3[17] == 1'b1) begin
        l_fu_271_p3 = 32'd17;
    end else if (p_Result_16_fu_264_p3[18] == 1'b1) begin
        l_fu_271_p3 = 32'd18;
    end else if (p_Result_16_fu_264_p3[19] == 1'b1) begin
        l_fu_271_p3 = 32'd19;
    end else if (p_Result_16_fu_264_p3[20] == 1'b1) begin
        l_fu_271_p3 = 32'd20;
    end else if (p_Result_16_fu_264_p3[21] == 1'b1) begin
        l_fu_271_p3 = 32'd21;
    end else if (p_Result_16_fu_264_p3[22] == 1'b1) begin
        l_fu_271_p3 = 32'd22;
    end else if (p_Result_16_fu_264_p3[23] == 1'b1) begin
        l_fu_271_p3 = 32'd23;
    end else if (p_Result_16_fu_264_p3[24] == 1'b1) begin
        l_fu_271_p3 = 32'd24;
    end else if (p_Result_16_fu_264_p3[25] == 1'b1) begin
        l_fu_271_p3 = 32'd25;
    end else if (p_Result_16_fu_264_p3[26] == 1'b1) begin
        l_fu_271_p3 = 32'd26;
    end else if (p_Result_16_fu_264_p3[27] == 1'b1) begin
        l_fu_271_p3 = 32'd27;
    end else if (p_Result_16_fu_264_p3[28] == 1'b1) begin
        l_fu_271_p3 = 32'd28;
    end else if (p_Result_16_fu_264_p3[29] == 1'b1) begin
        l_fu_271_p3 = 32'd29;
    end else if (p_Result_16_fu_264_p3[30] == 1'b1) begin
        l_fu_271_p3 = 32'd30;
    end else if (p_Result_16_fu_264_p3[31] == 1'b1) begin
        l_fu_271_p3 = 32'd31;
    end else begin
        l_fu_271_p3 = 32'd32;
    end
end

assign lsb_index_1_fu_344_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_1_fu_334_p2));

assign lsb_index_fu_289_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_fu_279_p2));

assign lshr_ln947_1_fu_520_p2 = 21'd2097151 >> zext_ln947_1_fu_517_p1;

assign lshr_ln947_fu_382_p2 = 21'd2097151 >> zext_ln947_fu_379_p1;

assign lshr_ln958_1_fu_601_p2 = m_9_fu_588_p1 >> add_ln958_1_fu_596_p2;

assign lshr_ln958_fu_463_p2 = m_fu_450_p1 >> add_ln958_fu_458_p2;

assign m_10_fu_618_p3 = ((icmp_ln958_1_fu_591_p2[0:0] === 1'b1) ? lshr_ln958_1_fu_601_p2 : shl_ln958_1_fu_612_p2);

assign m_12_fu_626_p2 = (m_10_fu_618_p3 + or_ln949_1_fu_580_p3);

assign m_15_fu_650_p1 = m_s_reg_885;

assign m_16_fu_690_p1 = m_3_reg_895;

assign m_1_fu_480_p3 = ((icmp_ln958_fu_453_p2[0:0] === 1'b1) ? lshr_ln958_fu_463_p2 : shl_ln958_fu_474_p2);

assign m_2_fu_488_p2 = (m_1_fu_480_p3 + or_ln_fu_442_p3);

assign m_9_fu_588_p1 = tmp_V_9_reg_809_pp0_iter2_reg;

assign m_fu_450_p1 = tmp_V_7_reg_787_pp0_iter2_reg;

assign or_ln949_1_fu_580_p3 = {{31'd0}, {or_ln949_fu_574_p2}};

assign or_ln949_2_fu_436_p2 = (and_ln949_fu_430_p2 | a_fu_399_p2);

assign or_ln949_fu_574_p2 = (and_ln949_1_fu_568_p2 | a_1_fu_537_p2);

assign or_ln_fu_442_p3 = {{31'd0}, {or_ln949_2_fu_436_p2}};

integer ap_tvar_int_0;

always @ (tmp_V_9_fu_246_p3) begin
    for (ap_tvar_int_0 = 21 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 20 - 0) begin
            p_Result_10_fu_254_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_10_fu_254_p4[ap_tvar_int_0] = tmp_V_9_fu_246_p3[20 - ap_tvar_int_0];
        end
    end
end

assign p_Result_12_fu_526_p2 = (tmp_V_9_reg_809_pp0_iter2_reg & lshr_ln947_1_fu_520_p2);

assign p_Result_13_fu_561_p3 = tmp_V_9_reg_809_pp0_iter2_reg[add_ln949_1_fu_556_p2];

assign p_Result_15_fu_194_p3 = y_L3_V_q0[32'd20];

assign p_Result_16_fu_264_p3 = {{11'd2047}, {p_Result_s_reg_794}};

assign p_Result_17_fu_678_p5 = {{tmp_4_fu_671_p3}, {m_15_fu_650_p1[22:0]}};

assign p_Result_18_fu_232_p3 = y_L3_V_q1[32'd20];

assign p_Result_19_fu_319_p3 = {{11'd2047}, {p_Result_10_reg_816}};

assign p_Result_20_fu_718_p5 = {{tmp_6_fu_711_p3}, {m_16_fu_690_p1[22:0]}};

assign p_Result_6_fu_388_p2 = (tmp_V_7_reg_787_pp0_iter2_reg & lshr_ln947_fu_382_p2);

assign p_Result_7_fu_423_p3 = tmp_V_7_reg_787_pp0_iter2_reg[add_ln949_fu_418_p2];

integer ap_tvar_int_1;

always @ (tmp_V_7_fu_208_p3) begin
    for (ap_tvar_int_1 = 21 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 20 - 0) begin
            p_Result_s_fu_216_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_s_fu_216_p4[ap_tvar_int_1] = tmp_V_7_fu_208_p3[20 - ap_tvar_int_1];
        end
    end
end

assign select_ln162_1_fu_737_p3 = ((icmp_ln935_1_reg_799_pp0_iter3_reg[0:0] === 1'b1) ? 32'd0 : p_Result_20_fu_718_p5);

assign select_ln162_fu_730_p3 = ((icmp_ln935_reg_777_pp0_iter3_reg[0:0] === 1'b1) ? 32'd0 : p_Result_17_fu_678_p5);

assign select_ln964_1_fu_693_p3 = ((tmp_14_reg_900[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign select_ln964_fu_653_p3 = ((tmp_10_reg_890[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign shl_ln958_1_fu_612_p2 = m_9_fu_588_p1 << sub_ln958_1_fu_607_p2;

assign shl_ln958_fu_474_p2 = m_fu_450_p1 << sub_ln958_fu_469_p2;

assign sub_ln944_1_fu_334_p2 = (32'd21 - l_1_fu_326_p3);

assign sub_ln944_fu_279_p2 = (32'd21 - l_fu_271_p3);

assign sub_ln947_1_fu_364_p2 = (5'd14 - trunc_ln947_1_fu_360_p1);

assign sub_ln947_fu_309_p2 = (5'd14 - trunc_ln947_fu_305_p1);

assign sub_ln958_1_fu_607_p2 = (32'd25 - sub_ln944_1_reg_853);

assign sub_ln958_fu_469_p2 = (32'd25 - sub_ln944_reg_821);

assign sub_ln964_1_fu_700_p2 = (8'd8 - trunc_ln943_1_reg_880_pp0_iter3_reg);

assign sub_ln964_fu_660_p2 = (8'd8 - trunc_ln943_reg_848_pp0_iter3_reg);

assign tmp_13_fu_543_p3 = lsb_index_1_reg_864[32'd31];

assign tmp_4_fu_671_p3 = {{p_Result_15_reg_782_pp0_iter3_reg}, {add_ln964_fu_665_p2}};

assign tmp_6_fu_711_p3 = {{p_Result_18_reg_804_pp0_iter3_reg}, {add_ln964_1_fu_705_p2}};

assign tmp_9_fu_405_p3 = lsb_index_reg_832[32'd31];

assign tmp_V_4_fu_240_p2 = (21'd0 - y_L3_V_q1);

assign tmp_V_7_fu_208_p3 = ((p_Result_15_fu_194_p3[0:0] === 1'b1) ? tmp_V_fu_202_p2 : y_L3_V_q0);

assign tmp_V_9_fu_246_p3 = ((p_Result_18_fu_232_p3[0:0] === 1'b1) ? tmp_V_4_fu_240_p2 : y_L3_V_q1);

assign tmp_V_fu_202_p2 = (21'd0 - y_L3_V_q0);

assign tmp_last_V_fu_182_p2 = ((i_0_reg_139 == 6'd51) ? 1'b1 : 1'b0);

assign trunc_ln943_1_fu_370_p1 = l_1_fu_326_p3[7:0];

assign trunc_ln943_fu_315_p1 = l_fu_271_p3[7:0];

assign trunc_ln944_1_fu_340_p1 = sub_ln944_1_fu_334_p2[20:0];

assign trunc_ln944_fu_285_p1 = sub_ln944_fu_279_p2[20:0];

assign trunc_ln947_1_fu_360_p1 = sub_ln944_1_fu_334_p2[4:0];

assign trunc_ln947_fu_305_p1 = sub_ln944_fu_279_p2[4:0];

assign xor_ln949_1_fu_550_p2 = (tmp_13_fu_543_p3 ^ 1'd1);

assign xor_ln949_fu_412_p2 = (tmp_9_fu_405_p3 ^ 1'd1);

assign y_L3_V_address0 = zext_ln792_fu_166_p1;

assign y_L3_V_address1 = zext_ln792_1_fu_177_p1;

assign zext_ln787_fu_162_p1 = i_0_reg_139;

assign zext_ln792_1_fu_177_p1 = add_ln792_fu_171_p2;

assign zext_ln792_fu_166_p1 = i_0_reg_139;

assign zext_ln947_1_fu_517_p1 = sub_ln947_1_reg_875;

assign zext_ln947_fu_379_p1 = sub_ln947_reg_843;

endmodule //reconstruct_complex_s
