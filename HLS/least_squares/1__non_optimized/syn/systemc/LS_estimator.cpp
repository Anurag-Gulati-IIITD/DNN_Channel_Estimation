// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "LS_estimator.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic LS_estimator::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic LS_estimator::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<37> LS_estimator::ap_ST_fsm_state1 = "1";
const sc_lv<37> LS_estimator::ap_ST_fsm_state2 = "10";
const sc_lv<37> LS_estimator::ap_ST_fsm_state3 = "100";
const sc_lv<37> LS_estimator::ap_ST_fsm_state4 = "1000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state5 = "10000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state6 = "100000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state7 = "1000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state8 = "10000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state9 = "100000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state10 = "1000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state11 = "10000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state12 = "100000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<37> LS_estimator::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<1> LS_estimator::ap_const_lv1_0 = "0";
const sc_lv<1> LS_estimator::ap_const_lv1_1 = "1";
const sc_lv<2> LS_estimator::ap_const_lv2_0 = "00";
const sc_lv<2> LS_estimator::ap_const_lv2_2 = "10";
const sc_lv<2> LS_estimator::ap_const_lv2_3 = "11";
const sc_lv<2> LS_estimator::ap_const_lv2_1 = "1";
const sc_lv<32> LS_estimator::ap_const_lv32_4 = "100";
const sc_lv<32> LS_estimator::ap_const_lv32_5 = "101";
const sc_lv<32> LS_estimator::ap_const_lv32_23 = "100011";
const sc_lv<32> LS_estimator::ap_const_lv32_24 = "100100";
const sc_lv<32> LS_estimator::ap_const_lv32_1 = "1";
const sc_lv<32> LS_estimator::ap_const_lv32_2 = "10";
const sc_lv<32> LS_estimator::ap_const_lv32_3 = "11";
const sc_lv<32> LS_estimator::ap_const_lv32_6 = "110";
const sc_lv<32> LS_estimator::ap_const_lv32_7 = "111";
const sc_lv<32> LS_estimator::ap_const_lv32_B = "1011";
const sc_lv<32> LS_estimator::ap_const_lv32_10 = "10000";
const sc_lv<32> LS_estimator::ap_const_lv32_20 = "100000";
const sc_lv<32> LS_estimator::ap_const_lv32_22 = "100010";
const sc_lv<6> LS_estimator::ap_const_lv6_0 = "000000";
const sc_lv<32> LS_estimator::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> LS_estimator::ap_const_lv32_21 = "100001";
const sc_lv<32> LS_estimator::ap_const_lv32_C = "1100";
const sc_lv<32> LS_estimator::ap_const_lv32_8 = "1000";
const sc_lv<32> LS_estimator::ap_const_lv32_11 = "10001";
const sc_lv<32> LS_estimator::ap_const_lv32_3F = "111111";
const sc_lv<6> LS_estimator::ap_const_lv6_1 = "1";
const sc_lv<6> LS_estimator::ap_const_lv6_33 = "110011";
const sc_lv<6> LS_estimator::ap_const_lv6_34 = "110100";
const bool LS_estimator::ap_const_boolean_1 = true;

LS_estimator::LS_estimator(sc_module_name name) : sc_module(name), mVcdFile(0) {
    preamble_M_real_U = new LS_estimator_preabkb("preamble_M_real_U");
    preamble_M_real_U->clk(ap_clk);
    preamble_M_real_U->reset(ap_rst_n_inv);
    preamble_M_real_U->address0(preamble_M_real_address0);
    preamble_M_real_U->ce0(preamble_M_real_ce0);
    preamble_M_real_U->we0(preamble_M_real_we0);
    preamble_M_real_U->d0(preamble_M_real_d0);
    preamble_M_real_U->q0(preamble_M_real_q0);
    preamble_M_imag_U = new LS_estimator_preabkb("preamble_M_imag_U");
    preamble_M_imag_U->clk(ap_clk);
    preamble_M_imag_U->reset(ap_rst_n_inv);
    preamble_M_imag_U->address0(preamble_M_imag_address0);
    preamble_M_imag_U->ce0(preamble_M_imag_ce0);
    preamble_M_imag_U->we0(preamble_M_imag_we0);
    preamble_M_imag_U->d0(preamble_M_imag_d0);
    preamble_M_imag_U->q0(preamble_M_imag_q0);
    training_sym_M_real_U = new LS_estimator_preabkb("training_sym_M_real_U");
    training_sym_M_real_U->clk(ap_clk);
    training_sym_M_real_U->reset(ap_rst_n_inv);
    training_sym_M_real_U->address0(training_sym_M_real_address0);
    training_sym_M_real_U->ce0(training_sym_M_real_ce0);
    training_sym_M_real_U->we0(training_sym_M_real_we0);
    training_sym_M_real_U->d0(training_sym_M_real_d0);
    training_sym_M_real_U->q0(training_sym_M_real_q0);
    training_sym_M_imag_U = new LS_estimator_preabkb("training_sym_M_imag_U");
    training_sym_M_imag_U->clk(ap_clk);
    training_sym_M_imag_U->reset(ap_rst_n_inv);
    training_sym_M_imag_U->address0(training_sym_M_imag_address0);
    training_sym_M_imag_U->ce0(training_sym_M_imag_ce0);
    training_sym_M_imag_U->we0(training_sym_M_imag_we0);
    training_sym_M_imag_U->d0(training_sym_M_imag_d0);
    training_sym_M_imag_U->q0(training_sym_M_imag_q0);
    LS_out_M_real_U = new LS_estimator_preabkb("LS_out_M_real_U");
    LS_out_M_real_U->clk(ap_clk);
    LS_out_M_real_U->reset(ap_rst_n_inv);
    LS_out_M_real_U->address0(LS_out_M_real_address0);
    LS_out_M_real_U->ce0(LS_out_M_real_ce0);
    LS_out_M_real_U->we0(LS_out_M_real_we0);
    LS_out_M_real_U->d0(LS_out_M_real_d0);
    LS_out_M_real_U->q0(LS_out_M_real_q0);
    LS_out_M_imag_U = new LS_estimator_preabkb("LS_out_M_imag_U");
    LS_out_M_imag_U->clk(ap_clk);
    LS_out_M_imag_U->reset(ap_rst_n_inv);
    LS_out_M_imag_U->address0(LS_out_M_imag_address0);
    LS_out_M_imag_U->ce0(LS_out_M_imag_ce0);
    LS_out_M_imag_U->we0(LS_out_M_imag_we0);
    LS_out_M_imag_U->d0(LS_out_M_imag_d0);
    LS_out_M_imag_U->q0(LS_out_M_imag_q0);
    LS_estimator_faddhbi_U1 = new LS_estimator_faddhbi<1,5,32,32,32>("LS_estimator_faddhbi_U1");
    LS_estimator_faddhbi_U1->clk(ap_clk);
    LS_estimator_faddhbi_U1->reset(ap_rst_n_inv);
    LS_estimator_faddhbi_U1->din0(tmp_i_i_reg_688);
    LS_estimator_faddhbi_U1->din1(tmp_1_i_i_reg_693);
    LS_estimator_faddhbi_U1->ce(ap_var_for_const0);
    LS_estimator_faddhbi_U1->dout(grp_fu_349_p2);
    LS_estimator_faddhbi_U2 = new LS_estimator_faddhbi<1,5,32,32,32>("LS_estimator_faddhbi_U2");
    LS_estimator_faddhbi_U2->clk(ap_clk);
    LS_estimator_faddhbi_U2->reset(ap_rst_n_inv);
    LS_estimator_faddhbi_U2->din0(tmp_3_i_i_reg_698);
    LS_estimator_faddhbi_U2->din1(tmp_4_i_i_reg_703);
    LS_estimator_faddhbi_U2->ce(ap_var_for_const0);
    LS_estimator_faddhbi_U2->dout(grp_fu_353_p2);
    LS_estimator_fsubibs_U3 = new LS_estimator_fsubibs<1,5,32,32,32>("LS_estimator_fsubibs_U3");
    LS_estimator_fsubibs_U3->clk(ap_clk);
    LS_estimator_fsubibs_U3->reset(ap_rst_n_inv);
    LS_estimator_fsubibs_U3->din0(tmp_6_i_i_reg_708);
    LS_estimator_fsubibs_U3->din1(tmp_7_i_i_reg_713);
    LS_estimator_fsubibs_U3->ce(ap_var_for_const0);
    LS_estimator_fsubibs_U3->dout(grp_fu_357_p2);
    LS_estimator_fmuljbC_U4 = new LS_estimator_fmuljbC<1,4,32,32,32>("LS_estimator_fmuljbC_U4");
    LS_estimator_fmuljbC_U4->clk(ap_clk);
    LS_estimator_fmuljbC_U4->reset(ap_rst_n_inv);
    LS_estimator_fmuljbC_U4->din0(p_r_M_real_reg_660);
    LS_estimator_fmuljbC_U4->din1(p_t_real_reg_672);
    LS_estimator_fmuljbC_U4->ce(ap_var_for_const0);
    LS_estimator_fmuljbC_U4->dout(grp_fu_361_p2);
    LS_estimator_fmuljbC_U5 = new LS_estimator_fmuljbC<1,4,32,32,32>("LS_estimator_fmuljbC_U5");
    LS_estimator_fmuljbC_U5->clk(ap_clk);
    LS_estimator_fmuljbC_U5->reset(ap_rst_n_inv);
    LS_estimator_fmuljbC_U5->din0(p_r_M_imag_reg_666);
    LS_estimator_fmuljbC_U5->din1(p_t_imag_reg_680);
    LS_estimator_fmuljbC_U5->ce(ap_var_for_const0);
    LS_estimator_fmuljbC_U5->dout(grp_fu_365_p2);
    LS_estimator_fmuljbC_U6 = new LS_estimator_fmuljbC<1,4,32,32,32>("LS_estimator_fmuljbC_U6");
    LS_estimator_fmuljbC_U6->clk(ap_clk);
    LS_estimator_fmuljbC_U6->reset(ap_rst_n_inv);
    LS_estimator_fmuljbC_U6->din0(p_t_real_reg_672);
    LS_estimator_fmuljbC_U6->din1(p_t_real_reg_672);
    LS_estimator_fmuljbC_U6->ce(ap_var_for_const0);
    LS_estimator_fmuljbC_U6->dout(grp_fu_369_p2);
    LS_estimator_fmuljbC_U7 = new LS_estimator_fmuljbC<1,4,32,32,32>("LS_estimator_fmuljbC_U7");
    LS_estimator_fmuljbC_U7->clk(ap_clk);
    LS_estimator_fmuljbC_U7->reset(ap_rst_n_inv);
    LS_estimator_fmuljbC_U7->din0(p_t_imag_reg_680);
    LS_estimator_fmuljbC_U7->din1(p_t_imag_reg_680);
    LS_estimator_fmuljbC_U7->ce(ap_var_for_const0);
    LS_estimator_fmuljbC_U7->dout(grp_fu_373_p2);
    LS_estimator_fmuljbC_U8 = new LS_estimator_fmuljbC<1,4,32,32,32>("LS_estimator_fmuljbC_U8");
    LS_estimator_fmuljbC_U8->clk(ap_clk);
    LS_estimator_fmuljbC_U8->reset(ap_rst_n_inv);
    LS_estimator_fmuljbC_U8->din0(p_r_M_imag_reg_666);
    LS_estimator_fmuljbC_U8->din1(p_t_real_reg_672);
    LS_estimator_fmuljbC_U8->ce(ap_var_for_const0);
    LS_estimator_fmuljbC_U8->dout(grp_fu_377_p2);
    LS_estimator_fmuljbC_U9 = new LS_estimator_fmuljbC<1,4,32,32,32>("LS_estimator_fmuljbC_U9");
    LS_estimator_fmuljbC_U9->clk(ap_clk);
    LS_estimator_fmuljbC_U9->reset(ap_rst_n_inv);
    LS_estimator_fmuljbC_U9->din0(p_r_M_real_reg_660);
    LS_estimator_fmuljbC_U9->din1(p_t_imag_reg_680);
    LS_estimator_fmuljbC_U9->ce(ap_var_for_const0);
    LS_estimator_fmuljbC_U9->dout(grp_fu_381_p2);
    LS_estimator_fdivkbM_U10 = new LS_estimator_fdivkbM<1,16,32,32,32>("LS_estimator_fdivkbM_U10");
    LS_estimator_fdivkbM_U10->clk(ap_clk);
    LS_estimator_fdivkbM_U10->reset(ap_rst_n_inv);
    LS_estimator_fdivkbM_U10->din0(tmp_2_i_i_reg_718);
    LS_estimator_fdivkbM_U10->din1(tmp_5_i_i_reg_723);
    LS_estimator_fdivkbM_U10->ce(ap_var_for_const0);
    LS_estimator_fdivkbM_U10->dout(grp_fu_385_p2);
    LS_estimator_fdivkbM_U11 = new LS_estimator_fdivkbM<1,16,32,32,32>("LS_estimator_fdivkbM_U11");
    LS_estimator_fdivkbM_U11->clk(ap_clk);
    LS_estimator_fdivkbM_U11->reset(ap_rst_n_inv);
    LS_estimator_fdivkbM_U11->din0(tmp_8_i_i_reg_729);
    LS_estimator_fdivkbM_U11->din1(tmp_5_i_i_reg_723);
    LS_estimator_fdivkbM_U11->ce(ap_var_for_const0);
    LS_estimator_fdivkbM_U11->dout(grp_fu_389_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_LS_out_M_imag_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln29_reg_634 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( zext_ln12_fu_449_p1 );
    sensitive << ( zext_ln36_fu_557_p1 );

    SC_METHOD(thread_LS_out_M_imag_ce0);
    sensitive << ( out_stream_TREADY );
    sensitive << ( out_stream_V_data_1_state );
    sensitive << ( out_stream_V_last_V_1_state );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_LS_out_M_imag_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( complex_M_imag_writ_reg_739 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_LS_out_M_imag_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_LS_out_M_real_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln29_reg_634 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( zext_ln12_fu_449_p1 );
    sensitive << ( zext_ln36_fu_557_p1 );

    SC_METHOD(thread_LS_out_M_real_ce0);
    sensitive << ( out_stream_TREADY );
    sensitive << ( out_stream_V_data_1_state );
    sensitive << ( out_stream_V_last_V_1_state );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_LS_out_M_real_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( complex_M_real_writ_reg_734 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_LS_out_M_real_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_add_ln10_1_fu_425_p2);
    sensitive << ( phi_ln10_1_reg_283 );

    SC_METHOD(thread_add_ln10_fu_407_p2);
    sensitive << ( phi_ln10_reg_272 );

    SC_METHOD(thread_add_ln12_fu_443_p2);
    sensitive << ( phi_ln12_reg_294 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state35);
    sensitive << ( out_stream_TREADY );
    sensitive << ( out_stream_V_data_1_state );
    sensitive << ( out_stream_V_last_V_1_state );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( in_stream_V_data_0_vld_out );
    sensitive << ( icmp_ln15_fu_461_p2 );

    SC_METHOD(thread_ap_block_state6);
    sensitive << ( in_stream_V_data_0_vld_out );
    sensitive << ( icmp_ln21_fu_493_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bitcast_ln162_1_fu_573_p1);
    sensitive << ( LS_out_M_imag_q0 );

    SC_METHOD(thread_bitcast_ln162_fu_569_p1);
    sensitive << ( LS_out_M_real_q0 );

    SC_METHOD(thread_bitcast_ln9_1_fu_482_p1);
    sensitive << ( grp_fu_397_p4 );

    SC_METHOD(thread_bitcast_ln9_2_fu_509_p1);
    sensitive << ( trunc_ln9_1_fu_505_p1 );

    SC_METHOD(thread_bitcast_ln9_3_fu_514_p1);
    sensitive << ( grp_fu_397_p4 );

    SC_METHOD(thread_bitcast_ln9_fu_477_p1);
    sensitive << ( trunc_ln9_fu_473_p1 );

    SC_METHOD(thread_grp_fu_397_p4);
    sensitive << ( in_stream_V_data_0_data_out );

    SC_METHOD(thread_i_1_fu_499_p2);
    sensitive << ( i3_0_reg_316 );

    SC_METHOD(thread_i_2_fu_531_p2);
    sensitive << ( i5_0_reg_327 );

    SC_METHOD(thread_i_3_fu_551_p2);
    sensitive << ( i6_0_reg_338 );

    SC_METHOD(thread_i_fu_467_p2);
    sensitive << ( i_0_reg_305 );

    SC_METHOD(thread_icmp_ln10_1_fu_437_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( phi_ln10_1_reg_283 );

    SC_METHOD(thread_icmp_ln10_fu_419_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln10_reg_272 );

    SC_METHOD(thread_icmp_ln12_fu_455_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( phi_ln12_reg_294 );

    SC_METHOD(thread_icmp_ln15_fu_461_p2);
    sensitive << ( in_stream_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln15_fu_461_p2 );
    sensitive << ( i_0_reg_305 );

    SC_METHOD(thread_icmp_ln21_fu_493_p2);
    sensitive << ( in_stream_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln21_fu_493_p2 );
    sensitive << ( i3_0_reg_316 );

    SC_METHOD(thread_icmp_ln28_fu_525_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i5_0_reg_327 );

    SC_METHOD(thread_icmp_ln33_fu_545_p2);
    sensitive << ( out_stream_TREADY );
    sensitive << ( out_stream_V_data_1_state );
    sensitive << ( out_stream_V_last_V_1_state );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( i6_0_reg_338 );

    SC_METHOD(thread_in_stream_TDATA_blk_n);
    sensitive << ( in_stream_V_data_0_state );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln15_fu_461_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln21_fu_493_p2 );

    SC_METHOD(thread_in_stream_TREADY);
    sensitive << ( in_stream_V_last_V_0_state );

    SC_METHOD(thread_in_stream_V_data_0_ack_in);
    sensitive << ( in_stream_V_data_0_state );

    SC_METHOD(thread_in_stream_V_data_0_ack_out);
    sensitive << ( in_stream_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln15_fu_461_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln21_fu_493_p2 );

    SC_METHOD(thread_in_stream_V_data_0_data_out);
    sensitive << ( in_stream_V_data_0_payload_A );
    sensitive << ( in_stream_V_data_0_payload_B );
    sensitive << ( in_stream_V_data_0_sel );

    SC_METHOD(thread_in_stream_V_data_0_load_A);
    sensitive << ( in_stream_V_data_0_sel_wr );
    sensitive << ( in_stream_V_data_0_state_cmp_full );

    SC_METHOD(thread_in_stream_V_data_0_load_B);
    sensitive << ( in_stream_V_data_0_sel_wr );
    sensitive << ( in_stream_V_data_0_state_cmp_full );

    SC_METHOD(thread_in_stream_V_data_0_sel);
    sensitive << ( in_stream_V_data_0_sel_rd );

    SC_METHOD(thread_in_stream_V_data_0_state_cmp_full);
    sensitive << ( in_stream_V_data_0_state );

    SC_METHOD(thread_in_stream_V_data_0_vld_in);
    sensitive << ( in_stream_TVALID );

    SC_METHOD(thread_in_stream_V_data_0_vld_out);
    sensitive << ( in_stream_V_data_0_state );

    SC_METHOD(thread_in_stream_V_last_V_0_ack_out);
    sensitive << ( in_stream_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln15_fu_461_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln21_fu_493_p2 );

    SC_METHOD(thread_in_stream_V_last_V_0_vld_in);
    sensitive << ( in_stream_TVALID );

    SC_METHOD(thread_out_stream_TDATA);
    sensitive << ( out_stream_V_data_1_data_out );

    SC_METHOD(thread_out_stream_TDATA_blk_n);
    sensitive << ( out_stream_V_data_1_state );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_out_stream_TLAST);
    sensitive << ( out_stream_V_last_V_1_data_out );

    SC_METHOD(thread_out_stream_TVALID);
    sensitive << ( out_stream_V_last_V_1_state );

    SC_METHOD(thread_out_stream_V_data_1_ack_in);
    sensitive << ( out_stream_V_data_1_state );

    SC_METHOD(thread_out_stream_V_data_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_data_1_data_out);
    sensitive << ( out_stream_V_data_1_payload_A );
    sensitive << ( out_stream_V_data_1_payload_B );
    sensitive << ( out_stream_V_data_1_sel );

    SC_METHOD(thread_out_stream_V_data_1_load_A);
    sensitive << ( out_stream_V_data_1_sel_wr );
    sensitive << ( out_stream_V_data_1_state_cmp_full );

    SC_METHOD(thread_out_stream_V_data_1_load_B);
    sensitive << ( out_stream_V_data_1_sel_wr );
    sensitive << ( out_stream_V_data_1_state_cmp_full );

    SC_METHOD(thread_out_stream_V_data_1_sel);
    sensitive << ( out_stream_V_data_1_sel_rd );

    SC_METHOD(thread_out_stream_V_data_1_state_cmp_full);
    sensitive << ( out_stream_V_data_1_state );

    SC_METHOD(thread_out_stream_V_data_1_vld_in);
    sensitive << ( out_stream_V_data_1_ack_in );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_out_stream_V_data_1_vld_out);
    sensitive << ( out_stream_V_data_1_state );

    SC_METHOD(thread_out_stream_V_last_V_1_ack_in);
    sensitive << ( out_stream_V_last_V_1_state );

    SC_METHOD(thread_out_stream_V_last_V_1_ack_out);
    sensitive << ( out_stream_TREADY );

    SC_METHOD(thread_out_stream_V_last_V_1_data_out);
    sensitive << ( out_stream_V_last_V_1_payload_A );
    sensitive << ( out_stream_V_last_V_1_payload_B );
    sensitive << ( out_stream_V_last_V_1_sel );

    SC_METHOD(thread_out_stream_V_last_V_1_load_A);
    sensitive << ( out_stream_V_last_V_1_sel_wr );
    sensitive << ( out_stream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_stream_V_last_V_1_load_B);
    sensitive << ( out_stream_V_last_V_1_sel_wr );
    sensitive << ( out_stream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_stream_V_last_V_1_sel);
    sensitive << ( out_stream_V_last_V_1_sel_rd );

    SC_METHOD(thread_out_stream_V_last_V_1_state_cmp_full);
    sensitive << ( out_stream_V_last_V_1_state );

    SC_METHOD(thread_out_stream_V_last_V_1_vld_in);
    sensitive << ( out_stream_V_data_1_ack_in );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_out_stream_V_last_V_1_vld_out);
    sensitive << ( out_stream_V_last_V_1_state );

    SC_METHOD(thread_preamble_M_imag_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln29_fu_537_p1 );
    sensitive << ( zext_ln10_fu_413_p1 );
    sensitive << ( zext_ln18_fu_487_p1 );

    SC_METHOD(thread_preamble_M_imag_ce0);
    sensitive << ( in_stream_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln15_fu_461_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_preamble_M_imag_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( bitcast_ln9_1_fu_482_p1 );

    SC_METHOD(thread_preamble_M_imag_we0);
    sensitive << ( in_stream_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln15_fu_461_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_preamble_M_real_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln29_fu_537_p1 );
    sensitive << ( zext_ln10_fu_413_p1 );
    sensitive << ( zext_ln18_fu_487_p1 );

    SC_METHOD(thread_preamble_M_real_ce0);
    sensitive << ( in_stream_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln15_fu_461_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_preamble_M_real_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( bitcast_ln9_fu_477_p1 );

    SC_METHOD(thread_preamble_M_real_we0);
    sensitive << ( in_stream_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln15_fu_461_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_data_2_fu_577_p3);
    sensitive << ( bitcast_ln162_1_fu_573_p1 );
    sensitive << ( bitcast_ln162_fu_569_p1 );

    SC_METHOD(thread_tmp_last_V_fu_563_p2);
    sensitive << ( out_stream_TREADY );
    sensitive << ( out_stream_V_data_1_state );
    sensitive << ( out_stream_V_last_V_1_state );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( icmp_ln33_fu_545_p2 );
    sensitive << ( i6_0_reg_338 );

    SC_METHOD(thread_training_sym_M_imag_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln29_fu_537_p1 );
    sensitive << ( zext_ln10_1_fu_431_p1 );
    sensitive << ( zext_ln24_fu_519_p1 );

    SC_METHOD(thread_training_sym_M_imag_ce0);
    sensitive << ( in_stream_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln21_fu_493_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_training_sym_M_imag_d0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( bitcast_ln9_3_fu_514_p1 );

    SC_METHOD(thread_training_sym_M_imag_we0);
    sensitive << ( in_stream_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln21_fu_493_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_training_sym_M_real_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln29_fu_537_p1 );
    sensitive << ( zext_ln10_1_fu_431_p1 );
    sensitive << ( zext_ln24_fu_519_p1 );

    SC_METHOD(thread_training_sym_M_real_ce0);
    sensitive << ( in_stream_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln21_fu_493_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_training_sym_M_real_d0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( bitcast_ln9_2_fu_509_p1 );

    SC_METHOD(thread_training_sym_M_real_we0);
    sensitive << ( in_stream_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln21_fu_493_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_trunc_ln9_1_fu_505_p1);
    sensitive << ( in_stream_V_data_0_data_out );

    SC_METHOD(thread_trunc_ln9_fu_473_p1);
    sensitive << ( in_stream_V_data_0_data_out );

    SC_METHOD(thread_zext_ln10_1_fu_431_p1);
    sensitive << ( phi_ln10_1_reg_283 );

    SC_METHOD(thread_zext_ln10_fu_413_p1);
    sensitive << ( phi_ln10_reg_272 );

    SC_METHOD(thread_zext_ln12_fu_449_p1);
    sensitive << ( phi_ln12_reg_294 );

    SC_METHOD(thread_zext_ln18_fu_487_p1);
    sensitive << ( i_0_reg_305 );

    SC_METHOD(thread_zext_ln24_fu_519_p1);
    sensitive << ( i3_0_reg_316 );

    SC_METHOD(thread_zext_ln29_fu_537_p1);
    sensitive << ( i5_0_reg_327 );

    SC_METHOD(thread_zext_ln36_fu_557_p1);
    sensitive << ( i6_0_reg_338 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( in_stream_V_data_0_vld_out );
    sensitive << ( out_stream_TREADY );
    sensitive << ( out_stream_V_data_1_ack_in );
    sensitive << ( out_stream_V_data_1_state );
    sensitive << ( out_stream_V_last_V_1_state );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln15_fu_461_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln21_fu_493_p2 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln28_fu_525_p2 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( icmp_ln33_fu_545_p2 );
    sensitive << ( icmp_ln10_fu_419_p2 );
    sensitive << ( icmp_ln10_1_fu_437_p2 );
    sensitive << ( icmp_ln12_fu_455_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    in_stream_V_data_0_sel_rd = SC_LOGIC_0;
    in_stream_V_data_0_sel_wr = SC_LOGIC_0;
    in_stream_V_data_0_state = "00";
    in_stream_V_last_V_0_state = "00";
    out_stream_V_data_1_sel_rd = SC_LOGIC_0;
    out_stream_V_data_1_sel_wr = SC_LOGIC_0;
    out_stream_V_data_1_state = "00";
    out_stream_V_last_V_1_sel_rd = SC_LOGIC_0;
    out_stream_V_last_V_1_sel_wr = SC_LOGIC_0;
    out_stream_V_last_V_1_state = "00";
    ap_CS_fsm = "0000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "LS_estimator_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_stream_TDATA, "(port)in_stream_TDATA");
    sc_trace(mVcdFile, in_stream_TVALID, "(port)in_stream_TVALID");
    sc_trace(mVcdFile, in_stream_TREADY, "(port)in_stream_TREADY");
    sc_trace(mVcdFile, in_stream_TLAST, "(port)in_stream_TLAST");
    sc_trace(mVcdFile, out_stream_TDATA, "(port)out_stream_TDATA");
    sc_trace(mVcdFile, out_stream_TVALID, "(port)out_stream_TVALID");
    sc_trace(mVcdFile, out_stream_TREADY, "(port)out_stream_TREADY");
    sc_trace(mVcdFile, out_stream_TLAST, "(port)out_stream_TLAST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, in_stream_V_data_0_data_out, "in_stream_V_data_0_data_out");
    sc_trace(mVcdFile, in_stream_V_data_0_vld_in, "in_stream_V_data_0_vld_in");
    sc_trace(mVcdFile, in_stream_V_data_0_vld_out, "in_stream_V_data_0_vld_out");
    sc_trace(mVcdFile, in_stream_V_data_0_ack_in, "in_stream_V_data_0_ack_in");
    sc_trace(mVcdFile, in_stream_V_data_0_ack_out, "in_stream_V_data_0_ack_out");
    sc_trace(mVcdFile, in_stream_V_data_0_payload_A, "in_stream_V_data_0_payload_A");
    sc_trace(mVcdFile, in_stream_V_data_0_payload_B, "in_stream_V_data_0_payload_B");
    sc_trace(mVcdFile, in_stream_V_data_0_sel_rd, "in_stream_V_data_0_sel_rd");
    sc_trace(mVcdFile, in_stream_V_data_0_sel_wr, "in_stream_V_data_0_sel_wr");
    sc_trace(mVcdFile, in_stream_V_data_0_sel, "in_stream_V_data_0_sel");
    sc_trace(mVcdFile, in_stream_V_data_0_load_A, "in_stream_V_data_0_load_A");
    sc_trace(mVcdFile, in_stream_V_data_0_load_B, "in_stream_V_data_0_load_B");
    sc_trace(mVcdFile, in_stream_V_data_0_state, "in_stream_V_data_0_state");
    sc_trace(mVcdFile, in_stream_V_data_0_state_cmp_full, "in_stream_V_data_0_state_cmp_full");
    sc_trace(mVcdFile, in_stream_V_last_V_0_vld_in, "in_stream_V_last_V_0_vld_in");
    sc_trace(mVcdFile, in_stream_V_last_V_0_ack_out, "in_stream_V_last_V_0_ack_out");
    sc_trace(mVcdFile, in_stream_V_last_V_0_state, "in_stream_V_last_V_0_state");
    sc_trace(mVcdFile, out_stream_V_data_1_data_out, "out_stream_V_data_1_data_out");
    sc_trace(mVcdFile, out_stream_V_data_1_vld_in, "out_stream_V_data_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_data_1_vld_out, "out_stream_V_data_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_data_1_ack_in, "out_stream_V_data_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_data_1_ack_out, "out_stream_V_data_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_data_1_payload_A, "out_stream_V_data_1_payload_A");
    sc_trace(mVcdFile, out_stream_V_data_1_payload_B, "out_stream_V_data_1_payload_B");
    sc_trace(mVcdFile, out_stream_V_data_1_sel_rd, "out_stream_V_data_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_data_1_sel_wr, "out_stream_V_data_1_sel_wr");
    sc_trace(mVcdFile, out_stream_V_data_1_sel, "out_stream_V_data_1_sel");
    sc_trace(mVcdFile, out_stream_V_data_1_load_A, "out_stream_V_data_1_load_A");
    sc_trace(mVcdFile, out_stream_V_data_1_load_B, "out_stream_V_data_1_load_B");
    sc_trace(mVcdFile, out_stream_V_data_1_state, "out_stream_V_data_1_state");
    sc_trace(mVcdFile, out_stream_V_data_1_state_cmp_full, "out_stream_V_data_1_state_cmp_full");
    sc_trace(mVcdFile, out_stream_V_last_V_1_data_out, "out_stream_V_last_V_1_data_out");
    sc_trace(mVcdFile, out_stream_V_last_V_1_vld_in, "out_stream_V_last_V_1_vld_in");
    sc_trace(mVcdFile, out_stream_V_last_V_1_vld_out, "out_stream_V_last_V_1_vld_out");
    sc_trace(mVcdFile, out_stream_V_last_V_1_ack_in, "out_stream_V_last_V_1_ack_in");
    sc_trace(mVcdFile, out_stream_V_last_V_1_ack_out, "out_stream_V_last_V_1_ack_out");
    sc_trace(mVcdFile, out_stream_V_last_V_1_payload_A, "out_stream_V_last_V_1_payload_A");
    sc_trace(mVcdFile, out_stream_V_last_V_1_payload_B, "out_stream_V_last_V_1_payload_B");
    sc_trace(mVcdFile, out_stream_V_last_V_1_sel_rd, "out_stream_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, out_stream_V_last_V_1_sel_wr, "out_stream_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, out_stream_V_last_V_1_sel, "out_stream_V_last_V_1_sel");
    sc_trace(mVcdFile, out_stream_V_last_V_1_load_A, "out_stream_V_last_V_1_load_A");
    sc_trace(mVcdFile, out_stream_V_last_V_1_load_B, "out_stream_V_last_V_1_load_B");
    sc_trace(mVcdFile, out_stream_V_last_V_1_state, "out_stream_V_last_V_1_state");
    sc_trace(mVcdFile, out_stream_V_last_V_1_state_cmp_full, "out_stream_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, in_stream_TDATA_blk_n, "in_stream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln15_fu_461_p2, "icmp_ln15_fu_461_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln21_fu_493_p2, "icmp_ln21_fu_493_p2");
    sc_trace(mVcdFile, out_stream_TDATA_blk_n, "out_stream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, add_ln10_fu_407_p2, "add_ln10_fu_407_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln10_1_fu_425_p2, "add_ln10_1_fu_425_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, add_ln12_fu_443_p2, "add_ln12_fu_443_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_fu_467_p2, "i_fu_467_p2");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, i_1_fu_499_p2, "i_1_fu_499_p2");
    sc_trace(mVcdFile, ap_block_state6, "ap_block_state6");
    sc_trace(mVcdFile, i_2_fu_531_p2, "i_2_fu_531_p2");
    sc_trace(mVcdFile, i_2_reg_629, "i_2_reg_629");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, zext_ln29_fu_537_p1, "zext_ln29_fu_537_p1");
    sc_trace(mVcdFile, zext_ln29_reg_634, "zext_ln29_reg_634");
    sc_trace(mVcdFile, icmp_ln28_fu_525_p2, "icmp_ln28_fu_525_p2");
    sc_trace(mVcdFile, preamble_M_real_q0, "preamble_M_real_q0");
    sc_trace(mVcdFile, p_r_M_real_reg_660, "p_r_M_real_reg_660");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, preamble_M_imag_q0, "preamble_M_imag_q0");
    sc_trace(mVcdFile, p_r_M_imag_reg_666, "p_r_M_imag_reg_666");
    sc_trace(mVcdFile, training_sym_M_real_q0, "training_sym_M_real_q0");
    sc_trace(mVcdFile, p_t_real_reg_672, "p_t_real_reg_672");
    sc_trace(mVcdFile, training_sym_M_imag_q0, "training_sym_M_imag_q0");
    sc_trace(mVcdFile, p_t_imag_reg_680, "p_t_imag_reg_680");
    sc_trace(mVcdFile, grp_fu_361_p2, "grp_fu_361_p2");
    sc_trace(mVcdFile, tmp_i_i_reg_688, "tmp_i_i_reg_688");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_fu_365_p2, "grp_fu_365_p2");
    sc_trace(mVcdFile, tmp_1_i_i_reg_693, "tmp_1_i_i_reg_693");
    sc_trace(mVcdFile, grp_fu_369_p2, "grp_fu_369_p2");
    sc_trace(mVcdFile, tmp_3_i_i_reg_698, "tmp_3_i_i_reg_698");
    sc_trace(mVcdFile, grp_fu_373_p2, "grp_fu_373_p2");
    sc_trace(mVcdFile, tmp_4_i_i_reg_703, "tmp_4_i_i_reg_703");
    sc_trace(mVcdFile, grp_fu_377_p2, "grp_fu_377_p2");
    sc_trace(mVcdFile, tmp_6_i_i_reg_708, "tmp_6_i_i_reg_708");
    sc_trace(mVcdFile, grp_fu_381_p2, "grp_fu_381_p2");
    sc_trace(mVcdFile, tmp_7_i_i_reg_713, "tmp_7_i_i_reg_713");
    sc_trace(mVcdFile, grp_fu_349_p2, "grp_fu_349_p2");
    sc_trace(mVcdFile, tmp_2_i_i_reg_718, "tmp_2_i_i_reg_718");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, grp_fu_353_p2, "grp_fu_353_p2");
    sc_trace(mVcdFile, tmp_5_i_i_reg_723, "tmp_5_i_i_reg_723");
    sc_trace(mVcdFile, grp_fu_357_p2, "grp_fu_357_p2");
    sc_trace(mVcdFile, tmp_8_i_i_reg_729, "tmp_8_i_i_reg_729");
    sc_trace(mVcdFile, grp_fu_385_p2, "grp_fu_385_p2");
    sc_trace(mVcdFile, complex_M_real_writ_reg_734, "complex_M_real_writ_reg_734");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, grp_fu_389_p2, "grp_fu_389_p2");
    sc_trace(mVcdFile, complex_M_imag_writ_reg_739, "complex_M_imag_writ_reg_739");
    sc_trace(mVcdFile, i_3_fu_551_p2, "i_3_fu_551_p2");
    sc_trace(mVcdFile, i_3_reg_747, "i_3_reg_747");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_block_state35, "ap_block_state35");
    sc_trace(mVcdFile, icmp_ln33_fu_545_p2, "icmp_ln33_fu_545_p2");
    sc_trace(mVcdFile, tmp_last_V_fu_563_p2, "tmp_last_V_fu_563_p2");
    sc_trace(mVcdFile, tmp_last_V_reg_762, "tmp_last_V_reg_762");
    sc_trace(mVcdFile, tmp_data_2_fu_577_p3, "tmp_data_2_fu_577_p3");
    sc_trace(mVcdFile, preamble_M_real_address0, "preamble_M_real_address0");
    sc_trace(mVcdFile, preamble_M_real_ce0, "preamble_M_real_ce0");
    sc_trace(mVcdFile, preamble_M_real_we0, "preamble_M_real_we0");
    sc_trace(mVcdFile, preamble_M_real_d0, "preamble_M_real_d0");
    sc_trace(mVcdFile, preamble_M_imag_address0, "preamble_M_imag_address0");
    sc_trace(mVcdFile, preamble_M_imag_ce0, "preamble_M_imag_ce0");
    sc_trace(mVcdFile, preamble_M_imag_we0, "preamble_M_imag_we0");
    sc_trace(mVcdFile, preamble_M_imag_d0, "preamble_M_imag_d0");
    sc_trace(mVcdFile, training_sym_M_real_address0, "training_sym_M_real_address0");
    sc_trace(mVcdFile, training_sym_M_real_ce0, "training_sym_M_real_ce0");
    sc_trace(mVcdFile, training_sym_M_real_we0, "training_sym_M_real_we0");
    sc_trace(mVcdFile, training_sym_M_real_d0, "training_sym_M_real_d0");
    sc_trace(mVcdFile, training_sym_M_imag_address0, "training_sym_M_imag_address0");
    sc_trace(mVcdFile, training_sym_M_imag_ce0, "training_sym_M_imag_ce0");
    sc_trace(mVcdFile, training_sym_M_imag_we0, "training_sym_M_imag_we0");
    sc_trace(mVcdFile, training_sym_M_imag_d0, "training_sym_M_imag_d0");
    sc_trace(mVcdFile, LS_out_M_real_address0, "LS_out_M_real_address0");
    sc_trace(mVcdFile, LS_out_M_real_ce0, "LS_out_M_real_ce0");
    sc_trace(mVcdFile, LS_out_M_real_we0, "LS_out_M_real_we0");
    sc_trace(mVcdFile, LS_out_M_real_d0, "LS_out_M_real_d0");
    sc_trace(mVcdFile, LS_out_M_real_q0, "LS_out_M_real_q0");
    sc_trace(mVcdFile, LS_out_M_imag_address0, "LS_out_M_imag_address0");
    sc_trace(mVcdFile, LS_out_M_imag_ce0, "LS_out_M_imag_ce0");
    sc_trace(mVcdFile, LS_out_M_imag_we0, "LS_out_M_imag_we0");
    sc_trace(mVcdFile, LS_out_M_imag_d0, "LS_out_M_imag_d0");
    sc_trace(mVcdFile, LS_out_M_imag_q0, "LS_out_M_imag_q0");
    sc_trace(mVcdFile, phi_ln10_reg_272, "phi_ln10_reg_272");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, icmp_ln10_fu_419_p2, "icmp_ln10_fu_419_p2");
    sc_trace(mVcdFile, phi_ln10_1_reg_283, "phi_ln10_1_reg_283");
    sc_trace(mVcdFile, icmp_ln10_1_fu_437_p2, "icmp_ln10_1_fu_437_p2");
    sc_trace(mVcdFile, phi_ln12_reg_294, "phi_ln12_reg_294");
    sc_trace(mVcdFile, icmp_ln12_fu_455_p2, "icmp_ln12_fu_455_p2");
    sc_trace(mVcdFile, i_0_reg_305, "i_0_reg_305");
    sc_trace(mVcdFile, i3_0_reg_316, "i3_0_reg_316");
    sc_trace(mVcdFile, i5_0_reg_327, "i5_0_reg_327");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, i6_0_reg_338, "i6_0_reg_338");
    sc_trace(mVcdFile, zext_ln10_fu_413_p1, "zext_ln10_fu_413_p1");
    sc_trace(mVcdFile, zext_ln10_1_fu_431_p1, "zext_ln10_1_fu_431_p1");
    sc_trace(mVcdFile, zext_ln12_fu_449_p1, "zext_ln12_fu_449_p1");
    sc_trace(mVcdFile, zext_ln18_fu_487_p1, "zext_ln18_fu_487_p1");
    sc_trace(mVcdFile, zext_ln24_fu_519_p1, "zext_ln24_fu_519_p1");
    sc_trace(mVcdFile, zext_ln36_fu_557_p1, "zext_ln36_fu_557_p1");
    sc_trace(mVcdFile, bitcast_ln9_fu_477_p1, "bitcast_ln9_fu_477_p1");
    sc_trace(mVcdFile, bitcast_ln9_1_fu_482_p1, "bitcast_ln9_1_fu_482_p1");
    sc_trace(mVcdFile, bitcast_ln9_2_fu_509_p1, "bitcast_ln9_2_fu_509_p1");
    sc_trace(mVcdFile, bitcast_ln9_3_fu_514_p1, "bitcast_ln9_3_fu_514_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, trunc_ln9_fu_473_p1, "trunc_ln9_fu_473_p1");
    sc_trace(mVcdFile, grp_fu_397_p4, "grp_fu_397_p4");
    sc_trace(mVcdFile, trunc_ln9_1_fu_505_p1, "trunc_ln9_1_fu_505_p1");
    sc_trace(mVcdFile, bitcast_ln162_1_fu_573_p1, "bitcast_ln162_1_fu_573_p1");
    sc_trace(mVcdFile, bitcast_ln162_fu_569_p1, "bitcast_ln162_fu_569_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("LS_estimator.hdltvin.dat");
    mHdltvoutHandle.open("LS_estimator.hdltvout.dat");
}

LS_estimator::~LS_estimator() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete preamble_M_real_U;
    delete preamble_M_imag_U;
    delete training_sym_M_real_U;
    delete training_sym_M_imag_U;
    delete LS_out_M_real_U;
    delete LS_out_M_imag_U;
    delete LS_estimator_faddhbi_U1;
    delete LS_estimator_faddhbi_U2;
    delete LS_estimator_fsubibs_U3;
    delete LS_estimator_fmuljbC_U4;
    delete LS_estimator_fmuljbC_U5;
    delete LS_estimator_fmuljbC_U6;
    delete LS_estimator_fmuljbC_U7;
    delete LS_estimator_fmuljbC_U8;
    delete LS_estimator_fmuljbC_U9;
    delete LS_estimator_fdivkbM_U10;
    delete LS_estimator_fdivkbM_U11;
}

void LS_estimator::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void LS_estimator::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_fu_461_p2.read()))) {
        i3_0_reg_316 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read())))) {
        i3_0_reg_316 = i_1_fu_499_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln21_fu_493_p2.read()))) {
        i5_0_reg_327 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        i5_0_reg_327 = i_2_reg_629.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln28_fu_525_p2.read()))) {
        i6_0_reg_338 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
                esl_seteq<1,1,1>(out_stream_V_data_1_ack_in.read(), ap_const_logic_1))) {
        i6_0_reg_338 = i_3_reg_747.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_fu_455_p2.read()))) {
        i_0_reg_305 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read())))) {
        i_0_reg_305 = i_fu_467_p2.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream_V_data_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_0_vld_out.read()))) {
            in_stream_V_data_0_sel_rd =  (sc_logic) (~in_stream_V_data_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream_V_data_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_0_ack_in.read()))) {
            in_stream_V_data_0_sel_wr =  (sc_logic) (~in_stream_V_data_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream_V_data_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_0_ack_out.read()) && 
              esl_seteq<1,2,2>(in_stream_V_data_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_in.read()) && 
              esl_seteq<1,2,2>(in_stream_V_data_0_state.read(), ap_const_lv2_2)))) {
            in_stream_V_data_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_stream_V_data_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_stream_V_data_0_state.read(), ap_const_lv2_1)))) {
            in_stream_V_data_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(in_stream_V_data_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_stream_V_data_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(in_stream_V_data_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_0_ack_out.read()))))) {
            in_stream_V_data_0_state = ap_const_lv2_3;
        } else {
            in_stream_V_data_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_stream_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in_stream_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in_stream_V_last_V_0_state.read())))) {
            in_stream_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in_stream_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_stream_V_last_V_0_state.read())))) {
            in_stream_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in_stream_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_stream_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in_stream_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_last_V_0_ack_out.read()))))) {
            in_stream_V_last_V_0_state = ap_const_lv2_3;
        } else {
            in_stream_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_data_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_1_vld_out.read()))) {
            out_stream_V_data_1_sel_rd =  (sc_logic) (~out_stream_V_data_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_data_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_1_ack_in.read()))) {
            out_stream_V_data_1_sel_wr =  (sc_logic) (~out_stream_V_data_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_data_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_data_1_state.read())))) {
            out_stream_V_data_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_data_1_state.read())))) {
            out_stream_V_data_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_data_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_data_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_data_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_1_ack_out.read()))))) {
            out_stream_V_data_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_data_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_out.read()))) {
            out_stream_V_last_V_1_sel_rd =  (sc_logic) (~out_stream_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_in.read()))) {
            out_stream_V_last_V_1_sel_wr =  (sc_logic) (~out_stream_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_stream_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_last_V_1_state.read())))) {
            out_stream_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_last_V_1_state.read())))) {
            out_stream_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_ack_out.read()))))) {
            out_stream_V_last_V_1_state = ap_const_lv2_3;
        } else {
            out_stream_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln10_fu_419_p2.read()))) {
        phi_ln10_1_reg_283 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln10_1_fu_437_p2.read()))) {
        phi_ln10_1_reg_283 = add_ln10_1_fu_425_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln10_fu_419_p2.read()))) {
        phi_ln10_reg_272 = add_ln10_fu_407_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        phi_ln10_reg_272 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln10_1_fu_437_p2.read()))) {
        phi_ln12_reg_294 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln12_fu_455_p2.read()))) {
        phi_ln12_reg_294 = add_ln12_fu_443_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        complex_M_imag_writ_reg_739 = grp_fu_389_p2.read();
        complex_M_real_writ_reg_734 = grp_fu_385_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_2_reg_629 = i_2_fu_531_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && !(esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_data_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read()))))) {
        i_3_reg_747 = i_3_fu_551_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_0_load_A.read())) {
        in_stream_V_data_0_payload_A = in_stream_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_0_load_B.read())) {
        in_stream_V_data_0_payload_B = in_stream_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_1_load_A.read())) {
        out_stream_V_data_1_payload_A = tmp_data_2_fu_577_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_1_load_B.read())) {
        out_stream_V_data_1_payload_B = tmp_data_2_fu_577_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_load_A.read())) {
        out_stream_V_last_V_1_payload_A = tmp_last_V_reg_762.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_load_B.read())) {
        out_stream_V_last_V_1_payload_B = tmp_last_V_reg_762.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        p_r_M_imag_reg_666 = preamble_M_imag_q0.read();
        p_r_M_real_reg_660 = preamble_M_real_q0.read();
        p_t_imag_reg_680 = training_sym_M_imag_q0.read();
        p_t_real_reg_672 = training_sym_M_real_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_1_i_i_reg_693 = grp_fu_365_p2.read();
        tmp_3_i_i_reg_698 = grp_fu_369_p2.read();
        tmp_4_i_i_reg_703 = grp_fu_373_p2.read();
        tmp_6_i_i_reg_708 = grp_fu_377_p2.read();
        tmp_7_i_i_reg_713 = grp_fu_381_p2.read();
        tmp_i_i_reg_688 = grp_fu_361_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        tmp_2_i_i_reg_718 = grp_fu_349_p2.read();
        tmp_5_i_i_reg_723 = grp_fu_353_p2.read();
        tmp_8_i_i_reg_729 = grp_fu_357_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && !(esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_data_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_fu_545_p2.read()))) {
        tmp_last_V_reg_762 = tmp_last_V_fu_563_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_fu_525_p2.read()))) {
        zext_ln29_reg_634 = zext_ln29_fu_537_p1.read();
    }
}

void LS_estimator::thread_LS_out_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        LS_out_M_imag_address0 =  (sc_lv<6>) (zext_ln36_fu_557_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        LS_out_M_imag_address0 =  (sc_lv<6>) (zext_ln29_reg_634.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        LS_out_M_imag_address0 =  (sc_lv<6>) (zext_ln12_fu_449_p1.read());
    } else {
        LS_out_M_imag_address0 = "XXXXXX";
    }
}

void LS_estimator::thread_LS_out_M_imag_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
          !(esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_data_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read())))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        LS_out_M_imag_ce0 = ap_const_logic_1;
    } else {
        LS_out_M_imag_ce0 = ap_const_logic_0;
    }
}

void LS_estimator::thread_LS_out_M_imag_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        LS_out_M_imag_d0 = complex_M_imag_writ_reg_739.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        LS_out_M_imag_d0 = ap_const_lv32_0;
    } else {
        LS_out_M_imag_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void LS_estimator::thread_LS_out_M_imag_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        LS_out_M_imag_we0 = ap_const_logic_1;
    } else {
        LS_out_M_imag_we0 = ap_const_logic_0;
    }
}

void LS_estimator::thread_LS_out_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        LS_out_M_real_address0 =  (sc_lv<6>) (zext_ln36_fu_557_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        LS_out_M_real_address0 =  (sc_lv<6>) (zext_ln29_reg_634.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        LS_out_M_real_address0 =  (sc_lv<6>) (zext_ln12_fu_449_p1.read());
    } else {
        LS_out_M_real_address0 = "XXXXXX";
    }
}

void LS_estimator::thread_LS_out_M_real_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
          !(esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_data_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read())))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        LS_out_M_real_ce0 = ap_const_logic_1;
    } else {
        LS_out_M_real_ce0 = ap_const_logic_0;
    }
}

void LS_estimator::thread_LS_out_M_real_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        LS_out_M_real_d0 = complex_M_real_writ_reg_734.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        LS_out_M_real_d0 = ap_const_lv32_0;
    } else {
        LS_out_M_real_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void LS_estimator::thread_LS_out_M_real_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        LS_out_M_real_we0 = ap_const_logic_1;
    } else {
        LS_out_M_real_we0 = ap_const_logic_0;
    }
}

void LS_estimator::thread_add_ln10_1_fu_425_p2() {
    add_ln10_1_fu_425_p2 = (!phi_ln10_1_reg_283.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(phi_ln10_1_reg_283.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void LS_estimator::thread_add_ln10_fu_407_p2() {
    add_ln10_fu_407_p2 = (!phi_ln10_reg_272.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(phi_ln10_reg_272.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void LS_estimator::thread_add_ln12_fu_443_p2() {
    add_ln12_fu_443_p2 = (!phi_ln12_reg_294.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(phi_ln12_reg_294.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void LS_estimator::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void LS_estimator::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void LS_estimator::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void LS_estimator::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void LS_estimator::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void LS_estimator::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void LS_estimator::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void LS_estimator::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void LS_estimator::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void LS_estimator::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void LS_estimator::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void LS_estimator::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void LS_estimator::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void LS_estimator::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void LS_estimator::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void LS_estimator::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void LS_estimator::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void LS_estimator::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void LS_estimator::thread_ap_block_state35() {
    ap_block_state35 = (esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_data_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read())));
}

void LS_estimator::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read()));
}

void LS_estimator::thread_ap_block_state6() {
    ap_block_state6 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read()));
}

void LS_estimator::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void LS_estimator::thread_bitcast_ln162_1_fu_573_p1() {
    bitcast_ln162_1_fu_573_p1 = LS_out_M_imag_q0.read();
}

void LS_estimator::thread_bitcast_ln162_fu_569_p1() {
    bitcast_ln162_fu_569_p1 = LS_out_M_real_q0.read();
}

void LS_estimator::thread_bitcast_ln9_1_fu_482_p1() {
    bitcast_ln9_1_fu_482_p1 = grp_fu_397_p4.read();
}

void LS_estimator::thread_bitcast_ln9_2_fu_509_p1() {
    bitcast_ln9_2_fu_509_p1 = trunc_ln9_1_fu_505_p1.read();
}

void LS_estimator::thread_bitcast_ln9_3_fu_514_p1() {
    bitcast_ln9_3_fu_514_p1 = grp_fu_397_p4.read();
}

void LS_estimator::thread_bitcast_ln9_fu_477_p1() {
    bitcast_ln9_fu_477_p1 = trunc_ln9_fu_473_p1.read();
}

void LS_estimator::thread_grp_fu_397_p4() {
    grp_fu_397_p4 = in_stream_V_data_0_data_out.read().range(63, 32);
}

void LS_estimator::thread_i_1_fu_499_p2() {
    i_1_fu_499_p2 = (!i3_0_reg_316.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i3_0_reg_316.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void LS_estimator::thread_i_2_fu_531_p2() {
    i_2_fu_531_p2 = (!i5_0_reg_327.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i5_0_reg_327.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void LS_estimator::thread_i_3_fu_551_p2() {
    i_3_fu_551_p2 = (!i6_0_reg_338.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i6_0_reg_338.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void LS_estimator::thread_i_fu_467_p2() {
    i_fu_467_p2 = (!i_0_reg_305.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_305.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void LS_estimator::thread_icmp_ln10_1_fu_437_p2() {
    icmp_ln10_1_fu_437_p2 = (!phi_ln10_1_reg_283.read().is_01() || !ap_const_lv6_33.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln10_1_reg_283.read() == ap_const_lv6_33);
}

void LS_estimator::thread_icmp_ln10_fu_419_p2() {
    icmp_ln10_fu_419_p2 = (!phi_ln10_reg_272.read().is_01() || !ap_const_lv6_33.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln10_reg_272.read() == ap_const_lv6_33);
}

void LS_estimator::thread_icmp_ln12_fu_455_p2() {
    icmp_ln12_fu_455_p2 = (!phi_ln12_reg_294.read().is_01() || !ap_const_lv6_33.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln12_reg_294.read() == ap_const_lv6_33);
}

void LS_estimator::thread_icmp_ln15_fu_461_p2() {
    icmp_ln15_fu_461_p2 = (!i_0_reg_305.read().is_01() || !ap_const_lv6_34.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_305.read() == ap_const_lv6_34);
}

void LS_estimator::thread_icmp_ln21_fu_493_p2() {
    icmp_ln21_fu_493_p2 = (!i3_0_reg_316.read().is_01() || !ap_const_lv6_34.is_01())? sc_lv<1>(): sc_lv<1>(i3_0_reg_316.read() == ap_const_lv6_34);
}

void LS_estimator::thread_icmp_ln28_fu_525_p2() {
    icmp_ln28_fu_525_p2 = (!i5_0_reg_327.read().is_01() || !ap_const_lv6_34.is_01())? sc_lv<1>(): sc_lv<1>(i5_0_reg_327.read() == ap_const_lv6_34);
}

void LS_estimator::thread_icmp_ln33_fu_545_p2() {
    icmp_ln33_fu_545_p2 = (!i6_0_reg_338.read().is_01() || !ap_const_lv6_34.is_01())? sc_lv<1>(): sc_lv<1>(i6_0_reg_338.read() == ap_const_lv6_34);
}

void LS_estimator::thread_in_stream_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read())))) {
        in_stream_TDATA_blk_n = in_stream_V_data_0_state.read()[0];
    } else {
        in_stream_TDATA_blk_n = ap_const_logic_1;
    }
}

void LS_estimator::thread_in_stream_TREADY() {
    in_stream_TREADY = in_stream_V_last_V_0_state.read()[1];
}

void LS_estimator::thread_in_stream_V_data_0_ack_in() {
    in_stream_V_data_0_ack_in = in_stream_V_data_0_state.read()[1];
}

void LS_estimator::thread_in_stream_V_data_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read()))))) {
        in_stream_V_data_0_ack_out = ap_const_logic_1;
    } else {
        in_stream_V_data_0_ack_out = ap_const_logic_0;
    }
}

void LS_estimator::thread_in_stream_V_data_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_stream_V_data_0_sel.read())) {
        in_stream_V_data_0_data_out = in_stream_V_data_0_payload_B.read();
    } else {
        in_stream_V_data_0_data_out = in_stream_V_data_0_payload_A.read();
    }
}

void LS_estimator::thread_in_stream_V_data_0_load_A() {
    in_stream_V_data_0_load_A = (in_stream_V_data_0_state_cmp_full.read() & ~in_stream_V_data_0_sel_wr.read());
}

void LS_estimator::thread_in_stream_V_data_0_load_B() {
    in_stream_V_data_0_load_B = (in_stream_V_data_0_sel_wr.read() & in_stream_V_data_0_state_cmp_full.read());
}

void LS_estimator::thread_in_stream_V_data_0_sel() {
    in_stream_V_data_0_sel = in_stream_V_data_0_sel_rd.read();
}

void LS_estimator::thread_in_stream_V_data_0_state_cmp_full() {
    in_stream_V_data_0_state_cmp_full =  (sc_logic) ((!in_stream_V_data_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_stream_V_data_0_state.read() != ap_const_lv2_1))[0];
}

void LS_estimator::thread_in_stream_V_data_0_vld_in() {
    in_stream_V_data_0_vld_in = in_stream_TVALID.read();
}

void LS_estimator::thread_in_stream_V_data_0_vld_out() {
    in_stream_V_data_0_vld_out = in_stream_V_data_0_state.read()[0];
}

void LS_estimator::thread_in_stream_V_last_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read()))))) {
        in_stream_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        in_stream_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void LS_estimator::thread_in_stream_V_last_V_0_vld_in() {
    in_stream_V_last_V_0_vld_in = in_stream_TVALID.read();
}

void LS_estimator::thread_out_stream_TDATA() {
    out_stream_TDATA = out_stream_V_data_1_data_out.read();
}

void LS_estimator::thread_out_stream_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        out_stream_TDATA_blk_n = out_stream_V_data_1_state.read()[1];
    } else {
        out_stream_TDATA_blk_n = ap_const_logic_1;
    }
}

void LS_estimator::thread_out_stream_TLAST() {
    out_stream_TLAST = out_stream_V_last_V_1_data_out.read();
}

void LS_estimator::thread_out_stream_TVALID() {
    out_stream_TVALID = out_stream_V_last_V_1_state.read()[0];
}

void LS_estimator::thread_out_stream_V_data_1_ack_in() {
    out_stream_V_data_1_ack_in = out_stream_V_data_1_state.read()[1];
}

void LS_estimator::thread_out_stream_V_data_1_ack_out() {
    out_stream_V_data_1_ack_out = out_stream_TREADY.read();
}

void LS_estimator::thread_out_stream_V_data_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_data_1_sel.read())) {
        out_stream_V_data_1_data_out = out_stream_V_data_1_payload_B.read();
    } else {
        out_stream_V_data_1_data_out = out_stream_V_data_1_payload_A.read();
    }
}

void LS_estimator::thread_out_stream_V_data_1_load_A() {
    out_stream_V_data_1_load_A = (out_stream_V_data_1_state_cmp_full.read() & ~out_stream_V_data_1_sel_wr.read());
}

void LS_estimator::thread_out_stream_V_data_1_load_B() {
    out_stream_V_data_1_load_B = (out_stream_V_data_1_sel_wr.read() & out_stream_V_data_1_state_cmp_full.read());
}

void LS_estimator::thread_out_stream_V_data_1_sel() {
    out_stream_V_data_1_sel = out_stream_V_data_1_sel_rd.read();
}

void LS_estimator::thread_out_stream_V_data_1_state_cmp_full() {
    out_stream_V_data_1_state_cmp_full =  (sc_logic) ((!out_stream_V_data_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_stream_V_data_1_state.read() != ap_const_lv2_1))[0];
}

void LS_estimator::thread_out_stream_V_data_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
         esl_seteq<1,1,1>(out_stream_V_data_1_ack_in.read(), ap_const_logic_1))) {
        out_stream_V_data_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_data_1_vld_in = ap_const_logic_0;
    }
}

void LS_estimator::thread_out_stream_V_data_1_vld_out() {
    out_stream_V_data_1_vld_out = out_stream_V_data_1_state.read()[0];
}

void LS_estimator::thread_out_stream_V_last_V_1_ack_in() {
    out_stream_V_last_V_1_ack_in = out_stream_V_last_V_1_state.read()[1];
}

void LS_estimator::thread_out_stream_V_last_V_1_ack_out() {
    out_stream_V_last_V_1_ack_out = out_stream_TREADY.read();
}

void LS_estimator::thread_out_stream_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_stream_V_last_V_1_sel.read())) {
        out_stream_V_last_V_1_data_out = out_stream_V_last_V_1_payload_B.read();
    } else {
        out_stream_V_last_V_1_data_out = out_stream_V_last_V_1_payload_A.read();
    }
}

void LS_estimator::thread_out_stream_V_last_V_1_load_A() {
    out_stream_V_last_V_1_load_A = (out_stream_V_last_V_1_state_cmp_full.read() & ~out_stream_V_last_V_1_sel_wr.read());
}

void LS_estimator::thread_out_stream_V_last_V_1_load_B() {
    out_stream_V_last_V_1_load_B = (out_stream_V_last_V_1_sel_wr.read() & out_stream_V_last_V_1_state_cmp_full.read());
}

void LS_estimator::thread_out_stream_V_last_V_1_sel() {
    out_stream_V_last_V_1_sel = out_stream_V_last_V_1_sel_rd.read();
}

void LS_estimator::thread_out_stream_V_last_V_1_state_cmp_full() {
    out_stream_V_last_V_1_state_cmp_full =  (sc_logic) ((!out_stream_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_stream_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void LS_estimator::thread_out_stream_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
         esl_seteq<1,1,1>(out_stream_V_data_1_ack_in.read(), ap_const_logic_1))) {
        out_stream_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        out_stream_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void LS_estimator::thread_out_stream_V_last_V_1_vld_out() {
    out_stream_V_last_V_1_vld_out = out_stream_V_last_V_1_state.read()[0];
}

void LS_estimator::thread_preamble_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        preamble_M_imag_address0 =  (sc_lv<6>) (zext_ln29_fu_537_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        preamble_M_imag_address0 =  (sc_lv<6>) (zext_ln18_fu_487_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        preamble_M_imag_address0 =  (sc_lv<6>) (zext_ln10_fu_413_p1.read());
    } else {
        preamble_M_imag_address0 = "XXXXXX";
    }
}

void LS_estimator::thread_preamble_M_imag_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        preamble_M_imag_ce0 = ap_const_logic_1;
    } else {
        preamble_M_imag_ce0 = ap_const_logic_0;
    }
}

void LS_estimator::thread_preamble_M_imag_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        preamble_M_imag_d0 = bitcast_ln9_1_fu_482_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        preamble_M_imag_d0 = ap_const_lv32_0;
    } else {
        preamble_M_imag_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void LS_estimator::thread_preamble_M_imag_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read()))))) {
        preamble_M_imag_we0 = ap_const_logic_1;
    } else {
        preamble_M_imag_we0 = ap_const_logic_0;
    }
}

void LS_estimator::thread_preamble_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        preamble_M_real_address0 =  (sc_lv<6>) (zext_ln29_fu_537_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        preamble_M_real_address0 =  (sc_lv<6>) (zext_ln18_fu_487_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        preamble_M_real_address0 =  (sc_lv<6>) (zext_ln10_fu_413_p1.read());
    } else {
        preamble_M_real_address0 = "XXXXXX";
    }
}

void LS_estimator::thread_preamble_M_real_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        preamble_M_real_ce0 = ap_const_logic_1;
    } else {
        preamble_M_real_ce0 = ap_const_logic_0;
    }
}

void LS_estimator::thread_preamble_M_real_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        preamble_M_real_d0 = bitcast_ln9_fu_477_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        preamble_M_real_d0 = ap_const_lv32_0;
    } else {
        preamble_M_real_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void LS_estimator::thread_preamble_M_real_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read()))))) {
        preamble_M_real_we0 = ap_const_logic_1;
    } else {
        preamble_M_real_we0 = ap_const_logic_0;
    }
}

void LS_estimator::thread_tmp_data_2_fu_577_p3() {
    tmp_data_2_fu_577_p3 = esl_concat<32,32>(bitcast_ln162_1_fu_573_p1.read(), bitcast_ln162_fu_569_p1.read());
}

void LS_estimator::thread_tmp_last_V_fu_563_p2() {
    tmp_last_V_fu_563_p2 = (!i6_0_reg_338.read().is_01() || !ap_const_lv6_33.is_01())? sc_lv<1>(): sc_lv<1>(i6_0_reg_338.read() == ap_const_lv6_33);
}

void LS_estimator::thread_training_sym_M_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        training_sym_M_imag_address0 =  (sc_lv<6>) (zext_ln29_fu_537_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        training_sym_M_imag_address0 =  (sc_lv<6>) (zext_ln24_fu_519_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        training_sym_M_imag_address0 =  (sc_lv<6>) (zext_ln10_1_fu_431_p1.read());
    } else {
        training_sym_M_imag_address0 = "XXXXXX";
    }
}

void LS_estimator::thread_training_sym_M_imag_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        training_sym_M_imag_ce0 = ap_const_logic_1;
    } else {
        training_sym_M_imag_ce0 = ap_const_logic_0;
    }
}

void LS_estimator::thread_training_sym_M_imag_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        training_sym_M_imag_d0 = bitcast_ln9_3_fu_514_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        training_sym_M_imag_d0 = ap_const_lv32_0;
    } else {
        training_sym_M_imag_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void LS_estimator::thread_training_sym_M_imag_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read()))))) {
        training_sym_M_imag_we0 = ap_const_logic_1;
    } else {
        training_sym_M_imag_we0 = ap_const_logic_0;
    }
}

void LS_estimator::thread_training_sym_M_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        training_sym_M_real_address0 =  (sc_lv<6>) (zext_ln29_fu_537_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        training_sym_M_real_address0 =  (sc_lv<6>) (zext_ln24_fu_519_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        training_sym_M_real_address0 =  (sc_lv<6>) (zext_ln10_1_fu_431_p1.read());
    } else {
        training_sym_M_real_address0 = "XXXXXX";
    }
}

void LS_estimator::thread_training_sym_M_real_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        training_sym_M_real_ce0 = ap_const_logic_1;
    } else {
        training_sym_M_real_ce0 = ap_const_logic_0;
    }
}

void LS_estimator::thread_training_sym_M_real_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        training_sym_M_real_d0 = bitcast_ln9_2_fu_509_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        training_sym_M_real_d0 = ap_const_lv32_0;
    } else {
        training_sym_M_real_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void LS_estimator::thread_training_sym_M_real_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read()))))) {
        training_sym_M_real_we0 = ap_const_logic_1;
    } else {
        training_sym_M_real_we0 = ap_const_logic_0;
    }
}

void LS_estimator::thread_trunc_ln9_1_fu_505_p1() {
    trunc_ln9_1_fu_505_p1 = in_stream_V_data_0_data_out.read().range(32-1, 0);
}

void LS_estimator::thread_trunc_ln9_fu_473_p1() {
    trunc_ln9_fu_473_p1 = in_stream_V_data_0_data_out.read().range(32-1, 0);
}

void LS_estimator::thread_zext_ln10_1_fu_431_p1() {
    zext_ln10_1_fu_431_p1 = esl_zext<64,6>(phi_ln10_1_reg_283.read());
}

void LS_estimator::thread_zext_ln10_fu_413_p1() {
    zext_ln10_fu_413_p1 = esl_zext<64,6>(phi_ln10_reg_272.read());
}

void LS_estimator::thread_zext_ln12_fu_449_p1() {
    zext_ln12_fu_449_p1 = esl_zext<64,6>(phi_ln12_reg_294.read());
}

void LS_estimator::thread_zext_ln18_fu_487_p1() {
    zext_ln18_fu_487_p1 = esl_zext<64,6>(i_0_reg_305.read());
}

void LS_estimator::thread_zext_ln24_fu_519_p1() {
    zext_ln24_fu_519_p1 = esl_zext<64,6>(i3_0_reg_316.read());
}

void LS_estimator::thread_zext_ln29_fu_537_p1() {
    zext_ln29_fu_537_p1 = esl_zext<64,6>(i5_0_reg_327.read());
}

void LS_estimator::thread_zext_ln36_fu_557_p1() {
    zext_ln36_fu_557_p1 = esl_zext<64,6>(i6_0_reg_338.read());
}

void LS_estimator::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln10_fu_419_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln10_1_fu_437_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_fu_455_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_fu_461_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln15_fu_461_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read())))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln21_fu_493_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_493_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_data_0_vld_out.read())))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln28_fu_525_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state35;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 17179869184 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && !(esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_data_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read()))) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln33_fu_545_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && !(esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_data_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, out_stream_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_data_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, out_stream_V_last_V_1_state.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_fu_545_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state36;
            } else {
                ap_NS_fsm = ap_ST_fsm_state35;
            }
            break;
        case 34359738368 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && esl_seteq<1,1,1>(out_stream_V_data_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state36;
            }
            break;
        case 68719476736 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(out_stream_V_data_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state35;
            } else {
                ap_NS_fsm = ap_ST_fsm_state37;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<37>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void LS_estimator::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TDATA\" :  \"" << in_stream_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TVALID\" :  \"" << in_stream_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_stream_TREADY\" :  \"" << in_stream_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_TLAST\" :  \"" << in_stream_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TDATA\" :  \"" << out_stream_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TVALID\" :  \"" << out_stream_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_stream_TREADY\" :  \"" << out_stream_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_TLAST\" :  \"" << out_stream_TLAST.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

