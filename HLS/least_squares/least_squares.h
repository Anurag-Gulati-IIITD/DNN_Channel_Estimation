#include <hls_stream.h>
#include "complex"
#include "ap_int.h"

#define nASC 52 // number of active subcarriers

typedef std::complex<float> COMPLEXD;

struct axis_data
{ // AXI stream data struct
	COMPLEXD data;
	ap_uint<1> last;
};

// testbench data
const COMPLEXD PREAMBLE[nASC] = {0.2486784 + 0.268873i, 0.3967416 + 0.07777733i, -0.3367034 + 0.2408577i, -0.1121446 + 0.4627037i, -0.1919737 - 0.4328638i, -0.4733489 - 0.1795908i, 0.546817 - 0.1834718i, -0.2293449 + 0.5474622i, -0.1624201 - 0.5515978i, 0.5578327 + 0.3119908i, 0.6151541 - 0.1367495i, 0.3447794 - 0.4981567i, -0.09478433 - 0.5700862i, -0.4537969 - 0.3244922i, -0.5431156 + 0.08649967i, 0.3820651 - 0.3932507i, 0.01575558 - 0.5036077i, 0.3552808 + 0.3897898i, 0.4902035 + 0.08018934i, -0.3536029 + 0.260872i, 0.1530501 - 0.3832643i, 0.1657912 + 0.3975107i, -0.3107351 - 0.1800347i, -0.3522729 + 0.06563205i, -0.2407279 + 0.2813288i, -0.02355883 + 0.3854306i, 0.3714561 + 0.146614i, -0.33062 + 0.1439119i, -0.1703037 + 0.3428492i, -0.03902991 - 0.3513918i, -0.2632678 - 0.2209357i, 0.3899319 + 0.01660445i, -0.2474539 + 0.2550738i, 0.07360574 - 0.3213289i, 0.1936771 + 0.3004884i, -0.2706124 - 0.08317608i, -0.2533499 + 0.1142443i, -0.1306967 + 0.2463272i, 0.0297361 + 0.2784007i, 0.1695658 + 0.2216625i, -0.2112055 - 0.06558528i, -0.2260202 + 0.08163007i, 0.1997468 - 0.1847943i, 0.04445923 - 0.2703318i, 0.1967965 + 0.2809112i, -0.3006369 - 0.07791528i, 0.3513784 - 0.124406i, -0.1373842 + 0.3618568i, -0.09082536 - 0.3545879i, -0.319765 - 0.1855084i, -0.370316 + 0.09900445i, -0.2115861 + 0.338836i};

const COMPLEXD TRAINING_SYM[nASC] = {
	1.000000 + 0i, 1.000000 + 0i, -1.000000 + 0i, -1.000000 + 0i, 1.000000 + 0i, 1.000000 + 0i, -1.000000 + 0i, 1.000000 + 0i, -1.000000 + 0i, 1.000000 + 0i, 1.000000 + 0i,
	1.000000 + 0i, 1.000000 + 0i, 1.000000 + 0i, 1.000000 + 0i, -1.000000 + 0i, -1.000000 + 0i, 1.000000 + 0i, 1.000000 + 0i, -1.000000 + 0i, 1.000000 + 0i, -1.000000 + 0i,
	1.000000 + 0i, 1.000000 + 0i, 1.000000 + 0i, 1.000000 + 0i, 1.000000 + 0i, -1.000000 + 0i, -1.000000 + 0i, 1.000000 + 0i, 1.000000 + 0i, -1.000000 + 0i, 1.000000 + 0i,
	-1.000000 + 0i, 1.000000 + 0i, -1.000000 + 0i, -1.000000 + 0i, -1.000000 + 0i, -1.000000 + 0i, -1.000000 + 0i, 1.000000 + 0i, 1.000000 + 0i, -1.000000 + 0i, -1.000000 + 0i,
	1.000000 + 0i, -1.000000 + 0i, 1.000000 + 0i, -1.000000 + 0i, 1.000000 + 0i, 1.000000 + 0i, 1.000000 + 0i, 1.000000 + 0i};

const COMPLEXD LS_GOLD[nASC] = {0.2262998 + 0.249082i, 0.374363 + 0.05798633i, 0.359082 - 0.2210667i, 0.1345232 - 0.4429127i, -0.2143523 - 0.4526548i, -0.4957275 - 0.1993818i, -0.5244384 + 0.2032628i, -0.2517235 + 0.5276712i, 0.1847987 + 0.5713888i, 0.5354541 + 0.2921998i, 0.5927755 - 0.1565405i, 0.3224008 - 0.5179477i, -0.1171629 - 0.5898772i, -0.4761755 - 0.3442833i, -0.5654942 + 0.06670866i, -0.3596865 + 0.4130417i, 0.006623023 + 0.5233988i, 0.3329022 + 0.3699988i, 0.4678249 + 0.06039833i, 0.3759815 - 0.241081i, 0.1306715 - 0.4030553i, -0.1434126 - 0.3777197i, -0.3331137 - 0.1998257i, -0.3746515 + 0.04584105i, -0.2631065 + 0.2615378i, -0.04593743 + 0.3656396i, 0.3490775 + 0.126823i, 0.3529986 - 0.1241209i, 0.1926823 - 0.3230582i, -0.06140852 - 0.3711828i, -0.2856464 - 0.2407267i, -0.3675534 + 0.003186563i, -0.2698325 + 0.2352828i, -0.05122714 + 0.3411199i, 0.1712985 + 0.2806974i, 0.292991 + 0.1029671i, 0.2757285 - 0.09445327i, 0.1530754 - 0.2265362i, -0.0073575 - 0.2586097i, -0.1471872 - 0.2018715i, -0.2335841 - 0.08537629i, -0.2483988 + 0.06183907i, -0.1773682 + 0.2045853i, -0.02208063 + 0.2901228i, 0.1744179 + 0.2611202i, 0.3230155 + 0.0977063i, 0.3289998 - 0.144197i, 0.1597628 - 0.3420658i, -0.113204 - 0.3743789i, -0.3421436 - 0.2052994i, -0.3926946 + 0.07921345i, -0.2339647 + 0.3190449i};

// estimator function
void LS_estimator(hls::stream<axis_data> &in_stream, hls::stream<axis_data> &out_stream);
